{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/core/viewmatrixplugin.ts","webpack:///./src/utils/objects.ts","webpack:///./src/plugins/autoplay.ts","webpack:///./src/utils/string.ts","webpack:///./src/utils/html.ts","webpack:///./src/utils/point.ts","webpack:///./src/plugins/touchswipe.ts","webpack:///./src/utils/emitter.ts","webpack:///./src/core/viewmatrix.ts","webpack:///./src/utils/math.ts","webpack:///./src/index.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","merge","target","sources","_i","arguments","length","TypeError","to","index","nextSource","nextKey","_super","AutoplayPlugin","options","_this","this","defaults","cancelOnSlide","classAlias","direction","instant","interval","cancelAutoplay","intervalId","handleAutoplay","instance","inc","handleSlideChange","pause","__extends","onInit","on","play","onDestroy","off","emit","window","setInterval","toggleClass","clearInterval","viewmatrixplugin","sanitize","str","trim","replace","addClassToElement","el","HTMLElement","classes","split","result","className","classes_1","indexOf","removeClassFromElement","Array","classes_2","removeAttribute","setElementStyle","style","getAttribute","RegExp","setAttribute","toggleClassInElement","condition","Point","x","y","getFromEvent","event","touchIndex","point","TouchEvent","touches","pageX","pageY","MouseEvent","clone","add","sub","multiply","divide","TouchSwipePlugin","preventDefault","tolerance","vertical","touchStart","undefined","touchLast","touchDelta","cancelTouch","handleTouchStart","coords","offsetLeft","offsetWidth","offsetTop","offsetHeight","inElementBounds","element","handleTouchMove","xAbs","Math","abs","yAbs","delta","handleTouchEnd","touchswipe_extends","document","addEventListener","passive","removeEventListener","Emitter","callbacks","callback","key","push","once","apply","splice","args","_a","callbacks_1","slice","listeners","hasListeners","ViewMatrix","parentSelector","plugins","children","startingIndex","childrenSelector","classAliases","infinite","child","current","behind","ahead","beyond","classPrefix","adjacentCount","handleZIndex","wrap","currentIndex","autoplay","touchswipe","initialize","viewmatrix_extends","destroy","querySelector","Error","selector","querySelectorAll","wrapIndex","prepareClassNames","initializePlugins","slide","destroyPlugins","childrenCount","max","distanceCount","floor","indexCount","distance","isAhead","isBehind","isBeyond","increment","prefix","aliases","k","min","clamp","emitter","viewmatrix"],"mappings":";;;;gBACA,IAAAA,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,IACAG,EAAAH,EACAI,GAAA,EACAH,YAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAZ,EAAAmB,EAAA,SAAAjB,GACAY,OAAAC,eAAAb,EAAA,cAAiDkB,OAAA,KAIjDpB,EAAAqB,EAAA,SAAAlB,GACA,IAAAS,EAAAT,KAAAmB,WACA,WAA2B,OAAAnB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAU,EAAAC,GAAsD,OAAAV,OAAAW,UAAAC,eAAAnB,KAAAgB,EAAAC,IAGtDxB,EAAA2B,EAAA,GAIA3B,IAAA4B,EAAA,yCCjEA,iBAiBA,OAjBA,gBCGM,SAAAC,EAAkCC,OAAW,IAAAC,KAAAC,EAAA,EAAAA,EAAAC,UAAAC,OAAAF,IAAAD,EAAAC,EAAA,GAAAC,UAAAD,GAClD,GAAc,MAAVF,EACH,MAAM,IAAIK,UAAU,8CAGrB,IADA,IAAMC,EAAKtB,OAAOgB,GACTO,EAAQ,EAAGA,EAAQJ,UAAUC,OAAQG,IAAS,CACtD,IAAMC,EAAaL,UAAUI,GAC7B,GAAkB,MAAdC,EACH,IAAK,IAAMC,KAAWD,EACjBxB,OAAOW,UAAUC,eAAenB,KAAK+B,EAAYC,KACpDH,EAAGG,GAAWD,EAAWC,IAK7B,OAAOH,gSCSR,SAAAI,GAgCC,SAAAC,EAAmBC,GAAnB,IAAAC,EACCH,EAAAjC,KAAAqC,OAAOA,YA5BQD,EAAAD,WAKGC,EAAAE,UAClBC,eAAe,EACfC,WAAY,cACZC,UAAW,EACXC,SAAS,EACTC,SAAU,KAMHP,EAAAQ,gBAA0B,EAK1BR,EAAAS,WAAqB,EAkErBT,EAAAU,eAAiB,WACxBV,EAAKQ,gBAAiB,EACtBR,EAAKW,SAASC,IAAIZ,EAAKD,QAAQM,YAOxBL,EAAAa,kBAAoB,WACvBb,EAAKQ,iBAAiD,IAA/BR,EAAKD,QAAQI,eACvCH,EAAKc,QAENd,EAAKQ,gBAAiB,GAvEtBtB,EAAMc,EAAKD,QAASC,EAAKE,SAAUH,KA0ErC,OA5G4CgB,EAAAjB,EAAAD,GAwCpCC,EAAAhB,UAAAkC,OAAP,WACCf,KAAKU,SAASM,GAAG,cAAehB,KAAKY,oBACR,IAAzBZ,KAAKF,QAAQO,SAChBL,KAAKiB,QAOApB,EAAAhB,UAAAqC,UAAP,WACClB,KAAKU,SAASS,IAAI,cAAenB,KAAKY,mBACtCZ,KAAKa,OAAM,IAOLhB,EAAAhB,UAAAoC,KAAP,SAAYG,GACXpB,KAAKa,OAAM,GACXb,KAAKQ,WAAaa,OAAOC,YAAYtB,KAAKS,eAAgBT,KAAKF,QAAQQ,UACnEN,KAAKF,QAAQK,YAChBH,KAAKU,SAASa,YAAYvB,KAAKF,QAAQK,YAAY,IAEvC,IAATiB,GACHpB,KAAKU,SAASU,KAAK,mBAQdvB,EAAAhB,UAAAgC,MAAP,SAAaO,GACY,IAApBpB,KAAKQ,aAGTgB,cAAcxB,KAAKQ,YACnBR,KAAKQ,WAAa,EACdR,KAAKF,QAAQK,YAChBH,KAAKU,SAASa,YAAYvB,KAAKF,QAAQK,YAAY,IAEvC,IAATiB,GACHpB,KAAKU,SAASU,KAAK,oBAwBtBvB,EA5GA,CAA4C4B,GCzBtC,SAAAC,EAAmBC,GACxB,OAAQ,GAAKA,GAAKC,OAAOC,QAAQ,SAAU,KCGtC,SAAAC,EAA4BC,EAAiBJ,GAClD,GAAMI,aAAcC,YAApB,CAGA,IAFA,IAAMC,EAAUP,EAASC,GAAKO,MAAM,KAChCC,EAASJ,EAAGK,UAAUR,OACVxC,EAAA,EAAAiD,EAAAJ,EAAA7C,EAAAiD,EAAA/C,OAAAF,IAAO,CAAlB,IAAMvB,EAACwE,EAAAjD,IACgB,IAAvB+C,EAAOG,QAAQzE,KAClBsE,EAASA,EAAS,IAAMtE,GAG1BkE,EAAGK,UAAYV,EAASS,IA8BnB,SAAAI,EAAiCR,EAAiBJ,GACvD,GAAMI,aAAcC,YAApB,CAKA,IAJA,IAAMC,EAAYN,aAAea,MAE9Bb,EADAD,EAASC,GAAKO,MAAM,KAEnBC,EAASJ,EAAGK,UAAUR,OACVxC,EAAA,EAAAqD,EAAAR,EAAA7C,EAAAqD,EAAAnD,OAAAF,IAAO,CAAlB,IAAMvB,EAAC4E,EAAArD,IACgB,IAAvB+C,EAAOG,QAAQzE,KAClBsE,EAASA,EAAON,QAAQhE,EAAG,KAG7BkE,EAAGK,UAAYV,EAASS,GACI,IAAxBJ,EAAGK,UAAU9C,QAChByC,EAAGW,gBAAgB,UAWf,SAAAC,EAA0BZ,EAAiBhE,EAAcS,GAC9D,IAAIoE,EAAQlB,EAASK,EAAGc,aAAa,UAAY,IAajD,OAZa,MAATrE,IAAgD,IAA/BoE,EAAMN,QAAQvE,EAAO,OACzC6E,EAAQA,EAAMf,QAAQ,IAAIiB,OAAO/E,EAAO,UAAW,KAAM,KAE7C,MAATS,IACHoE,GAAS7E,EAAO,IAAMS,EAAQ,KAE3BoE,EAAMtD,OAAS,EAClByC,EAAGgB,aAAa,QAASrB,EAASkB,IAGlCb,EAAGW,gBAAgB,SAEbE,EAWF,SAAAI,EAA+BjB,EAAiBJ,EAAasB,GAOlE,OANIA,EACHnB,EAAkBC,EAAIJ,GAGtBY,EAAuBR,EAAIJ,GAErBsB,ECvGR,iBAmCC,SAAAC,EAAYC,EAAeC,QAAf,IAAAD,MAAA,QAAe,IAAAC,MAAA,GAC1BpD,KAAKmD,EAAIA,EACTnD,KAAKoD,EAAIA,EAkDX,OAhFeF,EAAAG,aAAd,SAA2BC,EAAgCC,QAAA,IAAAA,MAAA,GAC1D,IAAMC,EAAQ,IAAIN,EASlB,OARII,aAAiBG,YAAcH,EAAMI,SACxCF,EAAML,EAAIG,EAAMI,QAAQH,GAAYI,MACpCH,EAAMJ,EAAIE,EAAMI,QAAQH,GAAYK,OAE5BN,aAAiBO,aACzBL,EAAML,EAAIG,EAAMK,MAChBH,EAAMJ,EAAIE,EAAMM,OAEVJ,GA0BDN,EAAArE,UAAAiF,MAAP,WACC,OAAO,IAAIZ,EAAMlD,KAAKmD,EAAGnD,KAAKoD,IAOxBF,EAAArE,UAAAkF,IAAP,SAAWP,GAGV,OAFAxD,KAAKmD,GAAKK,EAAML,EAChBnD,KAAKoD,GAAKI,EAAMJ,EACTpD,MAODkD,EAAArE,UAAAmF,IAAP,SAAWR,GAGV,OAFAxD,KAAKmD,GAAKK,EAAML,EAChBnD,KAAKoD,GAAKI,EAAMJ,EACTpD,MAODkD,EAAArE,UAAAoF,SAAP,SAAgBT,GAGf,OAFAxD,KAAKmD,GAAKK,EAAML,EAChBnD,KAAKoD,GAAKI,EAAMJ,EACTpD,MAODkD,EAAArE,UAAAqF,OAAP,SAAcV,GAGb,OAFAxD,KAAKmD,GAAKK,EAAML,EAChBnD,KAAKoD,GAAKI,EAAMJ,EACTpD,MAGTkD,EAvFA,kTC2BA,SAAAtD,GAyCC,SAAAuE,EAAmBrE,GAAnB,IAAAC,EACCH,EAAAjC,KAAAqC,OAAOA,YArCQD,EAAAD,WAKCC,EAAAE,UAChBE,WAAY,WACZiE,gBAAgB,EAChBC,UAAW,GACXC,UAAU,GAMHvE,EAAAwE,gBAAqBC,EAKrBzE,EAAA0E,eAAoBD,EAKpBzE,EAAA2E,gBAAqBF,EAKrBzE,EAAAb,YAAuBsF,EAiDvBzE,EAAA4E,YAAc,SAACvD,GAClBrB,EAAKD,QAAQK,YAChBJ,EAAKW,SAASa,YAAYxB,EAAKD,QAAQK,YAAY,IAEvC,IAATiB,GACHrB,EAAKW,SAASU,KAAK,eAAgBrB,EAAKb,OAAQa,EAAK0E,WAEtD1E,EAAKwE,gBAAaC,EAClBzE,EAAK0E,eAAYD,EACjBzE,EAAKb,YAASsF,GAOPzE,EAAA6E,iBAAmB,SAACtB,GAC3B,IAAMuB,EAASrB,EAAMH,aAAaC,IAC7BvD,EAAKwE,YF7FN,SAA0BrF,EAAqB2F,GACpD,OAAO3F,GACN2F,EAAO1B,GAAKjE,EAAO4F,YAAcD,EAAO1B,GAAKjE,EAAO4F,WAAa5F,EAAO6F,aACxEF,EAAOzB,GAAKlE,EAAO8F,WAAaH,EAAOzB,GAAKlE,EAAO8F,UAAY9F,EAAO+F,aE0F9CC,CAAgBnF,EAAKW,SAASyE,QAASN,KAC9D9E,EAAKwE,WAAaM,EAClB9E,EAAK0E,UAAYI,EACjB9E,EAAKb,OAASa,EAAKW,SAASyE,QACxBpF,EAAKD,QAAQsE,gBAChBd,EAAMc,iBAEHrE,EAAKD,QAAQK,YAChBJ,EAAKW,SAASa,YAAYxB,EAAKD,QAAQK,YAAY,GAEpDJ,EAAKW,SAASU,KAAK,cAAerB,EAAKb,OAAQ2F,KAQzC9E,EAAAqF,gBAAkB,SAAC9B,GAC1B,GAAKvD,EAAKwE,WAAV,CACAxE,EAAK0E,UAAYjB,EAAMH,aAAaC,GACpCvD,EAAK2E,WAAa3E,EAAKwE,WAAWT,QAAQE,IAAIjE,EAAK0E,WACnD1E,EAAKW,SAASU,KAAK,aAAcrB,EAAKb,OAAQa,EAAK2E,WAAY3E,EAAK4E,aAEpE,IAAMU,EAAOC,KAAKC,IAAIxF,EAAK2E,WAAWvB,GAChCqC,EAAOF,KAAKC,IAAIxF,EAAK2E,WAAWtB,GAClCqC,EAAQ,EAERJ,EAAOG,IAASzF,EAAKD,QAAQwE,SAEhCmB,EAAQ1F,EAAK2E,WAAWvB,EAEhBkC,EAAOG,GAAQzF,EAAKD,QAAQwE,WAEpCmB,EAAQ1F,EAAK2E,WAAWtB,GAGrBqC,EAAQ1F,EAAKD,QAAQuE,WACxBtE,EAAKW,SAASU,KAAK,aAAcrB,EAAKb,OAAQa,EAAK2E,YACnD3E,EAAKW,SAASC,IAAI,GAClBZ,EAAK4E,aAAY,IAETc,GAAS1F,EAAKD,QAAQuE,YAC9BtE,EAAKW,SAASU,KAAK,aAAcrB,EAAKb,OAAQa,EAAK2E,YACnD3E,EAAKW,SAASC,KAAK,GACnBZ,EAAK4E,aAAY,MAQX5E,EAAA2F,eAAiB,SAACpC,GACpBvD,EAAKwE,aACVxE,EAAKW,SAASU,KAAK,YAAarB,EAAKb,OAAQa,EAAK0E,WAClD1E,EAAK4E,aAAY,KAnHjB1F,EAAMc,EAAKD,QAASC,EAAKE,SAAUH,KAsHrC,OAjK8C6F,EAAAxB,EAAAvE,GAiDtCuE,EAAAtF,UAAAkC,OAAP,WACCf,KAAK2E,aAAY,GAGjBiB,SAASC,iBAAiB,aAAc7F,KAAK4E,kBAAoBkB,SAAS,IAC1EF,SAASC,iBAAiB,YAAa7F,KAAKoF,iBAAmBU,SAAS,IACxEF,SAASC,iBAAiB,WAAY7F,KAAK0F,gBAAkBI,SAAS,IAGtEF,SAASC,iBAAiB,YAAa7F,KAAK4E,kBAAoBkB,SAAS,IACzEF,SAASC,iBAAiB,YAAa7F,KAAKoF,iBAAmBU,SAAS,IACxEF,SAASC,iBAAiB,UAAW7F,KAAK0F,gBAAkBI,SAAS,KAM/D3B,EAAAtF,UAAAqC,UAAP,WACClB,KAAK2E,aAAY,GAGjBiB,SAASG,oBAAoB,aAAc/F,KAAK4E,kBAChDgB,SAASG,oBAAoB,YAAa/F,KAAKoF,iBAC/CQ,SAASG,oBAAoB,WAAY/F,KAAK0F,gBAG9CE,SAASG,oBAAoB,YAAa/F,KAAK4E,kBAC/CgB,SAASG,oBAAoB,YAAa/F,KAAKoF,iBAC/CQ,SAASG,oBAAoB,UAAW/F,KAAK0F,iBAoF/CvB,EAjKA,CAA8C1C,KCtB9C,oBAAAuE,IAKShG,KAAAiG,aAsGT,OA/FQD,EAAAnH,UAAAmC,GAAP,SAAUsC,EAAe4C,GACxB,GAAwB,mBAAbA,EAA2B,OAAOlG,KAC7C,IAAMmG,EAAM,IAAM7C,EAElB,OADCtD,KAAKiG,UAAUE,GAAOnG,KAAKiG,UAAUE,QAAYC,KAAKF,GAChDlG,MAQDgG,EAAAnH,UAAAwH,KAAP,SAAY/C,EAAe4C,GAC1B,GAAwB,mBAAbA,EAA2B,OAAOlG,KAC7C,SAAAgB,IACChB,KAAKmB,IAAImC,EAAOtC,GAChBkF,EAASI,MAAMtG,KAAMX,WAItB,OAFC2B,EAAWkF,SAAWA,EACvBlG,KAAKgB,GAAGsC,EAAOtC,GACRhB,MAQDgG,EAAAnH,UAAAsC,IAAP,SAAWmC,EAAgB4C,GAE1B,GAAyB,IAArB7G,UAAUC,OAEb,OADAU,KAAKiG,aACEjG,KAIR,IAAMmG,EAAM,IAAM7C,EACZ2C,EAAYjG,KAAKiG,UAAUE,GACjC,IAAKF,EACJ,OAAOjG,KAIR,GAAyB,IAArBX,UAAUC,OAEb,cADOU,KAAKiG,UAAUE,GACfnG,KAIR,IAAMP,EAAQwG,EAAU3D,QAAQ4D,GAWhC,OAVe,IAAXzG,GAAgBwG,EAAUxG,KAAWyG,GACxCD,EAAUM,OAAO9G,EAAO,GAKA,IAArBwG,EAAU3G,eACNU,KAAKiG,UAAUE,GAGhBnG,MAQDgG,EAAAnH,UAAAuC,KAAP,SAAYkC,OAAe,IAAAkD,KAAApH,EAAA,EAAAA,EAAAC,UAAAC,OAAAF,IAAAoH,EAAApH,EAAA,GAAAC,UAAAD,GAC1B,IAAI6G,EAAYjG,KAAKiG,UAAU,IAAM3C,GACrC,GAAI2C,GAAaA,EAAU3G,OAAS,EAEnC,IAAgB,IAAAmH,EAAA,EAAAC,EADhBT,EAAYA,EAAUU,MAAM,GACZF,EAAAC,EAAApH,OAAAmH,IAAS,CAAbC,EAAAD,GACTH,MAAMtG,KAAMwG,GAGhB,OAAOxG,MAODgG,EAAAnH,UAAA+H,UAAP,SAAiBtD,GAChB,OAAOtD,KAAKiG,UAAU,IAAM3C,QAOtB0C,EAAAnH,UAAAgI,aAAP,SAAoBvD,GACnB,QAAStD,KAAK4G,UAAUtD,GAAOhE,QAGjC0G,EA3GA,sTCWA,SAAApG,GA+DC,SAAAkH,EACCC,EACAjH,EACAkH,GAHD,IAAAjH,EAKCH,EAAAjC,KAAAqC,OAAOA,YArDAD,EAAAkH,SAA0B,KAK1BlH,EAAAiH,WAKSjH,EAAAE,UAEhBiH,cAAe,EAEfC,iBAAkB,IAElBC,cACCjC,QAAS,UACTkC,SAAU,WACVC,MAAO,QACPC,QAAS,UACTC,OAAQ,SACRC,MAAO,QACPC,OAAQ,UAETC,YAAa,MAEbC,cAAe,EACfC,cAAc,EACdR,UAAU,EACVS,MAAM,GAMC/H,EAAAqH,gBAKArH,EAAAgI,aAAuB,EAe9BhI,EAAKD,QAAUb,KAAUc,EAAKE,SAAUH,GAGpCkH,IACCA,aAAmBxE,MACtBzC,EAAKiH,QAAUxE,MAAM3D,UAAU8H,MAAMhJ,KAAKqJ,EAAS,GAExB,mBAAZA,IACfjH,EAAKiH,QAAUA,GACdnH,eAAcmI,EACd7D,iBAAgB8D,MAMnBlI,EAAKmI,WAAWnB,EAAgBhH,EAAKD,QAAQqH,oBAkP/C,OAzUwCgB,EAAArB,EAAAlH,GA+FhCkH,EAAAjI,UAAAqJ,WAAP,SAAkBnB,EAAsCI,GAkBvD,GAhBAnH,KAAKoI,UAOyB,iBAJ9BrB,EAAmC,MAAlBA,EAAyBA,EAAiB,MAK1D/G,KAAKmF,QAAUS,SAASyC,cAActB,IAAmB,KAEjDA,aAA0B/E,cAClChC,KAAKmF,QAAU4B,IAKX/G,KAAKmF,QACT,MAAM,IAAImD,MAAM,qDJzGb,IAAgCvG,EAAiBwG,EI6GrB,iBAArBpB,IAAiCnH,KAAKF,QAAQqH,iBAAmBA,GAG5EnH,KAAKiH,UJhH+BlF,EIgHE/B,KAAKmF,QJ/GjB,iBAD2BoD,EIgHDpB,MJ9G/CR,MAAMhJ,KAAKoE,EAAGyG,iBAAiB,YAAcD,IAChDxG,EAAGkF,UI8GLjH,KAAK+H,aAAe/H,KAAKyI,UAAUzI,KAAK+H,cAGxC/H,KAAK0I,kBAAkB1I,KAAKF,QAAQ6H,YAAa3H,KAAKF,QAAQsH,cAC9D,IAAoB,IAAAhI,EAAA,EAAAqH,EAAAzG,KAAKiH,SAAL7H,EAAAqH,EAAAnH,OAAAF,IAAa,CAChC0C,EADe2E,EAAArH,GACUY,KAAKoH,aAAaE,OAI5CxF,EAAkB9B,KAAKmF,QAASnF,KAAKoH,aAAajC,SAClDnC,EAAqBhD,KAAKmF,QAASnF,KAAKoH,aAAaC,SAAUrH,KAAKF,QAAQuH,UAG5ErH,KAAK2I,oBAGL3I,KAAK4I,MAAM5I,KAAK+H,cAGhB/H,KAAKoB,KAAK,OAAQpB,KAAKmF,QAASnF,KAAKiH,WAM/BH,EAAAjI,UAAAuJ,QAAP,WAaC,GAXApI,KAAK6I,iBAGD7I,KAAKmF,SACR5C,EAAuBvC,KAAKmF,SAC3BnF,KAAKoH,aAAajC,QAClBnF,KAAKoH,aAAaC,WAKhBrH,KAAKiH,UAAYjH,KAAKiH,SAAS3H,OAAS,EAC3C,IAAoB,IAAAF,EAAA,EAAAqH,EAAAzG,KAAKiH,SAAL7H,EAAAqH,EAAAnH,OAAAF,IAAa,CAA5B,IAAMkI,EAAKb,EAAArH,GACfmD,EAAuB+E,GACtBtH,KAAKoH,aAAaE,MAClBtH,KAAKoH,aAAaG,QAClBvH,KAAKoH,aAAaM,OAClB1H,KAAKoH,aAAaI,OAClBxH,KAAKoH,aAAaK,QAEnB9E,EAAgB2E,EAAO,UAAW,MAKpCtH,KAAKoB,KAAK,UAAWpB,KAAKmF,QAASnF,KAAKiH,UAGxCjH,KAAKmF,QAAU,KACfnF,KAAKiH,SAAW,MAOVH,EAAAjI,UAAA+J,MAAP,SAAanJ,GACZ,IAAKO,KAAKiH,UAAqC,IAAzBjH,KAAKiH,SAAS3H,OAAgB,OAAO,KAG3DG,EAAQO,KAAKyI,UAAUhJ,GAGvB,IAAMqJ,EAAgB9I,KAAKiH,SAAS3H,OAC9BsI,EAAgBtC,KAAKyD,IAAI,EAAG/I,KAAKF,QAAQ8H,eACzCoB,EAAgB1D,KAAK2D,OAAOH,EAAgB,GAAK,GACjDI,EAAaF,GAAiBF,EAAgB,GAAM,EAAI,EAAI,GAGlE9I,KAAKoB,KAAK,eAAgBpB,KAAK+H,aAActI,EAAOqJ,GAGpD,IAAK,IAAItL,EAAI,EAAGA,EAAIsL,EAAetL,IAAK,CACvC,IAAM8J,EAAQtH,KAAKiH,SAASzJ,GACxB2L,EAAW3L,EAAIiC,EAanB,GAXIO,KAAKF,QAAQuH,WAGZ8B,EAAWH,EACdG,GAAYL,EAEJK,GAAYH,IACpBG,GAAYL,IAIVtL,IAAMiC,EAGT8C,EAAuB+E,GACtBtH,KAAKoH,aAAaK,MAClBzH,KAAKoH,aAAaI,OAClBxH,KAAKoH,aAAaM,SAEnB5F,EAAkBwF,EAAOtH,KAAKoH,aAAaG,aAEvC,CAGJ,IAAM6B,EAAUD,EAAW,EACrBE,EAAWF,EAAW,EAGtBG,EAAWhE,KAAKC,IAAI4D,GAAYvB,EAGtCrF,EAAuB+E,EAAOtH,KAAKoH,aAAaG,SAChDvE,EAAqBsE,EAAOtH,KAAKoH,aAAaM,OAAQ4B,GACtDtG,EAAqBsE,EAAOtH,KAAKoH,aAAaI,OAAQ6B,GACtDrG,EAAqBsE,EAAOtH,KAAKoH,aAAaK,MAAO2B,GAIlDpJ,KAAKF,QAAQ+H,cAChBlF,EAAgB2E,EAAO,UAAW4B,EAAa5D,KAAKC,IAAI4D,IAW1D,OANAnJ,KAAKoB,KAAK,cAAepB,KAAK+H,aAActI,EAAOqJ,GAGnD9I,KAAK+H,aAAetI,EAGbO,KAAKiH,SAASxH,IAOfqH,EAAAjI,UAAA8B,IAAP,SAAW4I,GACV,OAAOvJ,KAAK4I,MAAM5I,KAAK+H,aAAewB,IAQhCzC,EAAAjI,UAAA0C,YAAP,SAAmBxD,EAAckF,GAC5BjD,KAAKmF,SACRnC,EAAqBhD,KAAKmF,QAASnF,KAAKF,QAAQ6H,YAAc5J,EAAMkF,IAS9D6D,EAAAjI,UAAA6J,kBAAR,SAA0Bc,EAA2CC,GACpE,IAAK,IAAMC,UADc,IAAAF,MAAiBxJ,KAAKF,QAAQ6H,kBAAa,IAAA8B,MAAmCzJ,KAAKF,QAAQsH,cACpGqC,EACXvL,OAAOW,UAAUC,eAAenB,KAAK8L,EAASC,KACjD1J,KAAKoH,aAAasC,GAAKF,EAASC,EAAQC,KASnC5C,EAAAjI,UAAA4J,UAAR,SAAkBhJ,GACjB,IAAMsJ,EAAM/I,KAAKiH,SAAS3H,OAAS,EACnC,OAAOU,KAAKF,QAAQgI,KCxShB,SAAetJ,EAAmBmL,EAAiBZ,QAApC,IAAAvK,MAAA,QAAmB,IAAAmL,MAAA,QAAiB,IAAAZ,MAAA,GAKxD,IACMnL,GAJNmL,EAAMzD,KAAKyD,IAAIY,EAAKZ,IAIH,EAAKY,EACtB,OAAOA,IAFGnL,EAAQmL,GAEA/L,EAAIA,GAAKA,EDkSvBkK,CAAKrI,EAAO,EAAGsJ,GCnTd,SAAgBvK,EAAemL,EAAaZ,GACjD,OAAOzD,KAAKyD,IAAIY,EAAKrE,KAAKqE,IAAIZ,EAAKvK,IDmT/BoL,CAAMnK,EAAO,EAAGsJ,IAMZjC,EAAAjI,UAAA8J,kBAAR,WACC,IAAgB,IAAAvJ,EAAA,EAAAqH,EAAAzG,KAAKgH,QAAL5H,EAAAqH,EAAAnH,OAAAF,IAAY,CAAvB,IAAML,EAAC0H,EAAArH,GACPL,IACHA,EAAE2B,SAAWV,KACW,mBAAbjB,EAAEgC,QACZhC,EAAEgC,YASE+F,EAAAjI,UAAAgK,eAAR,WACC,IAAgB,IAAAzJ,EAAA,EAAAqH,EAAAzG,KAAKgH,QAAL5H,EAAAqH,EAAAnH,OAAAF,IAAY,CAAvB,IAAML,EAAC0H,EAAArH,GACPL,GAAKA,EAAE2B,WACiB,mBAAhB3B,EAAEmC,WACZnC,EAAEmC,YAEHnC,EAAE2B,SAAW,QAKjBoG,EAzUA,CAAwC+C,GEdvCxI,OAAeyF,WAAagD","file":"./viewmatrix.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import ViewMatrix from './viewmatrix';\n\nexport default abstract class ViewMatrixPlugin {\n\n\t/**\n\t * The ViewMatrix instance the plugin belongs to.\n\t */\n\tpublic instance: ViewMatrix;\n\n\t/**\n\t * Method called when the instance is initialized.\n\t */\n\tpublic abstract onInit(): void;\n\n\t/**\n\t * Method called when the instance is destroyed.\n\t */\n\tpublic abstract onDestroy(): void;\n\n}\n","/**\n * Merges one or more objects into `target`.\n * @param target The object to merge to.\n * @param sources One or more sources to merge onto `target`.\n */\nexport function merge<T extends object>(target: T, ...sources: T[]): T {\n\tif (target == null) {\n\t\tthrow new TypeError('Cannot convert undefined or null to object');\n\t}\n\tconst to = Object(target);\n\tfor (let index = 1; index < arguments.length; index++) {\n\t\tconst nextSource = arguments[index];\n\t\tif (nextSource != null) {\n\t\t\tfor (const nextKey in nextSource) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n\t\t\t\t\tto[nextKey] = nextSource[nextKey];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn to;\n}\n","import ViewMatrixPlugin from '../core/viewmatrixplugin';\nimport { merge } from '../utils/objects';\n\n/**\n * Options that the ViewMatrix Autoplay plugin supports.\n */\nexport interface IAutoplayPluginOptions {\n\t/**\n\t * Tells the module it should cancel the autoplay when a slide is manually changed. Default is `true`.\n\t */\n\tcancelOnSlide?: boolean;\n\t/**\n\t * Together with the instance's `classPrefix` option, defines the class to toggle when autoplaying is enabled. Default is `autoplaying`.\n\t */\n\tclassAlias?: string;\n\t/**\n\t * Direction increment of the navigation. Default is `+1` = `next`.\n\t */\n\tdirection?: number;\n\t/**\n\t * Tells the module it should start autoplaying immediately. Default is `true`.\n\t */\n\tinstant?: boolean;\n\t/**\n\t * Milliseconds it takes to navigate. Default is `3000`.\n\t */\n\tinterval?: number;\n}\n\nexport default class AutoplayPlugin extends ViewMatrixPlugin {\n\n\t/**\n\t * The instance's options.\n\t */\n\tpublic readonly options: IAutoplayPluginOptions = {};\n\n\t/**\n\t * The instance's default values.\n\t */\n\tprotected readonly defaults: IAutoplayPluginOptions = {\n\t\tcancelOnSlide: true,\n\t\tclassAlias: 'autoplaying',\n\t\tdirection: +1,\n\t\tinstant: true,\n\t\tinterval: 3000\n\t};\n\n\t/**\n\t * Determines if autoplay should be cancelled when handling a slide change.\n\t */\n\tprivate cancelAutoplay: boolean = true;\n\n\t/**\n\t * ID of the setInterval instance.\n\t */\n\tprivate intervalId: number = 0;\n\n\t/**\n\t * Initializes a new TouchSwipePlugin instance.\n\t * @param options Options for the plugin.\n\t */\n\tpublic constructor(options?: IAutoplayPluginOptions) {\n\t\tsuper();\n\t\tmerge(this.options, this.defaults, options);\n\t}\n\n\t/**\n\t * Method called when the instance is initialized.\n\t */\n\tpublic onInit(): void {\n\t\tthis.instance.on('slide:after', this.handleSlideChange);\n\t\tif (this.options.instant === true) {\n\t\t\tthis.play();\n\t\t}\n\t}\n\n\t/**\n\t * Method called when the instance is destroyed.\n\t */\n\tpublic onDestroy(): void {\n\t\tthis.instance.off('slide:after', this.handleSlideChange);\n\t\tthis.pause(false);\n\t}\n\n\t/**\n\t * Starts the autoplay.\n\t * @param emit Tells the method it should fire an event or not. Default is `true`.\n\t */\n\tpublic play(emit?: boolean): void {\n\t\tthis.pause(false);\n\t\tthis.intervalId = window.setInterval(this.handleAutoplay, this.options.interval);\n\t\tif (this.options.classAlias) {\n\t\t\tthis.instance.toggleClass(this.options.classAlias, true);\n\t\t}\n\t\tif (emit !== false) {\n\t\t\tthis.instance.emit('autoplay:start');\n\t\t}\n\t}\n\n\t/**\n\t * Stops the autoplay.\n\t * @param emit Tells the method it should fire an event or not. Default is `true`.\n\t */\n\tpublic pause(emit?: boolean) {\n\t\tif (this.intervalId === 0) {\n\t\t\treturn;\n\t\t}\n\t\tclearInterval(this.intervalId);\n\t\tthis.intervalId = 0;\n\t\tif (this.options.classAlias) {\n\t\t\tthis.instance.toggleClass(this.options.classAlias, false);\n\t\t}\n\t\tif (emit !== false) {\n\t\t\tthis.instance.emit('autoplay:pause');\n\t\t}\n\t}\n\n\t/**\n\t * Event handler for when autoplay interval is fired.\n\t * Activates the control variable and changes the slide.\n\t */\n\tprivate handleAutoplay = () => {\n\t\tthis.cancelAutoplay = false;\n\t\tthis.instance.inc(this.options.direction);\n\t}\n\n\t/**\n\t * Event handler for when a slide is changed.\n\t * If the control variable wasn't set to false, pauses the autoplay.\n\t */\n\tprivate handleSlideChange = () => {\n\t\tif (this.cancelAutoplay && this.options.cancelOnSlide !== false) {\n\t\t\tthis.pause();\n\t\t}\n\t\tthis.cancelAutoplay = true;\n\t}\n\n}\n","/**\n * Clears all extra spaces in a string.\n * @param str String to sanitize.\n */\nexport function sanitize(str: string): string {\n\treturn ('' + str).trim().replace(/\\s\\s+/g, ' ');\n}\n","import Point from './point';\nimport { sanitize } from './string';\n\n/**\n * Adds a class to a given HTML element.\n * @param el The element to add the class to.\n * @param str The class to add.\n */\nexport function addClassToElement(el: HTMLElement, str: string): void {\n\tif (!(el instanceof HTMLElement)) { return; }\n\tconst classes = sanitize(str).split(' ');\n\tlet result = el.className.trim();\n\tfor (const c of classes) {\n\t\tif (result.indexOf(c) === -1) {\n\t\t\tresult = result + ' ' + c;\n\t\t}\n\t}\n\tel.className = sanitize(result);\n}\n\n/**\n * Returns children inside an element.\n * @param el The element to return children from.\n * @param selector Query selector to filter children.\n */\nexport function findChildrenInElement(el: HTMLElement, selector?: string): HTMLElement[] {\n\treturn typeof selector === 'string'\n\t\t? [].slice.call(el.querySelectorAll(':scope > ' + selector))\n\t\t: el.children;\n}\n\n/**\n * Checks if the given `coords` are contained within a `target`.\n * @param target The target to check.\n * @param coords The coordinates to check if they're inside the Target.\n */\nexport function inElementBounds(target: HTMLElement, coords: Point) {\n\treturn target &&\n\t\tcoords.x >= target.offsetLeft && coords.x <= target.offsetLeft + target.offsetWidth &&\n\t\tcoords.y >= target.offsetTop && coords.y <= target.offsetTop + target.offsetHeight;\n}\n\n/**\n * Removes a class from a given HTML element.\n * @param el The element to remove the class from.\n * @param str The class to remove.\n */\nexport function removeClassFromElement(el: HTMLElement, str: string | string[]): void {\n\tif (!(el instanceof HTMLElement)) { return; }\n\tconst classes = !(str instanceof Array)\n\t\t? sanitize(str).split(' ')\n\t\t: str;\n\tlet result = el.className.trim();\n\tfor (const c of classes) {\n\t\tif (result.indexOf(c) !== -1) {\n\t\t\tresult = result.replace(c, '');\n\t\t}\n\t}\n\tel.className = sanitize(result);\n\tif (el.className.length === 0) {\n\t\tel.removeAttribute('class');\n\t}\n}\n\n/**\n * Sets the inline style of an element.\n * If \"null\" is provided as the value, the style will be erased.\n * @param el The element to style.\n * @param name The name of the style to add.\n * @param value The value for the style. A value of \"null\" will erase the style.\n */\nexport function setElementStyle(el: HTMLElement, name: string, value: any): string {\n\tlet style = sanitize(el.getAttribute('style') || '');\n\tif (value == null || style.indexOf(name + ':') !== -1) {\n\t\tstyle = style.replace(new RegExp(name + ':[^;]+;', 'g'), '');\n\t}\n\tif (value != null) {\n\t\tstyle += name + ':' + value + ';';\n\t}\n\tif (style.length > 0) {\n\t\tel.setAttribute('style', sanitize(style));\n\t}\n\telse {\n\t\tel.removeAttribute('style');\n\t}\n\treturn style;\n}\n\n/**\n * Toggles a class in a given HTML element.\n * The class will be added if the condition is true.\n * It will be removed otherwise.\n * @param el The element to toggle the class in.\n * @param str The class to toggle.\n * @param condition Condition to determine if class is added or removed.\n */\nexport function toggleClassInElement(el: HTMLElement, str: string, condition: boolean): boolean {\n\tif (condition) {\n\t\taddClassToElement(el, str);\n\t}\n\telse {\n\t\tremoveClassFromElement(el, str);\n\t}\n\treturn condition;\n}\n","export default class Point {\n\n\t/**\n\t * Returns a Point object from an event's coordinates.\n\t * @param event The event to extract the coordinates from.\n\t * @param touchIndex If the event is a TouchEvent, specify which touch should the method read from.\n\t */\n\tpublic static getFromEvent(event: MouseEvent | TouchEvent, touchIndex: number = 0): Point {\n\t\tconst point = new Point();\n\t\tif (event instanceof TouchEvent && event.touches) {\n\t\t\tpoint.x = event.touches[touchIndex].pageX;\n\t\t\tpoint.y = event.touches[touchIndex].pageY;\n\t\t}\n\t\telse if (event instanceof MouseEvent) {\n\t\t\tpoint.x = event.pageX;\n\t\t\tpoint.y = event.pageY;\n\t\t}\n\t\treturn point;\n\t}\n\n\t/**\n\t * Horizontal coordinate.\n\t */\n\tpublic x: number;\n\n\t/**\n\t * Vertical coordinate.\n\t */\n\tpublic y: number;\n\n\t/**\n\t * Creates a new 2D point.\n\t * @param x Horizontal coordinate.\n\t * @param y Vertical coordinate.\n\t */\n\tconstructor(x: number = 0, y: number = 0) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t}\n\n\t/**\n\t * Returns a new instance of the point with the same coordinates.\n\t */\n\tpublic clone(): Point {\n\t\treturn new Point(this.x, this.y);\n\t}\n\n\t/**\n\t * Modifies the Point instance by adding coordinates from another `point`.\n\t * @param point The point to add.\n\t */\n\tpublic add(point: Point): Point {\n\t\tthis.x += point.x;\n\t\tthis.y += point.y;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Modifies the Point instance by subtracting coordinates from another `point`.\n\t * @param point The point to subtract.\n\t */\n\tpublic sub(point: Point): Point {\n\t\tthis.x -= point.x;\n\t\tthis.y -= point.y;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Modifies the Point instance by multiplying coordinates from another `point`.\n\t * @param point The point to multiply.\n\t */\n\tpublic multiply(point: Point): Point {\n\t\tthis.x *= point.x;\n\t\tthis.y *= point.y;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Modifies the Point instance by dividing coordinates from another `point`.\n\t * @param point The point to divide.\n\t */\n\tpublic divide(point: Point): Point {\n\t\tthis.x /= point.x;\n\t\tthis.y /= point.y;\n\t\treturn this;\n\t}\n\n}\n","import ViewMatrixPlugin from '../core/viewmatrixplugin';\nimport { inElementBounds } from '../utils/html';\nimport { merge } from '../utils/objects';\nimport Point from '../utils/point';\n\n/**\n * Options that the ViewMatrix Touch plugin supports.\n */\nexport interface ITouchSwipePluginOptions {\n\t/**\n\t * Together with the instance's `classPrefix` option, defines the class to toggle when the element is being touched. Default is `touching`.\n\t */\n\tclassAlias?: string;\n\t/**\n\t * Tells the plugin it should call preventDefault() when a touch is started. Default is `false`.\n\t */\n\tpreventDefault?: boolean;\n\t/**\n\t * Amount of pixels the delta must be until a swipe is registered. Default is `30`.\n\t */\n\ttolerance?: number;\n\t/**\n\t * If true, the plugin will handle vertical deltas instead of horizontal. Default is `false`.\n\t */\n\tvertical?: boolean;\n}\n\nexport default class TouchSwipePlugin extends ViewMatrixPlugin {\n\n\t/**\n\t * The instance's options.\n\t */\n\tpublic readonly options: ITouchSwipePluginOptions = {};\n\n\t/**\n\t * The instance's default values.\n\t */\n\tprivate readonly defaults: ITouchSwipePluginOptions = {\n\t\tclassAlias: 'touching',\n\t\tpreventDefault: false,\n\t\ttolerance: 30,\n\t\tvertical: false\n\t};\n\n\t/**\n\t * Point with starting touch coordinates.\n\t */\n\tprivate touchStart?: Point = undefined;\n\n\t/**\n\t * Point with last touch coordinates.\n\t */\n\tprivate touchLast?: Point = undefined;\n\n\t/**\n\t * Point with difference between start and last touch coordinates.\n\t */\n\tprivate touchDelta?: Point = undefined;\n\n\t/**\n\t * Current touch target.\n\t */\n\tprivate target?: HTMLElement = undefined;\n\n\t/**\n\t * Initializes a new TouchSwipePlugin instance.\n\t * @param options Options for the plugin.\n\t */\n\tpublic constructor(options?: ITouchSwipePluginOptions) {\n\t\tsuper();\n\t\tmerge(this.options, this.defaults, options);\n\t}\n\n\t/**\n\t * Method called when the instance is initialized.\n\t */\n\tpublic onInit(): void {\n\t\tthis.cancelTouch(false);\n\n\t\t// add touch events\n\t\tdocument.addEventListener('touchstart', this.handleTouchStart, { passive: false });\n\t\tdocument.addEventListener('touchmove', this.handleTouchMove, { passive: false });\n\t\tdocument.addEventListener('touchend', this.handleTouchEnd, { passive: false });\n\n\t\t// add mouse events\n\t\tdocument.addEventListener('mousedown', this.handleTouchStart, { passive: false });\n\t\tdocument.addEventListener('mousemove', this.handleTouchMove, { passive: false });\n\t\tdocument.addEventListener('mouseup', this.handleTouchEnd, { passive: false });\n\t}\n\n\t/**\n\t * Method called when the instance is destroyed.\n\t */\n\tpublic onDestroy(): void {\n\t\tthis.cancelTouch(false);\n\n\t\t// cancel touch events\n\t\tdocument.removeEventListener('touchstart', this.handleTouchStart);\n\t\tdocument.removeEventListener('touchmove', this.handleTouchMove);\n\t\tdocument.removeEventListener('touchend', this.handleTouchEnd);\n\n\t\t// cancel mouse events\n\t\tdocument.removeEventListener('mousedown', this.handleTouchStart);\n\t\tdocument.removeEventListener('mousemove', this.handleTouchMove);\n\t\tdocument.removeEventListener('mouseup', this.handleTouchEnd);\n\t}\n\n\t/**\n\t * Callback that is passed to touchmove events, so that touch can be cancelled on the other side.\n\t * @param emit Tells the method it should fire an event or not. Default is `true`.\n\t */\n\tprivate cancelTouch = (emit?: boolean) => {\n\t\tif (this.options.classAlias) {\n\t\t\tthis.instance.toggleClass(this.options.classAlias, false);\n\t\t}\n\t\tif (emit !== false) {\n\t\t\tthis.instance.emit('touch:cancel', this.target, this.touchLast);\n\t\t}\n\t\tthis.touchStart = undefined;\n\t\tthis.touchLast = undefined;\n\t\tthis.target = undefined;\n\t}\n\n\t/**\n\t * Handles touchStart or mouseDown events.\n\t * @param event The event to extract the coordinates from.\n\t */\n\tprivate handleTouchStart = (event: MouseEvent | TouchEvent) => {\n\t\tconst coords = Point.getFromEvent(event);\n\t\tif (!this.touchStart && inElementBounds(this.instance.element, coords)) {\n\t\t\tthis.touchStart = coords;\n\t\t\tthis.touchLast = coords;\n\t\t\tthis.target = this.instance.element;\n\t\t\tif (this.options.preventDefault) {\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t\tif (this.options.classAlias) {\n\t\t\t\tthis.instance.toggleClass(this.options.classAlias, true);\n\t\t\t}\n\t\t\tthis.instance.emit('touch:start', this.target, coords);\n\t\t}\n\t}\n\n\t/**\n\t * Handles touchMove or mouseMove events.\n\t * @param event The event to extract the coordinates from.\n\t */\n\tprivate handleTouchMove = (event: MouseEvent | TouchEvent) => {\n\t\tif (!this.touchStart) { return; }\n\t\tthis.touchLast = Point.getFromEvent(event);\n\t\tthis.touchDelta = this.touchStart.clone().sub(this.touchLast);\n\t\tthis.instance.emit('touch:move', this.target, this.touchDelta, this.cancelTouch);\n\n\t\tconst xAbs = Math.abs(this.touchDelta.x);\n\t\tconst yAbs = Math.abs(this.touchDelta.y);\n\t\tlet delta = 0;\n\n\t\tif (xAbs > yAbs && !this.options.vertical) {\n\t\t\t// swiped horizontally\n\t\t\tdelta = this.touchDelta.x;\n\t\t}\n\t\telse if (xAbs < yAbs && this.options.vertical) {\n\t\t\t// swiped vertically\n\t\t\tdelta = this.touchDelta.y;\n\t\t}\n\n\t\tif (delta > this.options.tolerance) {\n\t\t\tthis.instance.emit('swipe:next', this.target, this.touchDelta);\n\t\t\tthis.instance.inc(+1);\n\t\t\tthis.cancelTouch(false);\n\t\t}\n\t\telse if (delta < -this.options.tolerance) {\n\t\t\tthis.instance.emit('swipe:prev', this.target, this.touchDelta);\n\t\t\tthis.instance.inc(-1);\n\t\t\tthis.cancelTouch(false);\n\t\t}\n\t}\n\n\t/**\n\t * Handles touchEnd or mouseUp events.\n\t * @param event The event to extract the coordinates from.\n\t */\n\tprivate handleTouchEnd = (event: MouseEvent | TouchEvent) => {\n\t\tif (!this.touchStart) { return; }\n\t\tthis.instance.emit('touch:end', this.target, this.touchLast);\n\t\tthis.cancelTouch(false);\n\t}\n\n}\n","// based off of component-emitter package\n// https://github.com/component/emitter\n\ntype EmitterCallback = (...args: any[]) => void;\n\nexport default abstract class Emitter {\n\n\t/**\n\t * List of callbacks maintained by the class.\n\t */\n\tprivate callbacks: { [id: string]: EmitterCallback[] } = {};\n\n\t/**\n\t * Listens on the given `event` with `callback`.\n\t * @param event The event to add the listener to.\n\t * @param callback Listener to invoke.\n\t */\n\tpublic on(event: string, callback: EmitterCallback): Emitter {\n\t\tif (typeof callback !== 'function') { return this; }\n\t\tconst key = '$' + event;\n\t\t(this.callbacks[key] = this.callbacks[key] || []).push(callback);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds an `event` listener that will be invoked a single time then automatically removed.\n\t * @param event The event to add the listener to.\n\t * @param callback Listener to invoke.\n\t */\n\tpublic once(event: string, callback: EmitterCallback): Emitter {\n\t\tif (typeof callback !== 'function') { return this; }\n\t\tfunction on() {\n\t\t\tthis.off(event, on);\n\t\t\tcallback.apply(this, arguments);\n\t\t}\n\t\t(on as any).callback = callback;\n\t\tthis.on(event, on);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Removes the given callback for `event` or all registered callbacks.\n\t * @param event The event to remove the listener(s) from.\n\t * @param callback Specific listener to remove.\n\t */\n\tpublic off(event?: string, callback?: EmitterCallback): Emitter {\n\t\t// remove all events\n\t\tif (arguments.length === 0) {\n\t\t\tthis.callbacks = {};\n\t\t\treturn this;\n\t\t}\n\n\t\t// remove specific event\n\t\tconst key = '$' + event;\n\t\tconst callbacks = this.callbacks[key];\n\t\tif (!callbacks) {\n\t\t\treturn this;\n\t\t}\n\n\t\t// remove all handlers\n\t\tif (arguments.length === 1) {\n\t\t\tdelete this.callbacks[key];\n\t\t\treturn this;\n\t\t}\n\n\t\t// remove specific handler\n\t\tconst index = callbacks.indexOf(callback);\n\t\tif (index !== -1 && callbacks[index] === callback) {\n\t\t\tcallbacks.splice(index, 1);\n\t\t}\n\n\t\t// remove event-specific arrays without callbacks\n\t\t// to avoid memory leaks\n\t\tif (callbacks.length === 0) {\n\t\t\tdelete this.callbacks[key];\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Emits `event` with the given `args`.\n\t * @param event The event to trigger.\n\t * @param args Arguments to pass to each callback.\n\t */\n\tpublic emit(event: string, ...args: any[]): Emitter {\n\t\tlet callbacks = this.callbacks['$' + event];\n\t\tif (callbacks && callbacks.length > 0) {\n\t\t\tcallbacks = callbacks.slice(0);\n\t\t\tfor (const c of callbacks) {\n\t\t\t\tc.apply(this, args);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns an array of callbacks for `event`.\n\t * @param event The event to get the listeners from.\n\t */\n\tpublic listeners(event: string): EmitterCallback[] {\n\t\treturn this.callbacks['$' + event] || [];\n\t}\n\n\t/**\n\t * Checks if this emitter has `event` handlers.\n\t * @param event The event to verify.\n\t */\n\tpublic hasListeners(event: string): boolean {\n\t\treturn !!this.listeners(event).length;\n\t}\n\n}\n","import AutoplayPlugin from '../plugins/autoplay';\nimport TouchSwipePlugin from '../plugins/touchswipe';\nimport Emitter from '../utils/emitter';\nimport { addClassToElement, findChildrenInElement, removeClassFromElement, setElementStyle, toggleClassInElement } from '../utils/html';\nimport { clamp, wrap } from '../utils/math';\nimport { merge } from '../utils/objects';\nimport IViewMatrixClassAliases from './iviewmatrixclassaliases';\nimport IViewMatrixOptions from './iviewmatrixoptions';\nimport ViewMatrixPlugin from './viewmatrixplugin';\n\ninterface IPluginDictionary {\n\t[id: string]: typeof ViewMatrixPlugin;\n}\n\ntype PluginConstructor = (p: IPluginDictionary) => ViewMatrixPlugin[];\n\nexport default class ViewMatrix extends Emitter {\n\n\t/**\n\t * The instance's target element.\n\t */\n\tpublic element: HTMLElement;\n\n\t/**\n\t * The instance's options.\n\t */\n\tpublic readonly options: IViewMatrixOptions;\n\n\t/**\n\t * The ViewMatrix instance's children.\n\t */\n\tprivate children: HTMLElement[] = null;\n\n\t/**\n\t * List of ViewMatrixPlugin instances associated with the instance.\n\t */\n\tprivate plugins: ViewMatrixPlugin[] = [];\n\n\t/**\n\t * The class' instance defaults.\n\t */\n\tprivate readonly defaults: IViewMatrixOptions = {\n\t\t// state init\n\t\tstartingIndex: 0,\n\t\t// selectors\n\t\tchildrenSelector: '*',\n\t\t// classes\n\t\tclassAliases: {\n\t\t\telement: 'element',\n\t\t\tinfinite: 'infinite',\n\t\t\tchild: 'child',\n\t\t\tcurrent: 'current',\n\t\t\tbehind: 'behind',\n\t\t\tahead: 'ahead',\n\t\t\tbeyond: 'beyond'\n\t\t},\n\t\tclassPrefix: 'vm-',\n\t\t// function\n\t\tadjacentCount: 1,\n\t\thandleZIndex: true,\n\t\tinfinite: false,\n\t\twrap: true\n\t};\n\n\t/**\n\t * List of class names frequently used for children elements.\n\t */\n\tprivate classAliases: { [id: string]: string } = {};\n\n\t/**\n\t * Current slide's index.\n\t */\n\tprivate currentIndex: number = 0;\n\n\t/**\n\t * Creates a new ViewMatrix instance.\n\t * @param selector The target selector or element for the instance.\n\t * @param options Options for the instance.\n\t */\n\tconstructor(\n\t\tparentSelector: string | HTMLElement,\n\t\toptions?: IViewMatrixOptions,\n\t\tplugins?: ViewMatrixPlugin[] | PluginConstructor\n\t) {\n\t\tsuper();\n\n\t\t// get options\n\t\tthis.options = merge({}, this.defaults, options);\n\n\t\t// load plugins\n\t\tif (plugins) {\n\t\t\tif (plugins instanceof Array) {\n\t\t\t\tthis.plugins = Array.prototype.slice.call(plugins, 1);\n\t\t\t}\n\t\t\telse if (typeof plugins === 'function') {\n\t\t\t\tthis.plugins = plugins({\n\t\t\t\t\tAutoplayPlugin,\n\t\t\t\t\tTouchSwipePlugin\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t// initialize\n\t\tthis.initialize(parentSelector, this.options.childrenSelector);\n\t}\n\n\t/**\n\t * Refreshes the instance.\n\t * @param parentSelector The query selector to find the element.\n\t * @param childrenSelector An optional query selector to filter children.\n\t */\n\tpublic initialize(parentSelector: string | HTMLElement, childrenSelector?: string): void {\n\t\t// destroy first\n\t\tthis.destroy();\n\n\t\t// get a valid selector\n\t\tparentSelector = parentSelector != null ? parentSelector : null;\n\n\t\t// check if we have an object,\n\t\t// if we do, POPULATE ALL THE VARS\n\t\tif (typeof parentSelector === 'string') {\n\t\t\tthis.element = document.querySelector(parentSelector) || null;\n\t\t}\n\t\telse if (parentSelector instanceof HTMLElement) {\n\t\t\tthis.element = parentSelector;\n\t\t}\n\n\t\t// do we still have a target?\n\t\t// if not, throw a hissy fit\n\t\tif (!this.element) {\n\t\t\tthrow new Error('No valid selector provided to ViewMatrix instance');\n\t\t}\n\n\t\t// (also update the selectors in the options to these)\n\t\tif (typeof childrenSelector === 'string') { this.options.childrenSelector = childrenSelector; }\n\n\t\t// set children and index\n\t\tthis.children = findChildrenInElement(this.element, childrenSelector);\n\t\tthis.currentIndex = this.wrapIndex(this.currentIndex);\n\n\t\t// add classes to new children\n\t\tthis.prepareClassNames(this.options.classPrefix, this.options.classAliases);\n\t\tfor (const child of this.children) {\n\t\t\taddClassToElement(child, this.classAliases.child);\n\t\t}\n\n\t\t// add classes to the element\n\t\taddClassToElement(this.element, this.classAliases.element);\n\t\ttoggleClassInElement(this.element, this.classAliases.infinite, this.options.infinite);\n\n\t\t// initialize plugins\n\t\tthis.initializePlugins();\n\n\t\t// refresh slides\n\t\tthis.slide(this.currentIndex);\n\n\t\t// trigger event\n\t\tthis.emit('init', this.element, this.children);\n\t}\n\n\t/**\n\t * Destroys the ViewMatrix instance.\n\t */\n\tpublic destroy(): void {\n\t\t// reset all plugins\n\t\tthis.destroyPlugins();\n\n\t\t// reset current element\n\t\tif (this.element) {\n\t\t\tremoveClassFromElement(this.element, [\n\t\t\t\tthis.classAliases.element,\n\t\t\t\tthis.classAliases.infinite\n\t\t\t]);\n\t\t}\n\n\t\t// reset current children\n\t\tif (this.children && this.children.length > 0) {\n\t\t\tfor (const child of this.children) {\n\t\t\t\tremoveClassFromElement(child, [\n\t\t\t\t\tthis.classAliases.child,\n\t\t\t\t\tthis.classAliases.current,\n\t\t\t\t\tthis.classAliases.beyond,\n\t\t\t\t\tthis.classAliases.behind,\n\t\t\t\t\tthis.classAliases.ahead\n\t\t\t\t] );\n\t\t\t\tsetElementStyle(child, 'z-index', null);\n\t\t\t}\n\t\t}\n\n\t\t// trigger event\n\t\tthis.emit('destroy', this.element, this.children);\n\n\t\t// reset vars\n\t\tthis.element = null;\n\t\tthis.children = null;\n\t}\n\n\t/**\n\t * Changes the ViewMatrix's current slide.\n\t * @param index Slide to change to.\n\t */\n\tpublic slide(index: number): HTMLElement {\n\t\tif (!this.children || this.children.length === 0) { return null; }\n\n\t\t// wrap index for safety\n\t\tindex = this.wrapIndex(index);\n\n\t\t// calc adjacent and distance values\n\t\tconst childrenCount = this.children.length;\n\t\tconst adjacentCount = Math.max(1, this.options.adjacentCount);\n\t\tconst distanceCount = Math.floor((childrenCount - 1) / 2);\n\t\tconst indexCount = distanceCount + (childrenCount % 2 === 0 ? 1 : 0);\n\n\t\t// trigger before event\n\t\tthis.emit('slide:before', this.currentIndex, index, childrenCount);\n\n\t\t// add or remove classes from children\n\t\tfor (let i = 0; i < childrenCount; i++) {\n\t\t\tconst child = this.children[i];\n\t\t\tlet distance = i - index;\n\n\t\t\tif (this.options.infinite) {\n\t\t\t\t// if we're looping around in an infinite gallery,\n\t\t\t\t// we loop the distance as well\n\t\t\t\tif (distance > distanceCount) {\n\t\t\t\t\tdistance -= childrenCount;\n\t\t\t\t}\n\t\t\t\telse if (distance < -distanceCount) {\n\t\t\t\t\tdistance += childrenCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (i === index) {\n\t\t\t\t// this is the new current element\n\t\t\t\t// remove all old classes and add the \"vm-current\" one\n\t\t\t\tremoveClassFromElement(child, [\n\t\t\t\t\tthis.classAliases.ahead,\n\t\t\t\t\tthis.classAliases.behind,\n\t\t\t\t\tthis.classAliases.beyond\n\t\t\t\t]);\n\t\t\t\taddClassToElement(child, this.classAliases.current);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// this is not a current element,\n\t\t\t\t// figure out if it's before or after\n\t\t\t\tconst isAhead = distance > 0;\n\t\t\t\tconst isBehind = distance < 0;\n\n\t\t\t\t// check if it's beyond the adjacent scope\n\t\t\t\tconst isBeyond = Math.abs(distance) > adjacentCount;\n\n\t\t\t\t// remove \"current\" and toggle other classes\n\t\t\t\tremoveClassFromElement(child, this.classAliases.current);\n\t\t\t\ttoggleClassInElement(child, this.classAliases.beyond, isBeyond);\n\t\t\t\ttoggleClassInElement(child, this.classAliases.behind, isBehind);\n\t\t\t\ttoggleClassInElement(child, this.classAliases.ahead, isAhead);\n\t\t\t}\n\n\t\t\t// if we're handling z-index, fix it\n\t\t\tif (this.options.handleZIndex) {\n\t\t\t\tsetElementStyle(child, 'z-index', indexCount - Math.abs(distance));\n\t\t\t}\n\t\t}\n\n\t\t// trigger event\n\t\tthis.emit('slide:after', this.currentIndex, index, childrenCount);\n\n\t\t// set new index\n\t\tthis.currentIndex = index;\n\n\t\t// return child element\n\t\treturn this.children[index];\n\t}\n\n\t/**\n\t * Increments the ViewMatrix's current slide.\n\t * @param inc Value to add to the current index.\n\t */\n\tpublic inc(increment: number): HTMLElement {\n\t\treturn this.slide(this.currentIndex + increment);\n\t}\n\n\t/**\n\t * Toggles a class in the instance's element.\n\t * @param name The class to toggle.\n\t * @param condition Condition to determine if class is added or removed.\n\t */\n\tpublic toggleClass(name: string, condition: boolean): void {\n\t\tif (this.element) {\n\t\t\ttoggleClassInElement(this.element, this.options.classPrefix + name, condition);\n\t\t}\n\t}\n\n\t/**\n\t * Caches all class names for future use.\n\t * @param prefix Prefix for all class aliases.\n\t * @param aliases String dictionary of class aliases.\n\t */\n\tprivate prepareClassNames(prefix: string = this.options.classPrefix, aliases: IViewMatrixClassAliases = this.options.classAliases): void {\n\t\tfor (const k in aliases) {\n\t\t\tif (Object.prototype.hasOwnProperty.call(aliases, k)) {\n\t\t\t\tthis.classAliases[k] = prefix + aliases[k];\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Wraps a given \"index\" to be safe for the instance to use.\n\t * @param index Index to wrap.\n\t */\n\tprivate wrapIndex(index: number): number {\n\t\tconst max = this.children.length - 1;\n\t\treturn this.options.wrap\n\t\t\t? wrap(index, 0, max)\n\t\t\t: clamp(index, 0, max);\n\t}\n\n\t/**\n\t * Invokes the `onInit` method on all registered plugins.\n\t */\n\tprivate initializePlugins(): void {\n\t\tfor (const p of this.plugins) {\n\t\t\tif (p) {\n\t\t\t\tp.instance = this;\n\t\t\t\tif (typeof p.onInit === 'function') {\n\t\t\t\t\tp.onInit();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Invokes the `onDestroy` method on all registered plugins.\n\t */\n\tprivate destroyPlugins(): void {\n\t\tfor (const p of this.plugins) {\n\t\t\tif (p && p.instance) {\n\t\t\t\tif (typeof p.onDestroy === 'function') {\n\t\t\t\t\tp.onDestroy();\n\t\t\t\t}\n\t\t\t\tp.instance = null;\n\t\t\t}\n\t\t}\n\t}\n\n}\n","/**\n * Clamps a given \"value\" between \"min\" and \"max\", so it never overflows.\n * @param value - The value to clamp.\n * @param min - Minimum value, inclusive.\n * @param max - Maximum value, inclusive.\n */\nexport function clamp(value: number, min: number, max: number): number {\n\treturn Math.max(min, Math.min(max, value));\n}\n\n/**\n * Wraps a given \"value\" between \"min\" and \"max\", so it never overflows.\n * @param value The value to wrap.\n * @param min Minimum value, inclusive.\n * @param max Maximum value, inclusive.\n */\nexport function wrap(value: number = 0, min: number = 0, max: number = 0): number {\n\t// make sure we're using the right max\n\tmax = Math.max(min, max);\n\n\t// make math\n\tconst x = value - min;\n\tconst m = (max + 1) - min;\n\treturn min + (x % m + m) % m;\n}\n","import ViewMatrix from './core/viewmatrix';\n\n(window as any).ViewMatrix = ViewMatrix;\n"],"sourceRoot":""}