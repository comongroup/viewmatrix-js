{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/core/viewmatrixplugin.ts","webpack:///./src/utils/objects.ts","webpack:///./src/plugins/autoplay.ts","webpack:///./src/utils/string.ts","webpack:///./src/utils/html.ts","webpack:///./src/utils/point.ts","webpack:///./src/plugins/touchswipe.ts","webpack:///./src/utils/emitter.ts","webpack:///./src/core/viewmatrix.ts","webpack:///./src/utils/math.ts","webpack:///./index.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","merge","target","sources","_i","arguments","length","TypeError","to","index","nextSource","nextKey","_super","AutoplayPlugin","options","_this","this","defaults","cancelOnSlide","classAlias","direction","instant","interval","cancelAutoplay","intervalId","handleAutoplay","instance","inc","handleSlideChange","pause","__extends","onInit","on","play","onDestroy","off","emit","window","setInterval","toggleClass","clearInterval","viewmatrixplugin","sanitize","str","trim","replace","addClassToElement","el","HTMLElement","classes","split","result","className","classes_1","indexOf","inElementBounds","coords","bounds","parent","document","body","parentBounds","getBoundingClientRect","elBounds","bottom","top","height","left","right","width","getAbsoluteRect","x","y","removeClassFromElement","Array","classes_2","removeAttribute","setElementStyle","style","getAttribute","RegExp","setAttribute","toggleClassInElement","condition","Point","getFromEvent","event","touchIndex","point","TouchEvent","touches","pageX","pageY","MouseEvent","clone","add","sub","multiply","divide","TouchSwipePlugin","eventTarget","preventDefault","tolerance","vertical","undefined","touchStart","touchLast","touchDelta","cancelTouch","handleTouchStart","element","cancelable","handleTouchMove","xAbs","Math","abs","yAbs","delta","handleTouchEnd","touchswipe_extends","addEventListener","passive","removeEventListener","Emitter","callbacks","callback","key","push","once","apply","splice","args","_a","callbacks_1","slice","listeners","hasListeners","ViewMatrix","parentSelector","plugins","children","startingIndex","childrenSelector","classAliases","infinite","child","current","behind","ahead","beyond","classPrefix","adjacentCount","handleZIndex","wrap","currentIndex","autoplay","touchswipe","initialize","viewmatrix_extends","destroy","querySelector","Error","selector","querySelectorAll","wrapIndex","prepareClassNames","initializePlugins","slide","destroyPlugins","childrenCount","max","distanceCount","floor","indexCount","distance","isAhead","isBehind","isBeyond","increment","prefix","aliases","k","min","clamp","emitter","viewmatrix"],"mappings":"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","file":"./viewmatrix.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import ViewMatrix from './viewmatrix';\r\n\r\nexport default abstract class ViewMatrixPlugin {\r\n\r\n\t/**\r\n\t * The ViewMatrix instance the plugin belongs to.\r\n\t */\r\n\tpublic instance: ViewMatrix;\r\n\r\n\t/**\r\n\t * Method called when the instance is initialized.\r\n\t */\r\n\tpublic abstract onInit(): void;\r\n\r\n\t/**\r\n\t * Method called when the instance is destroyed.\r\n\t */\r\n\tpublic abstract onDestroy(): void;\r\n\r\n}\r\n","/**\r\n * Merges one or more objects into `target`.\r\n * @param target The object to merge to.\r\n * @param sources One or more sources to merge onto `target`.\r\n */\r\nexport function merge<T extends object>(target: T, ...sources: T[]): T {\r\n\tif (target == null) {\r\n\t\tthrow new TypeError('Cannot convert undefined or null to object');\r\n\t}\r\n\tconst to = Object(target);\r\n\tfor (let index = 1; index < arguments.length; index++) {\r\n\t\tconst nextSource = arguments[index];\r\n\t\tif (nextSource != null) {\r\n\t\t\tfor (const nextKey in nextSource) {\r\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\r\n\t\t\t\t\tto[nextKey] = nextSource[nextKey];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn to;\r\n}\r\n","import ViewMatrixPlugin from '../core/viewmatrixplugin';\r\nimport { merge } from '../utils/objects';\r\n\r\n/**\r\n * Options that the ViewMatrix Autoplay plugin supports.\r\n */\r\nexport interface IAutoplayPluginOptions {\r\n\t/**\r\n\t * Tells the module it should cancel the autoplay when a slide is manually changed. Default is `true`.\r\n\t */\r\n\tcancelOnSlide?: boolean;\r\n\t/**\r\n\t * Together with the instance's `classPrefix` option, defines the class to toggle when autoplaying is enabled. Default is `autoplaying`.\r\n\t */\r\n\tclassAlias?: string;\r\n\t/**\r\n\t * Direction increment of the navigation. Default is `+1` = `next`.\r\n\t */\r\n\tdirection?: number;\r\n\t/**\r\n\t * Tells the module it should start autoplaying immediately. Default is `true`.\r\n\t */\r\n\tinstant?: boolean;\r\n\t/**\r\n\t * Milliseconds it takes to navigate. Default is `3000`.\r\n\t */\r\n\tinterval?: number;\r\n}\r\n\r\nexport default class AutoplayPlugin extends ViewMatrixPlugin {\r\n\r\n\t/**\r\n\t * The instance's options.\r\n\t */\r\n\tpublic readonly options: IAutoplayPluginOptions = {};\r\n\r\n\t/**\r\n\t * The instance's default values.\r\n\t */\r\n\tprotected readonly defaults: IAutoplayPluginOptions = {\r\n\t\tcancelOnSlide: true,\r\n\t\tclassAlias: 'autoplaying',\r\n\t\tdirection: +1,\r\n\t\tinstant: true,\r\n\t\tinterval: 3000\r\n\t};\r\n\r\n\t/**\r\n\t * Determines if autoplay should be cancelled when handling a slide change.\r\n\t */\r\n\tprivate cancelAutoplay: boolean = false;\r\n\r\n\t/**\r\n\t * ID of the setInterval instance.\r\n\t */\r\n\tprivate intervalId: number = 0;\r\n\r\n\t/**\r\n\t * Initializes a new TouchSwipePlugin instance.\r\n\t * @param options Options for the plugin.\r\n\t */\r\n\tpublic constructor(options?: IAutoplayPluginOptions) {\r\n\t\tsuper();\r\n\t\tmerge(this.options, this.defaults, options);\r\n\t}\r\n\r\n\t/**\r\n\t * Method called when the instance is initialized.\r\n\t */\r\n\tpublic onInit(): void {\r\n\t\tthis.instance.on('slide:after', this.handleSlideChange);\r\n\t\tif (this.options.instant === true) {\r\n\t\t\tthis.play();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Method called when the instance is destroyed.\r\n\t */\r\n\tpublic onDestroy(): void {\r\n\t\tthis.instance.off('slide:after', this.handleSlideChange);\r\n\t\tthis.pause(false);\r\n\t}\r\n\r\n\t/**\r\n\t * Starts the autoplay.\r\n\t * @param emit Tells the method it should fire an event or not. Default is `true`.\r\n\t */\r\n\tpublic play(emit?: boolean): void {\r\n\t\tthis.pause(false);\r\n\t\tthis.intervalId = window.setInterval(this.handleAutoplay, this.options.interval);\r\n\t\tif (this.options.classAlias) {\r\n\t\t\tthis.instance.toggleClass(this.options.classAlias, true);\r\n\t\t}\r\n\t\tif (emit !== false) {\r\n\t\t\tthis.instance.emit('autoplay:start');\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Stops the autoplay.\r\n\t * @param emit Tells the method it should fire an event or not. Default is `true`.\r\n\t */\r\n\tpublic pause(emit?: boolean) {\r\n\t\tif (this.intervalId === 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tclearInterval(this.intervalId);\r\n\t\tthis.intervalId = 0;\r\n\t\tif (this.options.classAlias) {\r\n\t\t\tthis.instance.toggleClass(this.options.classAlias, false);\r\n\t\t}\r\n\t\tif (emit !== false) {\r\n\t\t\tthis.instance.emit('autoplay:pause');\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Event handler for when autoplay interval is fired.\r\n\t * Activates the control variable and changes the slide.\r\n\t */\r\n\tprivate handleAutoplay = () => {\r\n\t\tthis.cancelAutoplay = false;\r\n\t\tthis.instance.inc(this.options.direction);\r\n\t}\r\n\r\n\t/**\r\n\t * Event handler for when a slide is changed.\r\n\t * If the control variable wasn't set to false, pauses the autoplay.\r\n\t */\r\n\tprivate handleSlideChange = () => {\r\n\t\tif (this.cancelAutoplay && this.options.cancelOnSlide !== false) {\r\n\t\t\tthis.pause();\r\n\t\t}\r\n\t\tthis.cancelAutoplay = true;\r\n\t}\r\n\r\n}\r\n","/**\r\n * Clears all extra spaces in a string.\r\n * @param str String to sanitize.\r\n */\r\nexport function sanitize(str: string): string {\r\n\treturn ('' + str).trim().replace(/\\s\\s+/g, ' ');\r\n}\r\n","import Point from './point';\r\nimport { sanitize } from './string';\r\n\r\n/**\r\n * Adds a class to a given HTML element.\r\n * @param el The element to add the class to.\r\n * @param str The class to add.\r\n */\r\nexport function addClassToElement(el: HTMLElement, str: string): void {\r\n\tif (!(el instanceof HTMLElement)) { return; }\r\n\tconst classes = sanitize(str).split(' ');\r\n\tlet result = el.className.trim();\r\n\tfor (const c of classes) {\r\n\t\tif (result.indexOf(c) === -1) {\r\n\t\t\tresult = result + ' ' + c;\r\n\t\t}\r\n\t}\r\n\tel.className = sanitize(result);\r\n}\r\n\r\n/**\r\n * Returns children inside an element.\r\n * @param el The element to return children from.\r\n * @param selector Query selector to filter children.\r\n */\r\nexport function findChildrenInElement(el: HTMLElement, selector?: string): HTMLElement[] {\r\n\treturn typeof selector === 'string'\r\n\t\t? [].slice.call(el.querySelectorAll(':scope > ' + selector))\r\n\t\t: el.children;\r\n}\r\n\r\n/**\r\n * Returns the bounding rectangle for the target element,\r\n * but adjusted with the scroll values of the parent.\r\n * @param el The element to find bounds for.\r\n * @param parent The parent of the element to check bounds for. Default is \"document.body\".\r\n */\r\nexport function getAbsoluteRect(el: HTMLElement, parent: HTMLElement = document.body) {\r\n\tconst parentBounds = parent.getBoundingClientRect();\r\n\tconst elBounds = el.getBoundingClientRect();\r\n\treturn {\r\n\t\tbottom: elBounds.bottom - parentBounds.top,\r\n\t\theight: elBounds.height,\r\n\t\tleft: elBounds.left - parentBounds.left,\r\n\t\tright: elBounds.right - parentBounds.left,\r\n\t\ttop: elBounds.top - parentBounds.top,\r\n\t\twidth: elBounds.width\r\n\t};\r\n}\r\n\r\n/**\r\n * Checks if the given `coords` are contained within a `target`.\r\n * @param target The target to check.\r\n * @param coords The coordinates to check if they're inside the Target.\r\n */\r\nexport function inElementBounds(target: HTMLElement, coords: Point) {\r\n\tconst bounds = getAbsoluteRect(target);\r\n\treturn target &&\r\n\t\tcoords.x >= bounds.left && coords.x <= bounds.right &&\r\n\t\tcoords.y >= bounds.top && coords.y <= bounds.bottom;\r\n}\r\n\r\n/**\r\n * Removes a class from a given HTML element.\r\n * @param el The element to remove the class from.\r\n * @param str The class to remove.\r\n */\r\nexport function removeClassFromElement(el: HTMLElement, str: string | string[]): void {\r\n\tif (!(el instanceof HTMLElement)) { return; }\r\n\tconst classes = !(str instanceof Array)\r\n\t\t? sanitize(str).split(' ')\r\n\t\t: str;\r\n\tlet result = el.className.trim();\r\n\tfor (const c of classes) {\r\n\t\tif (result.indexOf(c) !== -1) {\r\n\t\t\tresult = result.replace(c, '');\r\n\t\t}\r\n\t}\r\n\tel.className = sanitize(result);\r\n\tif (el.className.length === 0) {\r\n\t\tel.removeAttribute('class');\r\n\t}\r\n}\r\n\r\n/**\r\n * Sets the inline style of an element.\r\n * If \"null\" is provided as the value, the style will be erased.\r\n * @param el The element to style.\r\n * @param name The name of the style to add.\r\n * @param value The value for the style. A value of \"null\" will erase the style.\r\n */\r\nexport function setElementStyle(el: HTMLElement, name: string, value: any): string {\r\n\tlet style = sanitize(el.getAttribute('style') || '');\r\n\tif (value == null || style.indexOf(name + ':') !== -1) {\r\n\t\tstyle = style.replace(new RegExp(name + ':[^;]+;', 'g'), '');\r\n\t}\r\n\tif (value != null) {\r\n\t\tstyle += name + ':' + value + ';';\r\n\t}\r\n\tif (style.length > 0) {\r\n\t\tel.setAttribute('style', sanitize(style));\r\n\t}\r\n\telse {\r\n\t\tel.removeAttribute('style');\r\n\t}\r\n\treturn style;\r\n}\r\n\r\n/**\r\n * Toggles a class in a given HTML element.\r\n * The class will be added if the condition is true.\r\n * It will be removed otherwise.\r\n * @param el The element to toggle the class in.\r\n * @param str The class to toggle.\r\n * @param condition Condition to determine if class is added or removed.\r\n */\r\nexport function toggleClassInElement(el: HTMLElement, str: string, condition: boolean): boolean {\r\n\tif (condition) {\r\n\t\taddClassToElement(el, str);\r\n\t}\r\n\telse {\r\n\t\tremoveClassFromElement(el, str);\r\n\t}\r\n\treturn condition;\r\n}\r\n","export default class Point {\r\n\r\n\t/**\r\n\t * Returns a Point object from an event's coordinates.\r\n\t * @param event The event to extract the coordinates from.\r\n\t * @param touchIndex If the event is a TouchEvent, specify which touch should the method read from.\r\n\t */\r\n\tpublic static getFromEvent(event: MouseEvent | TouchEvent, touchIndex: number = 0): Point {\r\n\t\tconst point = new Point();\r\n\t\tif (event instanceof TouchEvent && event.touches) {\r\n\t\t\tpoint.x = event.touches[touchIndex].pageX;\r\n\t\t\tpoint.y = event.touches[touchIndex].pageY;\r\n\t\t}\r\n\t\telse if (event instanceof MouseEvent) {\r\n\t\t\tpoint.x = event.pageX;\r\n\t\t\tpoint.y = event.pageY;\r\n\t\t}\r\n\t\treturn point;\r\n\t}\r\n\r\n\t/**\r\n\t * Horizontal coordinate.\r\n\t */\r\n\tpublic x: number;\r\n\r\n\t/**\r\n\t * Vertical coordinate.\r\n\t */\r\n\tpublic y: number;\r\n\r\n\t/**\r\n\t * Creates a new 2D point.\r\n\t * @param x Horizontal coordinate.\r\n\t * @param y Vertical coordinate.\r\n\t */\r\n\tconstructor(x: number = 0, y: number = 0) {\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new instance of the point with the same coordinates.\r\n\t */\r\n\tpublic clone(): Point {\r\n\t\treturn new Point(this.x, this.y);\r\n\t}\r\n\r\n\t/**\r\n\t * Modifies the Point instance by adding coordinates from another `point`.\r\n\t * @param point The point to add.\r\n\t */\r\n\tpublic add(point: Point): Point {\r\n\t\tthis.x += point.x;\r\n\t\tthis.y += point.y;\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Modifies the Point instance by subtracting coordinates from another `point`.\r\n\t * @param point The point to subtract.\r\n\t */\r\n\tpublic sub(point: Point): Point {\r\n\t\tthis.x -= point.x;\r\n\t\tthis.y -= point.y;\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Modifies the Point instance by multiplying coordinates from another `point`.\r\n\t * @param point The point to multiply.\r\n\t */\r\n\tpublic multiply(point: Point): Point {\r\n\t\tthis.x *= point.x;\r\n\t\tthis.y *= point.y;\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Modifies the Point instance by dividing coordinates from another `point`.\r\n\t * @param point The point to divide.\r\n\t */\r\n\tpublic divide(point: Point): Point {\r\n\t\tthis.x /= point.x;\r\n\t\tthis.y /= point.y;\r\n\t\treturn this;\r\n\t}\r\n\r\n}\r\n","import ViewMatrixPlugin from '../core/viewmatrixplugin';\r\nimport { inElementBounds } from '../utils/html';\r\nimport { merge } from '../utils/objects';\r\nimport Point from '../utils/point';\r\n\r\n/**\r\n * Options that the ViewMatrix Touch plugin supports.\r\n */\r\nexport interface ITouchSwipePluginOptions {\r\n\t/**\r\n\t * Together with the instance's `classPrefix` option, defines the class to toggle when the element is being touched. Default is `touching`.\r\n\t */\r\n\tclassAlias?: string;\r\n\t/**\r\n\t * Tells the plugin what elements it should add touch event listeners to.\r\n\t */\r\n\teventTarget?: Document | Element;\r\n\t/**\r\n\t * Tells the plugin it should call preventDefault() when a touch is started. Default is `false`.\r\n\t */\r\n\tpreventDefault?: boolean;\r\n\t/**\r\n\t * Amount of pixels the delta must be until a swipe is registered. Default is `30`.\r\n\t */\r\n\ttolerance?: number;\r\n\t/**\r\n\t * If true, the plugin will handle vertical deltas instead of horizontal. Default is `false`.\r\n\t */\r\n\tvertical?: boolean;\r\n}\r\n\r\nexport default class TouchSwipePlugin extends ViewMatrixPlugin {\r\n\r\n\t/**\r\n\t * The instance's options.\r\n\t */\r\n\tpublic readonly options: ITouchSwipePluginOptions = {};\r\n\r\n\t/**\r\n\t * The instance's default values.\r\n\t */\r\n\tprivate readonly defaults: ITouchSwipePluginOptions = {\r\n\t\tclassAlias: 'touching',\r\n\t\teventTarget: document,\r\n\t\tpreventDefault: true,\r\n\t\ttolerance: 30,\r\n\t\tvertical: false\r\n\t};\r\n\r\n\t/**\r\n\t * Determines which was the last event target.\r\n\t */\r\n\tprivate eventTarget?: Document | Element = undefined;\r\n\r\n\t/**\r\n\t * Point with starting touch coordinates.\r\n\t */\r\n\tprivate touchStart?: Point = undefined;\r\n\r\n\t/**\r\n\t * Point with last touch coordinates.\r\n\t */\r\n\tprivate touchLast?: Point = undefined;\r\n\r\n\t/**\r\n\t * Point with difference between start and last touch coordinates.\r\n\t */\r\n\tprivate touchDelta?: Point = undefined;\r\n\r\n\t/**\r\n\t * Current touch target.\r\n\t */\r\n\tprivate target?: HTMLElement = undefined;\r\n\r\n\t/**\r\n\t * Initializes a new TouchSwipePlugin instance.\r\n\t * @param options Options for the plugin.\r\n\t */\r\n\tpublic constructor(options?: ITouchSwipePluginOptions) {\r\n\t\tsuper();\r\n\t\tmerge(this.options, this.defaults, options);\r\n\t}\r\n\r\n\t/**\r\n\t * Method called when the instance is initialized.\r\n\t */\r\n\tpublic onInit(): void {\r\n\t\tthis.cancelTouch(false);\r\n\r\n\t\t// setup event target for future events\r\n\t\tthis.eventTarget = this.options.eventTarget;\r\n\r\n\t\tif (this.eventTarget) {\r\n\t\t\t// add touch events\r\n\t\t\tthis.eventTarget.addEventListener('touchstart', this.handleTouchStart, { passive: false });\r\n\t\t\tthis.eventTarget.addEventListener('touchmove', this.handleTouchMove, { passive: false });\r\n\t\t\tthis.eventTarget.addEventListener('touchend', this.handleTouchEnd, { passive: false });\r\n\r\n\t\t\t// add mouse events\r\n\t\t\tthis.eventTarget.addEventListener('mousedown', this.handleTouchStart, { passive: false });\r\n\t\t\tthis.eventTarget.addEventListener('mousemove', this.handleTouchMove, { passive: false });\r\n\t\t\tthis.eventTarget.addEventListener('mouseup', this.handleTouchEnd, { passive: false });\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Method called when the instance is destroyed.\r\n\t */\r\n\tpublic onDestroy(): void {\r\n\t\tthis.cancelTouch(false);\r\n\r\n\t\tif (this.eventTarget) {\r\n\t\t\t// cancel touch events\r\n\t\t\tthis.eventTarget.removeEventListener('touchstart', this.handleTouchStart);\r\n\t\t\tthis.eventTarget.removeEventListener('touchmove', this.handleTouchMove);\r\n\t\t\tthis.eventTarget.removeEventListener('touchend', this.handleTouchEnd);\r\n\r\n\t\t\t// cancel mouse events\r\n\t\t\tthis.eventTarget.removeEventListener('mousedown', this.handleTouchStart);\r\n\t\t\tthis.eventTarget.removeEventListener('mousemove', this.handleTouchMove);\r\n\t\t\tthis.eventTarget.removeEventListener('mouseup', this.handleTouchEnd);\r\n\r\n\t\t\t// nullify the event target because we don't need it anymore\r\n\t\t\tthis.eventTarget = undefined;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Callback that is passed to touchmove events, so that touch can be cancelled on the other side.\r\n\t * @param emit Tells the method it should fire an event or not. Default is `true`.\r\n\t */\r\n\tprivate cancelTouch = (emit?: boolean) => {\r\n\t\tif (this.options.classAlias) {\r\n\t\t\tthis.instance.toggleClass(this.options.classAlias, false);\r\n\t\t}\r\n\t\tif (emit !== false) {\r\n\t\t\tthis.instance.emit('touch:cancel', this.target, this.touchLast);\r\n\t\t}\r\n\t\tthis.touchStart = undefined;\r\n\t\tthis.touchLast = undefined;\r\n\t\tthis.target = undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Handles touchStart or mouseDown events.\r\n\t * @param event The event to extract the coordinates from.\r\n\t */\r\n\tprivate handleTouchStart = (event: MouseEvent | TouchEvent) => {\r\n\t\tconst coords = Point.getFromEvent(event);\r\n\t\tif (!this.touchStart && inElementBounds(this.instance.element, coords)) {\r\n\t\t\tthis.touchStart = coords;\r\n\t\t\tthis.touchLast = coords;\r\n\t\t\tthis.target = this.instance.element;\r\n\t\t\tif (this.options.preventDefault && event.cancelable) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t}\r\n\t\t\tif (this.options.classAlias) {\r\n\t\t\t\tthis.instance.toggleClass(this.options.classAlias, true);\r\n\t\t\t}\r\n\t\t\tthis.instance.emit('touch:start', this.target, coords);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Handles touchMove or mouseMove events.\r\n\t * @param event The event to extract the coordinates from.\r\n\t */\r\n\tprivate handleTouchMove = (event: MouseEvent | TouchEvent) => {\r\n\t\tif (!this.touchStart) { return; }\r\n\t\tthis.touchLast = Point.getFromEvent(event);\r\n\t\tthis.touchDelta = this.touchStart.clone().sub(this.touchLast);\r\n\t\tthis.instance.emit('touch:move', this.target, this.touchDelta, this.cancelTouch);\r\n\r\n\t\tconst xAbs = Math.abs(this.touchDelta.x);\r\n\t\tconst yAbs = Math.abs(this.touchDelta.y);\r\n\t\tlet delta = 0;\r\n\r\n\t\tif (xAbs > yAbs && !this.options.vertical) {\r\n\t\t\t// swiped horizontally\r\n\t\t\tdelta = this.touchDelta.x;\r\n\t\t}\r\n\t\telse if (xAbs < yAbs && this.options.vertical) {\r\n\t\t\t// swiped vertically\r\n\t\t\tdelta = this.touchDelta.y;\r\n\t\t}\r\n\r\n\t\tif (delta > this.options.tolerance) {\r\n\t\t\tthis.instance.emit('swipe:next', this.target, this.touchDelta);\r\n\t\t\tthis.instance.inc(+1);\r\n\t\t\tthis.cancelTouch(false);\r\n\t\t}\r\n\t\telse if (delta < -this.options.tolerance) {\r\n\t\t\tthis.instance.emit('swipe:prev', this.target, this.touchDelta);\r\n\t\t\tthis.instance.inc(-1);\r\n\t\t\tthis.cancelTouch(false);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Handles touchEnd or mouseUp events.\r\n\t * @param event The event to extract the coordinates from.\r\n\t */\r\n\tprivate handleTouchEnd = (event: MouseEvent | TouchEvent) => {\r\n\t\tif (!this.touchStart) { return; }\r\n\t\tthis.instance.emit('touch:end', this.target, this.touchLast);\r\n\t\tthis.cancelTouch(false);\r\n\t}\r\n\r\n}\r\n","// based off of component-emitter package\r\n// https://github.com/component/emitter\r\n\r\nexport type EmitterCallback = (...args: any[]) => void;\r\n\r\nexport default abstract class Emitter {\r\n\r\n\t/**\r\n\t * List of callbacks maintained by the class.\r\n\t */\r\n\tprivate callbacks: { [id: string]: EmitterCallback[] } = {};\r\n\r\n\t/**\r\n\t * Listens on the given `event` with `callback`.\r\n\t * @param event The event to add the listener to.\r\n\t * @param callback Listener to invoke.\r\n\t */\r\n\tpublic on(event: string, callback: EmitterCallback): Emitter {\r\n\t\tif (typeof callback !== 'function') { return this; }\r\n\t\tconst key = '$' + event;\r\n\t\t(this.callbacks[key] = this.callbacks[key] || []).push(callback);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds an `event` listener that will be invoked a single time then automatically removed.\r\n\t * @param event The event to add the listener to.\r\n\t * @param callback Listener to invoke.\r\n\t */\r\n\tpublic once(event: string, callback: EmitterCallback): Emitter {\r\n\t\tif (typeof callback !== 'function') { return this; }\r\n\t\tfunction on() {\r\n\t\t\tthis.off(event, on);\r\n\t\t\tcallback.apply(this, arguments);\r\n\t\t}\r\n\t\t(on as any).callback = callback;\r\n\t\tthis.on(event, on);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the given callback for `event` or all registered callbacks.\r\n\t * @param event The event to remove the listener(s) from.\r\n\t * @param callback Specific listener to remove.\r\n\t */\r\n\tpublic off(event?: string, callback?: EmitterCallback): Emitter {\r\n\t\t// remove all events\r\n\t\tif (arguments.length === 0) {\r\n\t\t\tthis.callbacks = {};\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\t// remove specific event\r\n\t\tconst key = '$' + event;\r\n\t\tconst callbacks = this.callbacks[key];\r\n\t\tif (!callbacks) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\t// remove all handlers\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tdelete this.callbacks[key];\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\t// remove specific handler\r\n\t\tconst index = callbacks.indexOf(callback);\r\n\t\tif (index !== -1 && callbacks[index] === callback) {\r\n\t\t\tcallbacks.splice(index, 1);\r\n\t\t}\r\n\r\n\t\t// remove event-specific arrays without callbacks\r\n\t\t// to avoid memory leaks\r\n\t\tif (callbacks.length === 0) {\r\n\t\t\tdelete this.callbacks[key];\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Emits `event` with the given `args`.\r\n\t * @param event The event to trigger.\r\n\t * @param args Arguments to pass to each callback.\r\n\t */\r\n\tpublic emit(event: string, ...args: any[]): Emitter {\r\n\t\tlet callbacks = this.callbacks['$' + event];\r\n\t\tif (callbacks && callbacks.length > 0) {\r\n\t\t\tcallbacks = callbacks.slice(0);\r\n\t\t\tfor (const c of callbacks) {\r\n\t\t\t\tc.apply(this, args);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an array of callbacks for `event`.\r\n\t * @param event The event to get the listeners from.\r\n\t */\r\n\tpublic listeners(event: string): EmitterCallback[] {\r\n\t\treturn this.callbacks['$' + event] || [];\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if this emitter has `event` handlers.\r\n\t * @param event The event to verify.\r\n\t */\r\n\tpublic hasListeners(event: string): boolean {\r\n\t\treturn !!this.listeners(event).length;\r\n\t}\r\n\r\n}\r\n","import AutoplayPlugin from '../plugins/autoplay';\r\nimport TouchSwipePlugin from '../plugins/touchswipe';\r\nimport Emitter from '../utils/emitter';\r\nimport { addClassToElement, findChildrenInElement, removeClassFromElement, setElementStyle, toggleClassInElement } from '../utils/html';\r\nimport { clamp, wrap } from '../utils/math';\r\nimport { merge } from '../utils/objects';\r\nimport IViewMatrixClassAliases from './iviewmatrixclassaliases';\r\nimport IViewMatrixOptions from './iviewmatrixoptions';\r\nimport ViewMatrixPlugin from './viewmatrixplugin';\r\n\r\nexport interface IPluginDictionary {\r\n\t[id: string]: typeof ViewMatrixPlugin;\r\n}\r\n\r\nexport type PluginConstructor = (p: IPluginDictionary) => ViewMatrixPlugin[];\r\n\r\nexport default class ViewMatrix extends Emitter {\r\n\r\n\t/**\r\n\t * The instance's target element.\r\n\t */\r\n\tpublic element: HTMLElement;\r\n\r\n\t/**\r\n\t * The instance's options.\r\n\t */\r\n\tpublic readonly options: IViewMatrixOptions;\r\n\r\n\t/**\r\n\t * The ViewMatrix instance's children.\r\n\t */\r\n\tprivate children: HTMLElement[] = null;\r\n\r\n\t/**\r\n\t * List of ViewMatrixPlugin instances associated with the instance.\r\n\t */\r\n\tprivate plugins: ViewMatrixPlugin[] = [];\r\n\r\n\t/**\r\n\t * The class' instance defaults.\r\n\t */\r\n\tprivate readonly defaults: IViewMatrixOptions = {\r\n\t\t// state init\r\n\t\tstartingIndex: 0,\r\n\t\t// selectors\r\n\t\tchildrenSelector: '*',\r\n\t\t// classes\r\n\t\tclassAliases: {\r\n\t\t\telement: 'element',\r\n\t\t\tinfinite: 'infinite',\r\n\t\t\tchild: 'child',\r\n\t\t\tcurrent: 'current',\r\n\t\t\tbehind: 'behind',\r\n\t\t\tahead: 'ahead',\r\n\t\t\tbeyond: 'beyond'\r\n\t\t},\r\n\t\tclassPrefix: 'vm-',\r\n\t\t// function\r\n\t\tadjacentCount: 1,\r\n\t\thandleZIndex: true,\r\n\t\tinfinite: false,\r\n\t\twrap: true\r\n\t};\r\n\r\n\t/**\r\n\t * List of class names frequently used for children elements.\r\n\t */\r\n\tprivate classAliases: { [id: string]: string } = {};\r\n\r\n\t/**\r\n\t * Current slide's index.\r\n\t */\r\n\tprivate currentIndex: number = 0;\r\n\r\n\t/**\r\n\t * Creates a new ViewMatrix instance.\r\n\t * @param selector The target selector or element for the instance.\r\n\t * @param options Options for the instance.\r\n\t */\r\n\tconstructor(\r\n\t\tparentSelector: string | HTMLElement,\r\n\t\toptions?: IViewMatrixOptions,\r\n\t\tplugins?: ViewMatrixPlugin[] | PluginConstructor\r\n\t) {\r\n\t\tsuper();\r\n\r\n\t\t// get options\r\n\t\tthis.options = merge({}, this.defaults, options);\r\n\r\n\t\t// load plugins\r\n\t\tif (plugins) {\r\n\t\t\tif (plugins instanceof Array) {\r\n\t\t\t\tthis.plugins = Array.prototype.slice.call(plugins, 1);\r\n\t\t\t}\r\n\t\t\telse if (typeof plugins === 'function') {\r\n\t\t\t\tthis.plugins = plugins({\r\n\t\t\t\t\tAutoplayPlugin,\r\n\t\t\t\t\tTouchSwipePlugin\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// initialize\r\n\t\tthis.initialize(parentSelector, this.options.childrenSelector);\r\n\t}\r\n\r\n\t/**\r\n\t * Refreshes the instance.\r\n\t * @param parentSelector The query selector to find the element.\r\n\t * @param childrenSelector An optional query selector to filter children.\r\n\t */\r\n\tpublic initialize(parentSelector: string | HTMLElement, childrenSelector?: string): void {\r\n\t\t// destroy first\r\n\t\tthis.destroy();\r\n\r\n\t\t// get a valid selector\r\n\t\tparentSelector = parentSelector != null ? parentSelector : null;\r\n\r\n\t\t// check if we have an object,\r\n\t\t// if we do, POPULATE ALL THE VARS\r\n\t\tif (typeof parentSelector === 'string') {\r\n\t\t\tthis.element = document.querySelector(parentSelector) || null;\r\n\t\t}\r\n\t\telse if (parentSelector instanceof HTMLElement) {\r\n\t\t\tthis.element = parentSelector;\r\n\t\t}\r\n\r\n\t\t// do we still have a target?\r\n\t\t// if not, throw a hissy fit\r\n\t\tif (!this.element) {\r\n\t\t\tthrow new Error('No valid selector provided to ViewMatrix instance');\r\n\t\t}\r\n\r\n\t\t// (also update the selectors in the options to these)\r\n\t\tif (typeof childrenSelector === 'string') { this.options.childrenSelector = childrenSelector; }\r\n\r\n\t\t// set children and index\r\n\t\tthis.children = findChildrenInElement(this.element, childrenSelector);\r\n\t\tthis.currentIndex = this.wrapIndex(this.currentIndex);\r\n\r\n\t\t// add classes to new children\r\n\t\tthis.prepareClassNames(this.options.classPrefix, this.options.classAliases);\r\n\t\tfor (const child of this.children) {\r\n\t\t\taddClassToElement(child, this.classAliases.child);\r\n\t\t}\r\n\r\n\t\t// add classes to the element\r\n\t\taddClassToElement(this.element, this.classAliases.element);\r\n\t\ttoggleClassInElement(this.element, this.classAliases.infinite, this.options.infinite);\r\n\r\n\t\t// initialize plugins\r\n\t\tthis.initializePlugins();\r\n\r\n\t\t// refresh slides\r\n\t\tthis.slide(this.currentIndex);\r\n\r\n\t\t// trigger event\r\n\t\tthis.emit('init', this.element, this.children);\r\n\t}\r\n\r\n\t/**\r\n\t * Destroys the ViewMatrix instance.\r\n\t */\r\n\tpublic destroy(): void {\r\n\t\t// reset all plugins\r\n\t\tthis.destroyPlugins();\r\n\r\n\t\t// reset current element\r\n\t\tif (this.element) {\r\n\t\t\tremoveClassFromElement(this.element, [\r\n\t\t\t\tthis.classAliases.element,\r\n\t\t\t\tthis.classAliases.infinite\r\n\t\t\t]);\r\n\t\t}\r\n\r\n\t\t// reset current children\r\n\t\tif (this.children && this.children.length > 0) {\r\n\t\t\tfor (const child of this.children) {\r\n\t\t\t\tremoveClassFromElement(child, [\r\n\t\t\t\t\tthis.classAliases.child,\r\n\t\t\t\t\tthis.classAliases.current,\r\n\t\t\t\t\tthis.classAliases.beyond,\r\n\t\t\t\t\tthis.classAliases.behind,\r\n\t\t\t\t\tthis.classAliases.ahead\r\n\t\t\t\t] );\r\n\t\t\t\tsetElementStyle(child, 'z-index', null);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// trigger event\r\n\t\tthis.emit('destroy', this.element, this.children);\r\n\r\n\t\t// reset vars\r\n\t\tthis.element = null;\r\n\t\tthis.children = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Changes the ViewMatrix's current slide.\r\n\t * @param index Slide to change to.\r\n\t */\r\n\tpublic slide(index: number): HTMLElement {\r\n\t\tif (!this.children || this.children.length === 0) { return null; }\r\n\r\n\t\t// wrap index for safety\r\n\t\tindex = this.wrapIndex(index);\r\n\r\n\t\t// calc adjacent and distance values\r\n\t\tconst childrenCount = this.children.length;\r\n\t\tconst adjacentCount = Math.max(1, this.options.adjacentCount);\r\n\t\tconst distanceCount = Math.floor((childrenCount - 1) / 2);\r\n\t\tconst indexCount = distanceCount + (childrenCount % 2 === 0 ? 1 : 0);\r\n\r\n\t\t// trigger before event\r\n\t\tthis.emit('slide:before', this.currentIndex, index, childrenCount);\r\n\r\n\t\t// add or remove classes from children\r\n\t\tfor (let i = 0; i < childrenCount; i++) {\r\n\t\t\tconst child = this.children[i];\r\n\t\t\tlet distance = i - index;\r\n\r\n\t\t\tif (this.options.infinite) {\r\n\t\t\t\t// if we're looping around in an infinite gallery,\r\n\t\t\t\t// we loop the distance as well\r\n\t\t\t\tif (distance > distanceCount) {\r\n\t\t\t\t\tdistance -= childrenCount;\r\n\t\t\t\t}\r\n\t\t\t\telse if (distance < -distanceCount) {\r\n\t\t\t\t\tdistance += childrenCount;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (i === index) {\r\n\t\t\t\t// this is the new current element\r\n\t\t\t\t// remove all old classes and add the \"vm-current\" one\r\n\t\t\t\tremoveClassFromElement(child, [\r\n\t\t\t\t\tthis.classAliases.ahead,\r\n\t\t\t\t\tthis.classAliases.behind,\r\n\t\t\t\t\tthis.classAliases.beyond\r\n\t\t\t\t]);\r\n\t\t\t\taddClassToElement(child, this.classAliases.current);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// this is not a current element,\r\n\t\t\t\t// figure out if it's before or after\r\n\t\t\t\tconst isAhead = distance > 0;\r\n\t\t\t\tconst isBehind = distance < 0;\r\n\r\n\t\t\t\t// check if it's beyond the adjacent scope\r\n\t\t\t\tconst isBeyond = Math.abs(distance) > adjacentCount;\r\n\r\n\t\t\t\t// remove \"current\" and toggle other classes\r\n\t\t\t\tremoveClassFromElement(child, this.classAliases.current);\r\n\t\t\t\ttoggleClassInElement(child, this.classAliases.beyond, isBeyond);\r\n\t\t\t\ttoggleClassInElement(child, this.classAliases.behind, isBehind);\r\n\t\t\t\ttoggleClassInElement(child, this.classAliases.ahead, isAhead);\r\n\t\t\t}\r\n\r\n\t\t\t// if we're handling z-index, fix it\r\n\t\t\tif (this.options.handleZIndex) {\r\n\t\t\t\tsetElementStyle(child, 'z-index', indexCount - Math.abs(distance));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// trigger event\r\n\t\tthis.emit('slide:after', this.currentIndex, index, childrenCount);\r\n\r\n\t\t// set new index\r\n\t\tthis.currentIndex = index;\r\n\r\n\t\t// return child element\r\n\t\treturn this.children[index];\r\n\t}\r\n\r\n\t/**\r\n\t * Increments the ViewMatrix's current slide.\r\n\t * @param inc Value to add to the current index.\r\n\t */\r\n\tpublic inc(increment: number): HTMLElement {\r\n\t\treturn this.slide(this.currentIndex + increment);\r\n\t}\r\n\r\n\t/**\r\n\t * Toggles a class in the instance's element.\r\n\t * @param name The class to toggle.\r\n\t * @param condition Condition to determine if class is added or removed.\r\n\t */\r\n\tpublic toggleClass(name: string, condition: boolean): void {\r\n\t\tif (this.element) {\r\n\t\t\ttoggleClassInElement(this.element, this.options.classPrefix + name, condition);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Caches all class names for future use.\r\n\t * @param prefix Prefix for all class aliases.\r\n\t * @param aliases String dictionary of class aliases.\r\n\t */\r\n\tprivate prepareClassNames(prefix: string = this.options.classPrefix, aliases: IViewMatrixClassAliases = this.options.classAliases): void {\r\n\t\tfor (const k in aliases) {\r\n\t\t\tif (Object.prototype.hasOwnProperty.call(aliases, k)) {\r\n\t\t\t\tthis.classAliases[k] = prefix + aliases[k];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Wraps a given \"index\" to be safe for the instance to use.\r\n\t * @param index Index to wrap.\r\n\t */\r\n\tprivate wrapIndex(index: number): number {\r\n\t\tconst max = this.children.length - 1;\r\n\t\treturn this.options.wrap\r\n\t\t\t? wrap(index, 0, max)\r\n\t\t\t: clamp(index, 0, max);\r\n\t}\r\n\r\n\t/**\r\n\t * Invokes the `onInit` method on all registered plugins.\r\n\t */\r\n\tprivate initializePlugins(): void {\r\n\t\tfor (const p of this.plugins) {\r\n\t\t\tif (p) {\r\n\t\t\t\tp.instance = this;\r\n\t\t\t\tif (typeof p.onInit === 'function') {\r\n\t\t\t\t\tp.onInit();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Invokes the `onDestroy` method on all registered plugins.\r\n\t */\r\n\tprivate destroyPlugins(): void {\r\n\t\tfor (const p of this.plugins) {\r\n\t\t\tif (p && p.instance) {\r\n\t\t\t\tif (typeof p.onDestroy === 'function') {\r\n\t\t\t\t\tp.onDestroy();\r\n\t\t\t\t}\r\n\t\t\t\tp.instance = null;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","/**\r\n * Clamps a given \"value\" between \"min\" and \"max\", so it never overflows.\r\n * @param value - The value to clamp.\r\n * @param min - Minimum value, inclusive.\r\n * @param max - Maximum value, inclusive.\r\n */\r\nexport function clamp(value: number, min: number, max: number): number {\r\n\treturn Math.max(min, Math.min(max, value));\r\n}\r\n\r\n/**\r\n * Wraps a given \"value\" between \"min\" and \"max\", so it never overflows.\r\n * @param value The value to wrap.\r\n * @param min Minimum value, inclusive.\r\n * @param max Maximum value, inclusive.\r\n */\r\nexport function wrap(value: number = 0, min: number = 0, max: number = 0): number {\r\n\t// make sure we're using the right max\r\n\tmax = Math.max(min, max);\r\n\r\n\t// make math\r\n\tconst x = value - min;\r\n\tconst m = (max + 1) - min;\r\n\treturn min + (x % m + m) % m;\r\n}\r\n","import ViewMatrix from './src/core/viewmatrix';\r\nimport AutoplayPlugin from './src/plugins/autoplay';\r\nimport TouchSwipePlugin from './src/plugins/touchswipe';\r\nimport Emitter from './src/utils/emitter';\r\n\r\nexport {\r\n\tViewMatrix,\r\n\tAutoplayPlugin,\r\n\tTouchSwipePlugin,\r\n\tEmitter\r\n};\r\n\r\n(window as any).ViewMatrix = ViewMatrix;\r\n"],"sourceRoot":""}