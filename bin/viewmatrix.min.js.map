{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/utils/emitter.ts","webpack:///./src/utils/string.ts","webpack:///./src/utils/html.ts","webpack:///./src/utils/objects.ts","webpack:///./src/core/viewmatrix.ts","webpack:///./src/utils/math.ts","webpack:///./src/core/viewmatrixplugin.ts","webpack:///./src/plugins/autoplay.ts","webpack:///./src/utils/point.ts","webpack:///./src/plugins/touchswipe.ts","webpack:///./src/index.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","Emitter","this","callbacks","on","event","callback","key","push","once","off","apply","arguments","length","index","indexOf","splice","emit","args","_i","_a","callbacks_1","slice","listeners","hasListeners","sanitize","str","trim","replace","addClassToElement","el","HTMLElement","classes","split","result","className","classes_1","removeClassFromElement","Array","classes_2","removeAttribute","setElementStyle","style","getAttribute","RegExp","setAttribute","toggleClassInElement","condition","merge","target","sources","TypeError","to","nextSource","nextKey","_super","ViewMatrix","parentSelector","options","_this","children","defaults","startingIndex","childrenSelector","classAliases","element","infinite","child","current","behind","ahead","beyond","classPrefix","adjacentCount","handleZIndex","wrap","currentIndex","refresh","__extends","destroy","document","querySelector","Error","selector","querySelectorAll","wrapIndex","prepareClassNames","slide","childrenCount","Math","max","distanceCount","floor","indexCount","distance","isAhead","isBehind","isBeyond","abs","inc","increment","toggleClass","prefix","aliases","k","min","clamp","emitter","ViewMatrixPlugin","instance","onInit","onDestroy","window","setTimeout","applyOptions","ViewMatrixAutoplay","cancelOnSlide","classAlias","direction","instant","interval","cancelAutoplay","intervalId","handleAutoplay","handleSlideChange","pause","autoplay_extends","play","setInterval","clearInterval","viewmatrixplugin","Point","x","y","getFromEvent","touchIndex","point","TouchEvent","touches","pageX","pageY","MouseEvent","clone","add","sub","multiply","divide","ViewMatrixTouchSwipe","preventDefault","tolerance","vertical","touchStart","undefined","touchLast","touchDelta","cancelTouch","handleTouchStart","coords","offsetLeft","offsetWidth","offsetTop","offsetHeight","inElementBounds","handleTouchMove","xAbs","yAbs","delta","handleTouchEnd","touchswipe_extends","addEventListener","passive","removeEventListener","viewmatrix","autoplay","touchswipe"],"mappings":"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","file":"./viewmatrix.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","// based off of component-emitter package\r\n// https://github.com/component/emitter\r\n\r\ntype EmitterCallback = (...args: any[]) => void;\r\n\r\nexport default abstract class Emitter {\r\n\r\n\t/**\r\n\t * List of callbacks maintained by the class.\r\n\t */\r\n\tprivate callbacks: { [id: string]: EmitterCallback[] } = {};\r\n\r\n\t/**\r\n\t * Listens on the given `event` with `callback`.\r\n\t * @param event The event to add the listener to.\r\n\t * @param callback Listener to invoke.\r\n\t */\r\n\tpublic on(event: string, callback: EmitterCallback): Emitter {\r\n\t\tif (typeof callback !== 'function') { return this; }\r\n\t\tconst key = '$' + event;\r\n\t\t(this.callbacks[key] = this.callbacks[key] || []).push(callback);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds an `event` listener that will be invoked a single time then automatically removed.\r\n\t * @param event The event to add the listener to.\r\n\t * @param callback Listener to invoke.\r\n\t */\r\n\tpublic once(event: string, callback: EmitterCallback): Emitter {\r\n\t\tif (typeof callback !== 'function') { return this; }\r\n\t\tfunction on() {\r\n\t\t\tthis.off(event, on);\r\n\t\t\tcallback.apply(this, arguments);\r\n\t\t}\r\n\t\t(on as any).callback = callback;\r\n\t\tthis.on(event, on);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the given callback for `event` or all registered callbacks.\r\n\t * @param event The event to remove the listener(s) from.\r\n\t * @param callback Specific listener to remove.\r\n\t */\r\n\tpublic off(event?: string, callback?: EmitterCallback): Emitter {\r\n\t\t// remove all events\r\n\t\tif (arguments.length === 0) {\r\n\t\t\tthis.callbacks = {};\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\t// remove specific event\r\n\t\tconst key = '$' + event;\r\n\t\tconst callbacks = this.callbacks[key];\r\n\t\tif (!callbacks) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\t// remove all handlers\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tdelete this.callbacks[key];\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\t// remove specific handler\r\n\t\tconst index = callbacks.indexOf(callback);\r\n\t\tif (index !== -1 && callbacks[index] === callback) {\r\n\t\t\tcallbacks.splice(index, 1);\r\n\t\t}\r\n\r\n\t\t// remove event-specific arrays without callbacks\r\n\t\t// to avoid memory leaks\r\n\t\tif (callbacks.length === 0) {\r\n\t\t\tdelete this.callbacks[key];\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Emits `event` with the given `args`.\r\n\t * @param event The event to trigger.\r\n\t * @param args Arguments to pass to each callback.\r\n\t */\r\n\tpublic emit(event: string, ...args: any[]): Emitter {\r\n\t\tlet callbacks = this.callbacks['$' + event];\r\n\t\tif (callbacks && callbacks.length > 0) {\r\n\t\t\tcallbacks = callbacks.slice(0);\r\n\t\t\tfor (const c of callbacks) {\r\n\t\t\t\tc.apply(this, args);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an array of callbacks for `event`.\r\n\t * @param event The event to get the listeners from.\r\n\t */\r\n\tpublic listeners(event: string): EmitterCallback[] {\r\n\t\treturn this.callbacks['$' + event] || [];\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if this emitter has `event` handlers.\r\n\t * @param event The event to verify.\r\n\t */\r\n\tpublic hasListeners(event: string): boolean {\r\n\t\treturn !!this.listeners(event).length;\r\n\t}\r\n\r\n}\r\n","/**\r\n * Clears all extra spaces in a string.\r\n * @param str String to sanitize.\r\n */\r\nexport function sanitize(str: string): string {\r\n\treturn ('' + str).trim().replace(/\\s\\s+/g, ' ');\r\n}\r\n","import Point from './point';\r\nimport { sanitize } from './string';\r\n\r\n/**\r\n * Adds a class to a given HTML element.\r\n * @param el The element to add the class to.\r\n * @param str The class to add.\r\n */\r\nexport function addClassToElement(el: HTMLElement, str: string): void {\r\n\tif (!(el instanceof HTMLElement)) { return; }\r\n\tconst classes = sanitize(str).split(' ');\r\n\tlet result = el.className.trim();\r\n\tfor (const c of classes) {\r\n\t\tif (result.indexOf(c) === -1) {\r\n\t\t\tresult = result + ' ' + c;\r\n\t\t}\r\n\t}\r\n\tel.className = sanitize(result);\r\n}\r\n\r\n/**\r\n * Returns children inside an element.\r\n * @param el The element to return children from.\r\n * @param selector Query selector to filter children.\r\n */\r\nexport function findChildrenInElement(el: HTMLElement, selector?: string): HTMLElement[] {\r\n\treturn typeof selector === 'string'\r\n\t\t? [].slice.call(el.querySelectorAll(':scope > ' + selector))\r\n\t\t: el.children;\r\n}\r\n\r\n/**\r\n * Checks if the given `coords` are contained within a `target`.\r\n * @param target The target to check.\r\n * @param coords The coordinates to check if they're inside the Target.\r\n */\r\nexport function inElementBounds(target: HTMLElement, coords: Point) {\r\n\treturn target &&\r\n\t\tcoords.x >= target.offsetLeft && coords.x <= target.offsetLeft + target.offsetWidth &&\r\n\t\tcoords.y >= target.offsetTop && coords.y <= target.offsetTop + target.offsetHeight;\r\n}\r\n\r\n/**\r\n * Removes a class from a given HTML element.\r\n * @param el The element to remove the class from.\r\n * @param str The class to remove.\r\n */\r\nexport function removeClassFromElement(el: HTMLElement, str: string | string[]): void {\r\n\tif (!(el instanceof HTMLElement)) { return; }\r\n\tconst classes = !(str instanceof Array)\r\n\t\t? sanitize(str).split(' ')\r\n\t\t: str;\r\n\tlet result = el.className.trim();\r\n\tfor (const c of classes) {\r\n\t\tif (result.indexOf(c) !== -1) {\r\n\t\t\tresult = result.replace(c, '');\r\n\t\t}\r\n\t}\r\n\tel.className = sanitize(result);\r\n\tif (el.className.length === 0) {\r\n\t\tel.removeAttribute('class');\r\n\t}\r\n}\r\n\r\n/**\r\n * Sets the inline style of an element.\r\n * If \"null\" is provided as the value, the style will be erased.\r\n * @param el The element to style.\r\n * @param name The name of the style to add.\r\n * @param value The value for the style. A value of \"null\" will erase the style.\r\n */\r\nexport function setElementStyle(el: HTMLElement, name: string, value: any): string {\r\n\tlet style = sanitize(el.getAttribute('style') || '');\r\n\tif (value == null || style.indexOf(name + ':') !== -1) {\r\n\t\tstyle = style.replace(new RegExp(name + ':[^;]+;', 'g'), '');\r\n\t}\r\n\tif (value != null) {\r\n\t\tstyle += name + ':' + value + ';';\r\n\t}\r\n\tif (style.length > 0) {\r\n\t\tel.setAttribute('style', sanitize(style));\r\n\t}\r\n\telse {\r\n\t\tel.removeAttribute('style');\r\n\t}\r\n\treturn style;\r\n}\r\n\r\n/**\r\n * Toggles a class in a given HTML element.\r\n * The class will be added if the condition is true.\r\n * It will be removed otherwise.\r\n * @param el The element to toggle the class in.\r\n * @param str The class to toggle.\r\n * @param condition Condition to determine if class is added or removed.\r\n */\r\nexport function toggleClassInElement(el: HTMLElement, str: string, condition: boolean): boolean {\r\n\tif (condition) {\r\n\t\taddClassToElement(el, str);\r\n\t}\r\n\telse {\r\n\t\tremoveClassFromElement(el, str);\r\n\t}\r\n\treturn condition;\r\n}\r\n","/**\r\n * Merges one or more objects into `target`.\r\n * @param target The object to merge to.\r\n * @param sources One or more sources to merge onto `target`.\r\n */\r\nexport function merge<T extends object>(target: T, ...sources: T[]): T {\r\n\tif (target == null) {\r\n\t\tthrow new TypeError('Cannot convert undefined or null to object');\r\n\t}\r\n\tconst to = Object(target);\r\n\tfor (let index = 1; index < arguments.length; index++) {\r\n\t\tconst nextSource = arguments[index];\r\n\t\tif (nextSource != null) {\r\n\t\t\tfor (const nextKey in nextSource) {\r\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\r\n\t\t\t\t\tto[nextKey] = nextSource[nextKey];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn to;\r\n}\r\n","import Emitter from '../utils/emitter';\r\nimport { addClassToElement, findChildrenInElement, removeClassFromElement, setElementStyle, toggleClassInElement } from '../utils/html';\r\nimport { clamp, wrap } from '../utils/math';\r\nimport { merge } from '../utils/objects';\r\nimport IViewMatrixClassAliases from './iviewmatrixclassaliases';\r\nimport IViewMatrixOptions from './iviewmatrixoptions';\r\n\r\nexport default class ViewMatrix extends Emitter {\r\n\r\n\t/**\r\n\t * The instance's target element.\r\n\t */\r\n\tpublic element: HTMLElement;\r\n\r\n\t/**\r\n\t * The instance's options.\r\n\t */\r\n\tpublic readonly options: IViewMatrixOptions;\r\n\r\n\t/**\r\n\t * The ViewMatrix instance's children.\r\n\t */\r\n\tprivate children: HTMLElement[] = null;\r\n\r\n\t/**\r\n\t * The class' instance defaults.\r\n\t */\r\n\tprivate readonly defaults: IViewMatrixOptions = {\r\n\t\t// state init\r\n\t\tstartingIndex: 0,\r\n\t\t// selectors\r\n\t\tchildrenSelector: '*',\r\n\t\t// classes\r\n\t\tclassAliases: {\r\n\t\t\telement: 'element',\r\n\t\t\tinfinite: 'infinite',\r\n\t\t\tchild: 'child',\r\n\t\t\tcurrent: 'current',\r\n\t\t\tbehind: 'behind',\r\n\t\t\tahead: 'ahead',\r\n\t\t\tbeyond: 'beyond'\r\n\t\t},\r\n\t\tclassPrefix: 'vm-',\r\n\t\t// function\r\n\t\tadjacentCount: 1,\r\n\t\thandleZIndex: true,\r\n\t\tinfinite: false,\r\n\t\twrap: true\r\n\t};\r\n\r\n\t/**\r\n\t * List of class names frequently used for children elements.\r\n\t */\r\n\tprivate classAliases: { [id: string]: string } = {};\r\n\r\n\t/**\r\n\t * Current slide's index.\r\n\t */\r\n\tprivate currentIndex: number = 0;\r\n\r\n\t/**\r\n\t * Creates a new ViewMatrix instance.\r\n\t * @param selector The target selector or element for the instance.\r\n\t * @param options Options for the instance.\r\n\t */\r\n\tconstructor(parentSelector: string | HTMLElement, options?: IViewMatrixOptions) {\r\n\t\tsuper();\r\n\t\tthis.options = merge(({} as IViewMatrixOptions), this.defaults, options);\r\n\t\tthis.refresh(parentSelector, this.options.childrenSelector);\r\n\t}\r\n\r\n\t/**\r\n\t * Destroys the ViewMatrix instance.\r\n\t */\r\n\tpublic destroy(): void {\r\n\t\t// reset current element\r\n\t\tif (this.element) {\r\n\t\t\tremoveClassFromElement(this.element, [\r\n\t\t\t\tthis.classAliases.element,\r\n\t\t\t\tthis.classAliases.infinite\r\n\t\t\t]);\r\n\t\t}\r\n\r\n\t\t// reset current children\r\n\t\tif (this.children && this.children.length > 0) {\r\n\t\t\tfor (const child of this.children) {\r\n\t\t\t\tremoveClassFromElement(child, [\r\n\t\t\t\t\tthis.classAliases.child,\r\n\t\t\t\t\tthis.classAliases.current,\r\n\t\t\t\t\tthis.classAliases.beyond,\r\n\t\t\t\t\tthis.classAliases.behind,\r\n\t\t\t\t\tthis.classAliases.ahead\r\n\t\t\t\t] );\r\n\t\t\t\tsetElementStyle(child, 'z-index', null);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// trigger event\r\n\t\tthis.emit('destroy', this.element, this.children);\r\n\r\n\t\t// reset vars\r\n\t\tthis.element = null;\r\n\t\tthis.children = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Refreshes the instance.\r\n\t * @param parentSelector The query selector to find the element.\r\n\t * @param childrenSelector An optional query selector to filter children.\r\n\t */\r\n\tpublic refresh(parentSelector: string | HTMLElement, childrenSelector?: string): void {\r\n\t\t// destroy first\r\n\t\tthis.destroy();\r\n\r\n\t\t// get a valid selector\r\n\t\tparentSelector = parentSelector != null ? parentSelector : null;\r\n\r\n\t\t// check if we have an object,\r\n\t\t// if we do, POPULATE ALL THE VARS\r\n\t\tif (typeof parentSelector === 'string') {\r\n\t\t\tthis.element = document.querySelector(parentSelector) || null;\r\n\t\t}\r\n\t\telse if (parentSelector instanceof HTMLElement) {\r\n\t\t\tthis.element = parentSelector;\r\n\t\t}\r\n\r\n\t\t// do we still have a target?\r\n\t\t// if not, throw a hissy fit\r\n\t\tif (!this.element) {\r\n\t\t\tthrow new Error('No valid selector provided to ViewMatrix instance');\r\n\t\t}\r\n\r\n\t\t// (also update the selectors in the options to these)\r\n\t\tif (typeof childrenSelector === 'string') { this.options.childrenSelector = childrenSelector; }\r\n\r\n\t\t// set children and index\r\n\t\tthis.children = findChildrenInElement(this.element, childrenSelector);\r\n\t\tthis.currentIndex = this.wrapIndex(this.currentIndex);\r\n\r\n\t\t// add classes to new children\r\n\t\tthis.prepareClassNames(this.options.classPrefix, this.options.classAliases);\r\n\t\tfor (const child of this.children) {\r\n\t\t\taddClassToElement(child, this.classAliases.child);\r\n\t\t}\r\n\r\n\t\t// refresh slides\r\n\t\tthis.slide(this.currentIndex);\r\n\r\n\t\t// add classes to the element\r\n\t\taddClassToElement(this.element, this.classAliases.element);\r\n\t\ttoggleClassInElement(this.element, this.classAliases.infinite, this.options.infinite);\r\n\r\n\t\t// trigger event\r\n\t\tthis.emit('init', this.element, this.children);\r\n\t}\r\n\r\n\t/**\r\n\t * Changes the ViewMatrix's current slide.\r\n\t * @param index Slide to change to.\r\n\t */\r\n\tpublic slide(index: number): HTMLElement {\r\n\t\tif (!this.children || this.children.length === 0) { return null; }\r\n\r\n\t\t// wrap index for safety\r\n\t\tindex = this.wrapIndex(index);\r\n\r\n\t\t// calc adjacent and distance values\r\n\t\tconst childrenCount = this.children.length;\r\n\t\tconst adjacentCount = Math.max(1, this.options.adjacentCount);\r\n\t\tconst distanceCount = Math.floor((childrenCount - 1) / 2);\r\n\t\tconst indexCount = distanceCount + (childrenCount % 2 === 0 ? 1 : 0);\r\n\r\n\t\t// trigger before event\r\n\t\tthis.emit('slide:before', this.currentIndex, index, childrenCount);\r\n\r\n\t\t// add or remove classes from children\r\n\t\tfor (let i = 0; i < childrenCount; i++) {\r\n\t\t\tconst child = this.children[i];\r\n\t\t\tlet distance = i - index;\r\n\r\n\t\t\tif (this.options.infinite) {\r\n\t\t\t\t// if we're looping around in an infinite gallery,\r\n\t\t\t\t// we loop the distance as well\r\n\t\t\t\tif (distance > distanceCount) {\r\n\t\t\t\t\tdistance -= childrenCount;\r\n\t\t\t\t}\r\n\t\t\t\telse if (distance < -distanceCount) {\r\n\t\t\t\t\tdistance += childrenCount;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (i === index) {\r\n\t\t\t\t// this is the new current element\r\n\t\t\t\t// remove all old classes and add the \"vm-current\" one\r\n\t\t\t\tremoveClassFromElement(child, [\r\n\t\t\t\t\tthis.classAliases.ahead,\r\n\t\t\t\t\tthis.classAliases.behind,\r\n\t\t\t\t\tthis.classAliases.beyond\r\n\t\t\t\t]);\r\n\t\t\t\taddClassToElement(child, this.classAliases.current);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// this is not a current element,\r\n\t\t\t\t// figure out if it's before or after\r\n\t\t\t\tconst isAhead = distance > 0;\r\n\t\t\t\tconst isBehind = distance < 0;\r\n\r\n\t\t\t\t// check if it's beyond the adjacent scope\r\n\t\t\t\tconst isBeyond = Math.abs(distance) > adjacentCount;\r\n\r\n\t\t\t\t// remove \"current\" and toggle other classes\r\n\t\t\t\tremoveClassFromElement(child, this.classAliases.current);\r\n\t\t\t\ttoggleClassInElement(child, this.classAliases.beyond, isBeyond);\r\n\t\t\t\ttoggleClassInElement(child, this.classAliases.behind, isBehind);\r\n\t\t\t\ttoggleClassInElement(child, this.classAliases.ahead, isAhead);\r\n\t\t\t}\r\n\r\n\t\t\t// if we're handling z-index, fix it\r\n\t\t\tif (this.options.handleZIndex) {\r\n\t\t\t\tsetElementStyle(child, 'z-index', indexCount - Math.abs(distance));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// trigger event\r\n\t\tthis.emit('slide:after', this.currentIndex, index, childrenCount);\r\n\r\n\t\t// set new index\r\n\t\tthis.currentIndex = index;\r\n\r\n\t\t// return child element\r\n\t\treturn this.children[index];\r\n\t}\r\n\r\n\t/**\r\n\t * Increments the ViewMatrix's current slide.\r\n\t * @param inc Value to add to the current index.\r\n\t */\r\n\tpublic inc(increment: number): HTMLElement {\r\n\t\treturn this.slide(this.currentIndex + increment);\r\n\t}\r\n\r\n\t/**\r\n\t * Toggles a class in the instance's element.\r\n\t * @param name The class to toggle.\r\n\t * @param condition Condition to determine if class is added or removed.\r\n\t */\r\n\tpublic toggleClass(name: string, condition: boolean): void {\r\n\t\tif (this.element) {\r\n\t\t\ttoggleClassInElement(this.element, this.options.classPrefix + name, condition);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Caches all class names for future use.\r\n\t * @param prefix Prefix for all class aliases.\r\n\t * @param aliases String dictionary of class aliases.\r\n\t */\r\n\tprivate prepareClassNames(prefix: string = this.options.classPrefix, aliases: IViewMatrixClassAliases = this.options.classAliases): void {\r\n\t\tfor (const k in aliases) {\r\n\t\t\tif (Object.prototype.hasOwnProperty.call(aliases, k)) {\r\n\t\t\t\tthis.classAliases[k] = prefix + aliases[k];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Wraps a given \"index\" to be safe for the instance to use.\r\n\t * @param index Index to wrap.\r\n\t */\r\n\tprivate wrapIndex(index: number): number {\r\n\t\tconst max = this.children.length - 1;\r\n\t\treturn this.options.wrap\r\n\t\t\t? wrap(index, 0, max)\r\n\t\t\t: clamp(index, 0, max);\r\n\t}\r\n\r\n}\r\n","/**\r\n * Clamps a given \"value\" between \"min\" and \"max\", so it never overflows.\r\n * @param value - The value to clamp.\r\n * @param min - Minimum value, inclusive.\r\n * @param max - Maximum value, inclusive.\r\n */\r\nexport function clamp(value: number, min: number, max: number): number {\r\n\treturn Math.max(min, Math.min(max, value));\r\n}\r\n\r\n/**\r\n * Wraps a given \"value\" between \"min\" and \"max\", so it never overflows.\r\n * @param value The value to wrap.\r\n * @param min Minimum value, inclusive.\r\n * @param max Maximum value, inclusive.\r\n */\r\nexport function wrap(value: number = 0, min: number = 0, max: number = 0): number {\r\n\t// make sure we're using the right max\r\n\tmax = Math.max(min, max);\r\n\r\n\t// make math\r\n\tconst x = value - min;\r\n\tconst m = (max + 1) - min;\r\n\treturn min + (x % m + m) % m;\r\n}\r\n","import { merge } from '../utils/objects';\r\nimport ViewMatrix from './viewmatrix';\r\n\r\nexport default abstract class ViewMatrixPlugin<T extends object> {\r\n\r\n\t/**\r\n\t * Plugin options.\r\n\t */\r\n\tpublic readonly options: T;\r\n\r\n\t/**\r\n\t * Plugin defaults.\r\n\t */\r\n\tprotected readonly defaults: T;\r\n\r\n\t/**\r\n\t * The ViewMatrix instance the plugin belongs to.\r\n\t */\r\n\tprotected readonly instance: ViewMatrix;\r\n\r\n\t/**\r\n\t * Creates a new plugin instance.\r\n\t * @param instance The ViewMatrix instance the plugin will belong to.\r\n\t */\r\n\tconstructor(instance: ViewMatrix, options?: T) {\r\n\t\tthis.options = {} as T;\r\n\t\tthis.instance = instance;\r\n\t\tthis.instance.on('init', this.onInit);\r\n\t\tthis.instance.on('destroy', this.onDestroy);\r\n\t\twindow.setTimeout(() => { this.applyOptions(options); }, 1); // TODO: not liking this bit right here\r\n\t}\r\n\r\n\t/**\r\n\t * Applies options to the class and starts it up.\r\n\t * @param options Options passed to the class.\r\n\t */\r\n\tpublic applyOptions(options?: T) {\r\n\t\tmerge(this.options, this.defaults, options);\r\n\t\tthis.onInit();\r\n\t}\r\n\r\n\t/**\r\n\t * Method called when the instance is initialized.\r\n\t */\r\n\tprotected abstract onInit(): void;\r\n\r\n\t/**\r\n\t * Method called when the instance is destroyed.\r\n\t */\r\n\tprotected abstract onDestroy(): void;\r\n\r\n}\r\n","import ViewMatrixPlugin from '../core/viewmatrixplugin';\r\n\r\n/**\r\n * Options that the ViewMatrix Autoplay plugin supports.\r\n */\r\nexport interface IViewMatrixAutoplayOptions {\r\n\t/**\r\n\t * Tells the module it should cancel the autoplay when a slide is manually changed. Default is `true`.\r\n\t */\r\n\tcancelOnSlide: boolean;\r\n\t/**\r\n\t * Together with the instance's `classPrefix` option, defines the class to toggle when autoplaying is enabled. Default is `autoplaying`.\r\n\t */\r\n\tclassAlias: string;\r\n\t/**\r\n\t * Direction increment of the navigation. Default is `+1` = `next`.\r\n\t */\r\n\tdirection: number;\r\n\t/**\r\n\t * Tells the module it should start autoplaying immediately. Default is `true`.\r\n\t */\r\n\tinstant: boolean;\r\n\t/**\r\n\t * Milliseconds it takes to navigate. Default is `3000`.\r\n\t */\r\n\tinterval: number;\r\n}\r\n\r\nexport default class ViewMatrixAutoplay extends ViewMatrixPlugin<IViewMatrixAutoplayOptions> {\r\n\r\n\t/**\r\n\t * The ViewMatrixAutoplay instance's default values.\r\n\t */\r\n\tprotected readonly defaults = {\r\n\t\tcancelOnSlide: true,\r\n\t\tclassAlias: 'autoplaying',\r\n\t\tdirection: +1,\r\n\t\tinstant: true,\r\n\t\tinterval: 3000\r\n\t};\r\n\r\n\t/**\r\n\t * Determines if autoplay should be cancelled when handling a slide change.\r\n\t */\r\n\tprivate cancelAutoplay: boolean = true;\r\n\r\n\t/**\r\n\t * ID of the setInterval instance.\r\n\t */\r\n\tprivate intervalId: number = 0;\r\n\r\n\t/**\r\n\t * Starts the autoplay.\r\n\t * @param emit Tells the method it should fire an event or not. Default is `true`.\r\n\t */\r\n\tpublic play(emit?: boolean): void {\r\n\t\tthis.pause(false);\r\n\t\tthis.intervalId = window.setInterval(this.handleAutoplay, this.options.interval);\r\n\t\tif (this.options.classAlias) {\r\n\t\t\tthis.instance.toggleClass(this.options.classAlias, true);\r\n\t\t}\r\n\t\tif (emit !== false) {\r\n\t\t\tthis.instance.emit('autoplay:start');\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Stops the autoplay.\r\n\t * @param emit Tells the method it should fire an event or not. Default is `true`.\r\n\t */\r\n\tpublic pause(emit?: boolean) {\r\n\t\tif (this.intervalId === 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tclearInterval(this.intervalId);\r\n\t\tthis.intervalId = 0;\r\n\t\tif (this.options.classAlias) {\r\n\t\t\tthis.instance.toggleClass(this.options.classAlias, false);\r\n\t\t}\r\n\t\tif (emit !== false) {\r\n\t\t\tthis.instance.emit('autoplay:pause');\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Method called when the instance is initialized.\r\n\t */\r\n\tprotected onInit(): void {\r\n\t\tthis.instance.on('slide:after', this.handleSlideChange);\r\n\t\tif (this.options.instant === true) {\r\n\t\t\tthis.play();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Method called when the instance is destroyed.\r\n\t */\r\n\tprotected onDestroy(): void {\r\n\t\tthis.instance.off('slide:after', this.handleSlideChange);\r\n\t\tthis.pause(false);\r\n\t}\r\n\r\n\t/**\r\n\t * Event handler for when autoplay interval is fired.\r\n\t * Activates the control variable and changes the slide.\r\n\t */\r\n\tprivate handleAutoplay = () => {\r\n\t\tthis.cancelAutoplay = false;\r\n\t\tthis.instance.inc(this.options.direction);\r\n\t}\r\n\r\n\t/**\r\n\t * Event handler for when a slide is changed.\r\n\t * If the control variable wasn't set to false, pauses the autoplay.\r\n\t */\r\n\tprivate handleSlideChange = () => {\r\n\t\tif (this.cancelAutoplay && this.options.cancelOnSlide !== false) {\r\n\t\t\tthis.pause();\r\n\t\t}\r\n\t\tthis.cancelAutoplay = true;\r\n\t}\r\n\r\n}\r\n","export default class Point {\r\n\r\n\t/**\r\n\t * Returns a Point object from an event's coordinates.\r\n\t * @param event The event to extract the coordinates from.\r\n\t * @param touchIndex If the event is a TouchEvent, specify which touch should the method read from.\r\n\t */\r\n\tpublic static getFromEvent(event: MouseEvent | TouchEvent, touchIndex: number = 0): Point {\r\n\t\tconst point = new Point();\r\n\t\tif (event instanceof TouchEvent && event.touches) {\r\n\t\t\tpoint.x = event.touches[touchIndex].pageX;\r\n\t\t\tpoint.y = event.touches[touchIndex].pageY;\r\n\t\t}\r\n\t\telse if (event instanceof MouseEvent) {\r\n\t\t\tpoint.x = event.pageX;\r\n\t\t\tpoint.y = event.pageY;\r\n\t\t}\r\n\t\treturn point;\r\n\t}\r\n\r\n\t/**\r\n\t * Horizontal coordinate.\r\n\t */\r\n\tpublic x: number;\r\n\r\n\t/**\r\n\t * Vertical coordinate.\r\n\t */\r\n\tpublic y: number;\r\n\r\n\t/**\r\n\t * Creates a new 2D point.\r\n\t * @param x Horizontal coordinate.\r\n\t * @param y Vertical coordinate.\r\n\t */\r\n\tconstructor(x: number = 0, y: number = 0) {\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new instance of the point with the same coordinates.\r\n\t */\r\n\tpublic clone(): Point {\r\n\t\treturn new Point(this.x, this.y);\r\n\t}\r\n\r\n\t/**\r\n\t * Modifies the Point instance by adding coordinates from another `point`.\r\n\t * @param point The point to add.\r\n\t */\r\n\tpublic add(point: Point): Point {\r\n\t\tthis.x += point.x;\r\n\t\tthis.y += point.y;\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Modifies the Point instance by subtracting coordinates from another `point`.\r\n\t * @param point The point to subtract.\r\n\t */\r\n\tpublic sub(point: Point): Point {\r\n\t\tthis.x -= point.x;\r\n\t\tthis.y -= point.y;\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Modifies the Point instance by multiplying coordinates from another `point`.\r\n\t * @param point The point to multiply.\r\n\t */\r\n\tpublic multiply(point: Point): Point {\r\n\t\tthis.x *= point.x;\r\n\t\tthis.y *= point.y;\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Modifies the Point instance by dividing coordinates from another `point`.\r\n\t * @param point The point to divide.\r\n\t */\r\n\tpublic divide(point: Point): Point {\r\n\t\tthis.x /= point.x;\r\n\t\tthis.y /= point.y;\r\n\t\treturn this;\r\n\t}\r\n\r\n}\r\n","import ViewMatrixPlugin from '../core/viewmatrixplugin';\r\nimport { inElementBounds } from '../utils/html';\r\nimport Point from '../utils/point';\r\n\r\n/**\r\n * Options that the ViewMatrix Touch plugin supports.\r\n */\r\nexport interface IViewMatrixTouchSwipeOptions {\r\n\t/**\r\n\t * Together with the instance's `classPrefix` option, defines the class to toggle when the element is being touched. Default is `touching`.\r\n\t */\r\n\tclassAlias: string;\r\n\t/**\r\n\t * Tells the plugin it should call preventDefault() when a touch is started. Default is `false`.\r\n\t */\r\n\tpreventDefault: boolean;\r\n\t/**\r\n\t * Amount of pixels the delta must be until a swipe is registered. Default is `30`.\r\n\t */\r\n\ttolerance: number;\r\n\t/**\r\n\t * If true, the plugin will handle vertical deltas instead of horizontal. Default is `false`.\r\n\t */\r\n\tvertical: boolean;\r\n}\r\n\r\nexport default class ViewMatrixTouchSwipe extends ViewMatrixPlugin<IViewMatrixTouchSwipeOptions> {\r\n\r\n\t/**\r\n\t * The ViewMatrixAutoplay instance's default values.\r\n\t */\r\n\tprotected readonly defaults = {\r\n\t\tclassAlias: 'touching',\r\n\t\tpreventDefault: false,\r\n\t\ttolerance: 30,\r\n\t\tvertical: false\r\n\t};\r\n\r\n\t/**\r\n\t * Point with starting touch coordinates.\r\n\t */\r\n\tprivate touchStart?: Point = undefined;\r\n\r\n\t/**\r\n\t * Point with last touch coordinates.\r\n\t */\r\n\tprivate touchLast?: Point = undefined;\r\n\r\n\t/**\r\n\t * Point with difference between start and last touch coordinates.\r\n\t */\r\n\tprivate touchDelta?: Point = undefined;\r\n\r\n\t/**\r\n\t * Current touch target.\r\n\t */\r\n\tprivate target?: HTMLElement = undefined;\r\n\r\n\t/**\r\n\t * Method called when the instance is initialized.\r\n\t */\r\n\tprotected onInit(): void {\r\n\t\tthis.cancelTouch(false);\r\n\r\n\t\t// add touch events\r\n\t\tdocument.addEventListener('touchstart', this.handleTouchStart, { passive: false });\r\n\t\tdocument.addEventListener('touchmove', this.handleTouchMove, { passive: false });\r\n\t\tdocument.addEventListener('touchend', this.handleTouchEnd, { passive: false });\r\n\r\n\t\t// add mouse events\r\n\t\tdocument.addEventListener('mousedown', this.handleTouchStart, { passive: false });\r\n\t\tdocument.addEventListener('mousemove', this.handleTouchMove, { passive: false });\r\n\t\tdocument.addEventListener('mouseup', this.handleTouchEnd, { passive: false });\r\n\t}\r\n\r\n\t/**\r\n\t * Method called when the instance is destroyed.\r\n\t */\r\n\tprotected onDestroy(): void {\r\n\t\tthis.cancelTouch(false);\r\n\r\n\t\t// cancel touch events\r\n\t\tdocument.removeEventListener('touchstart', this.handleTouchStart);\r\n\t\tdocument.removeEventListener('touchmove', this.handleTouchMove);\r\n\t\tdocument.removeEventListener('touchend', this.handleTouchEnd);\r\n\r\n\t\t// cancel mouse events\r\n\t\tdocument.removeEventListener('mousedown', this.handleTouchStart);\r\n\t\tdocument.removeEventListener('mousemove', this.handleTouchMove);\r\n\t\tdocument.removeEventListener('mouseup', this.handleTouchEnd);\r\n\t}\r\n\r\n\t/**\r\n\t * Callback that is passed to touchmove events, so that touch can be cancelled on the other side.\r\n\t * @param emit Tells the method it should fire an event or not. Default is `true`.\r\n\t */\r\n\tprivate cancelTouch = (emit?: boolean) => {\r\n\t\tif (this.options.classAlias) {\r\n\t\t\tthis.instance.toggleClass(this.options.classAlias, false);\r\n\t\t}\r\n\t\tif (emit !== false) {\r\n\t\t\tthis.instance.emit('touch:cancel', this.target, this.touchLast);\r\n\t\t}\r\n\t\tthis.touchStart = undefined;\r\n\t\tthis.touchLast = undefined;\r\n\t\tthis.target = undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Handles touchStart or mouseDown events.\r\n\t * @param event The event to extract the coordinates from.\r\n\t */\r\n\tprivate handleTouchStart = (event: MouseEvent | TouchEvent) => {\r\n\t\tconst coords = Point.getFromEvent(event);\r\n\t\tif (!this.touchStart && inElementBounds(this.instance.element, coords)) {\r\n\t\t\tthis.touchStart = coords;\r\n\t\t\tthis.touchLast = coords;\r\n\t\t\tthis.target = this.instance.element;\r\n\t\t\tif (this.options.preventDefault) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t}\r\n\t\t\tif (this.options.classAlias) {\r\n\t\t\t\tthis.instance.toggleClass(this.options.classAlias, true);\r\n\t\t\t}\r\n\t\t\tthis.instance.emit('touch:start', this.target, coords);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Handles touchMove or mouseMove events.\r\n\t * @param event The event to extract the coordinates from.\r\n\t */\r\n\tprivate handleTouchMove = (event: MouseEvent | TouchEvent) => {\r\n\t\tif (!this.touchStart) { return; }\r\n\t\tthis.touchLast = Point.getFromEvent(event);\r\n\t\tthis.touchDelta = this.touchStart.clone().sub(this.touchLast);\r\n\t\tthis.instance.emit('touch:move', this.target, this.touchDelta, this.cancelTouch);\r\n\r\n\t\tconst xAbs = Math.abs(this.touchDelta.x);\r\n\t\tconst yAbs = Math.abs(this.touchDelta.y);\r\n\t\tlet delta = 0;\r\n\r\n\t\tif (xAbs > yAbs && !this.options.vertical) {\r\n\t\t\t// swiped horizontally\r\n\t\t\tdelta = this.touchDelta.x;\r\n\t\t}\r\n\t\telse if (xAbs < yAbs && this.options.vertical) {\r\n\t\t\t// swiped vertically\r\n\t\t\tdelta = this.touchDelta.y;\r\n\t\t}\r\n\r\n\t\tif (delta > this.options.tolerance) {\r\n\t\t\tthis.instance.emit('swipe:next', this.target, this.touchDelta);\r\n\t\t\tthis.instance.inc(+1);\r\n\t\t\tthis.cancelTouch(false);\r\n\t\t}\r\n\t\telse if (delta < -this.options.tolerance) {\r\n\t\t\tthis.instance.emit('swipe:prev', this.target, this.touchDelta);\r\n\t\t\tthis.instance.inc(-1);\r\n\t\t\tthis.cancelTouch(false);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Handles touchEnd or mouseUp events.\r\n\t * @param event The event to extract the coordinates from.\r\n\t */\r\n\tprivate handleTouchEnd = (event: MouseEvent | TouchEvent) => {\r\n\t\tif (!this.touchStart) { return; }\r\n\t\tthis.instance.emit('touch:end', this.target, this.touchLast);\r\n\t\tthis.cancelTouch(false);\r\n\t}\r\n\r\n}\r\n","import ViewMatrix from './core/viewmatrix';\r\nimport ViewMatrixAutoplay from './plugins/autoplay';\r\nimport ViewMatrixTouchSwipe from './plugins/touchswipe';\r\n\r\n(window as any).ViewMatrix = ViewMatrix;\r\n(window as any).ViewMatrixAutoplay = ViewMatrixAutoplay;\r\n(window as any).ViewMatrixTouchSwipe = ViewMatrixTouchSwipe;\r\n"],"sourceRoot":""}