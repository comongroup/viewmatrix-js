{"version":3,"sources":["webpack://ViewMatrix/webpack/bootstrap","webpack://ViewMatrix/./src/utils/objects.ts","webpack://ViewMatrix/./src/plugins/autoplay.ts","webpack://ViewMatrix/./src/core/viewmatrixplugin.ts","webpack://ViewMatrix/./src/plugins/touchswipe.ts","webpack://ViewMatrix/./src/utils/html.ts","webpack://ViewMatrix/./index.ts","webpack://ViewMatrix/./src/core/viewmatrix.ts","webpack://ViewMatrix/./src/utils/string.ts","webpack://ViewMatrix/./src/utils/point.ts","webpack://ViewMatrix/./src/utils/emitter.ts","webpack://ViewMatrix/./src/utils/math.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","merge","target","sources","_i","arguments","length","TypeError","to","index","nextSource","nextKey","viewmatrixplugin_1","objects_1","AutoplayPlugin","_super","options","_this","this","defaults","cancelOnSlide","classAlias","direction","instant","interval","cancelAutoplay","intervalId","handleAutoplay","instance","inc","handleSlideChange","pause","__extends","onInit","on","play","onDestroy","off","emit","window","setInterval","toggleClass","clearInterval","default","ViewMatrixPlugin","html_1","point_1","TouchSwipePlugin","eventTarget","document","preventDefault","tolerance","vertical","undefined","touchStart","touchLast","touchDelta","cancelTouch","handleTouchStart","event","coords","getFromEvent","element","inElementBounds","cancelable","handleTouchMove","clone","sub","xAbs","Math","abs","x","yAbs","y","delta","handleTouchEnd","addEventListener","passive","removeEventListener","string_1","addClassToElement","el","str","HTMLElement","classes","sanitize","split","result","className","trim","classes_1","indexOf","getAbsoluteRect","parent","body","parentBounds","getBoundingClientRect","elBounds","bottom","top","height","left","right","width","removeClassFromElement","Array","classes_2","replace","removeAttribute","bounds","setElementStyle","style","getAttribute","RegExp","setAttribute","toggleClassInElement","condition","viewmatrix_1","autoplay_1","touchswipe_1","emitter_1","math_1","ViewMatrix","rootSelector","plugins","children","startingIndex","classAliases","infinite","child","current","behind","ahead","beyond","classPrefix","adjacentCount","handleZIndex","wrap","currentIndex","slice","initialize","destroy","querySelector","Error","wrapIndex","prepareClassNames","_a","initializePlugins","slide","destroyPlugins","childrenCount","max","distanceCount","floor","indexCount","distance","isAhead","isBehind","isBeyond","increment","prefix","aliases","k","clamp","Point","touchIndex","point","TouchEvent","touches","pageX","pageY","MouseEvent","add","multiply","divide","Emitter","callbacks","callback","push","once","apply","splice","args","callbacks_1","listeners","hasListeners","min"],"mappings":";;;;;2BACA,IAAAA,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,GAAA,CACAG,EAAAH,EACAI,GAAA,EACAH,QAAA,IAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QA0DA,OArDAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,GAIAlC,IAAAmC,EAAA,mFC7EAjC,EAAAkC,MAAA,SAAwCC,OAAW,IAAAC,EAAA,GAAAC,EAAA,EAAAA,EAAAC,UAAAC,OAAAF,IAAAD,EAAAC,EAAA,GAAAC,UAAAD,GAClD,GAAc,MAAVF,EACH,MAAM,IAAIK,UAAU,8CAGrB,IADA,IAAMC,EAAK7B,OAAOuB,GACTO,EAAQ,EAAGA,EAAQJ,UAAUC,OAAQG,IAAS,CACtD,IAAMC,EAAaL,UAAUI,GAC7B,GAAkB,MAAdC,EACH,IAAK,IAAMC,KAAWD,EACjB/B,OAAOkB,UAAUC,eAAe1B,KAAKsC,EAAYC,KACpDH,EAAGG,GAAWD,EAAWC,IAK7B,OAAOH,kaCpBR,IAAAI,EAAA/C,EAAA,GACAgD,EAAAhD,EAAA,GA4BAiD,EAAA,SAAAC,GAgCC,SAAAD,EAAmBE,GAAnB,IAAAC,EACCF,EAAA3C,KAAA8C,OAAOA,YA5BQD,EAAAD,QAAkC,GAK/BC,EAAAE,SAAmC,CACrDC,eAAe,EACfC,WAAY,cACZC,UAAW,EACXC,SAAS,EACTC,SAAU,KAMHP,EAAAQ,gBAA0B,EAK1BR,EAAAS,WAAqB,EAkErBT,EAAAU,eAAiB,WACxBV,EAAKQ,gBAAiB,EACtBR,EAAKW,SAASC,IAAIZ,EAAKD,QAAQM,YAOxBL,EAAAa,kBAAoB,WACvBb,EAAKQ,iBAAiD,IAA/BR,EAAKD,QAAQI,eACvCH,EAAKc,QAENd,EAAKQ,gBAAiB,GAvEtBZ,EAAAZ,MAAMgB,EAAKD,QAASC,EAAKE,SAAUH,KA0ErC,OA5G4CgB,EAAAlB,EAAAC,GAwCpCD,EAAAjB,UAAAoC,OAAP,WACCf,KAAKU,SAASM,GAAG,cAAehB,KAAKY,oBACR,IAAzBZ,KAAKF,QAAQO,SAChBL,KAAKiB,QAOArB,EAAAjB,UAAAuC,UAAP,WACClB,KAAKU,SAASS,IAAI,cAAenB,KAAKY,mBACtCZ,KAAKa,OAAM,IAOLjB,EAAAjB,UAAAsC,KAAP,SAAYG,GACXpB,KAAKa,OAAM,GACXb,KAAKQ,WAAaa,OAAOC,YAAYtB,KAAKS,eAAgBT,KAAKF,QAAQQ,UACnEN,KAAKF,QAAQK,YAChBH,KAAKU,SAASa,YAAYvB,KAAKF,QAAQK,YAAY,IAEvC,IAATiB,GACHpB,KAAKU,SAASU,KAAK,mBAQdxB,EAAAjB,UAAAkC,MAAP,SAAaO,GACY,IAApBpB,KAAKQ,aAGTgB,cAAcxB,KAAKQ,YACnBR,KAAKQ,WAAa,EACdR,KAAKF,QAAQK,YAChBH,KAAKU,SAASa,YAAYvB,KAAKF,QAAQK,YAAY,IAEvC,IAATiB,GACHpB,KAAKU,SAASU,KAAK,oBAwBtBxB,EA5GA,CAA4CF,EAAA+B,oGC3B5C,IAAAC,EAAA,WAiBA,OAjBA,2bCFA,IAAAhC,EAAA/C,EAAA,GACAgF,EAAAhF,EAAA,GACAgD,EAAAhD,EAAA,GACAiF,EAAAjF,EAAA,GA4BAkF,EAAA,SAAAhC,GA0CC,SAAAgC,EAAmB/B,GAAnB,IAAAC,EACCF,EAAA3C,KAAA8C,OAAOA,YAtCQD,EAAAD,QAAoC,GAKnCC,EAAAE,SAAqC,CACrDE,WAAY,WACZ2B,YAAaC,SACbC,gBAAgB,EAChBC,UAAW,GACXC,UAAU,GAMHnC,EAAA+B,iBAAmCK,EAKnCpC,EAAAqC,gBAAqBD,EAKrBpC,EAAAsC,eAAoBF,EAKpBpC,EAAAuC,gBAAqBH,EA2DrBpC,EAAAwC,YAAc,SAACnB,GAClBrB,EAAKD,QAAQK,YAChBJ,EAAKW,SAASa,YAAYxB,EAAKD,QAAQK,YAAY,IAEvC,IAATiB,GACHrB,EAAKW,SAASU,KAAK,oBAAqBrB,EAAKsC,WAE9CtC,EAAKqC,gBAAaD,EAClBpC,EAAKsC,eAAYF,GAOVpC,EAAAyC,iBAAmB,SAACC,GAC3B,IAAMC,EAASd,EAAAH,QAAMkB,aAAaF,GAC5BzD,EAASe,EAAK+B,cAAgBC,SACjChC,EAAK+B,YACL/B,EAAKW,SAASkC,SACZ7C,EAAKqC,YAAcT,EAAAkB,gBAAgB7D,EAAQ0D,KAC/C3C,EAAKqC,WAAaM,EAClB3C,EAAKsC,UAAYK,EACb3C,EAAKD,QAAQkC,gBAAkBS,EAAMK,YACxCL,EAAMT,iBAEHjC,EAAKD,QAAQK,YAChBJ,EAAKW,SAASa,YAAYxB,EAAKD,QAAQK,YAAY,GAEpDJ,EAAKW,SAASU,KAAK,mBAAoBsB,KAQjC3C,EAAAgD,gBAAkB,SAACN,GAC1B,GAAK1C,EAAKqC,WAAV,CACArC,EAAKsC,UAAYT,EAAAH,QAAMkB,aAAaF,GACpC1C,EAAKuC,WAAavC,EAAKqC,WAAWY,QAAQC,IAAIlD,EAAKsC,WACnDtC,EAAKW,SAASU,KAAK,kBAAmBrB,EAAKuC,WAAYvC,EAAKwC,aAE5D,IAAMW,EAAOC,KAAKC,IAAIrD,EAAKuC,WAAWe,GAChCC,EAAOH,KAAKC,IAAIrD,EAAKuC,WAAWiB,GAClCC,EAAQ,EAERN,EAAOI,IAASvD,EAAKD,QAAQoC,SAEhCsB,EAAQzD,EAAKuC,WAAWe,EAEhBH,EAAOI,GAAQvD,EAAKD,QAAQoC,WAEpCsB,EAAQzD,EAAKuC,WAAWiB,GAGrBC,EAAQzD,EAAKD,QAAQmC,WACxBlC,EAAKW,SAASU,KAAK,kBAAmBrB,EAAKuC,YAC3CvC,EAAKW,SAASC,IAAI,GAClBZ,EAAKwC,aAAY,IAETiB,GAASzD,EAAKD,QAAQmC,YAC9BlC,EAAKW,SAASU,KAAK,kBAAmBrB,EAAKuC,YAC3CvC,EAAKW,SAASC,KAAK,GACnBZ,EAAKwC,aAAY,MAQXxC,EAAA0D,eAAiB,SAAChB,GACpB1C,EAAKqC,aACVrC,EAAKW,SAASU,KAAK,iBAAkBrB,EAAKsC,WAC1CtC,EAAKwC,aAAY,KA9HjB5C,EAAAZ,MAAMgB,EAAKD,QAASC,EAAKE,SAAUH,KAiIrC,OA7K8CgB,EAAAe,EAAAhC,GAkDtCgC,EAAAlD,UAAAoC,OAAP,WACCf,KAAKuC,aAAY,GAGjBvC,KAAK8B,YAAc9B,KAAKF,QAAQgC,YAE5B9B,KAAK8B,cAER9B,KAAK8B,YAAY4B,iBAAiB,aAAc1D,KAAKwC,iBAAkB,CAAEmB,SAAS,IAClF3D,KAAK8B,YAAY4B,iBAAiB,YAAa1D,KAAK+C,gBAAiB,CAAEY,SAAS,IAChF3D,KAAK8B,YAAY4B,iBAAiB,WAAY1D,KAAKyD,eAAgB,CAAEE,SAAS,IAG9E3D,KAAK8B,YAAY4B,iBAAiB,YAAa1D,KAAKwC,iBAAkB,CAAEmB,SAAS,IACjF3D,KAAK8B,YAAY4B,iBAAiB,YAAa1D,KAAK+C,gBAAiB,CAAEY,SAAS,IAChF3D,KAAK8B,YAAY4B,iBAAiB,UAAW1D,KAAKyD,eAAgB,CAAEE,SAAS,MAOxE9B,EAAAlD,UAAAuC,UAAP,WACClB,KAAKuC,aAAY,GAEbvC,KAAK8B,cAER9B,KAAK8B,YAAY8B,oBAAoB,aAAc5D,KAAKwC,kBACxDxC,KAAK8B,YAAY8B,oBAAoB,YAAa5D,KAAK+C,iBACvD/C,KAAK8B,YAAY8B,oBAAoB,WAAY5D,KAAKyD,gBAGtDzD,KAAK8B,YAAY8B,oBAAoB,YAAa5D,KAAKwC,kBACvDxC,KAAK8B,YAAY8B,oBAAoB,YAAa5D,KAAK+C,iBACvD/C,KAAK8B,YAAY8B,oBAAoB,UAAW5D,KAAKyD,gBAGrDzD,KAAK8B,iBAAcK,IAsFtBN,EA7KA,CAA8CnC,EAAA+B,oGC9B9C,IAAAoC,EAAAlH,EAAA,GAOA,SAAgBmH,EAAkBC,EAAiBC,GAClD,GAAMD,aAAcE,YAApB,CAGA,IAFA,IAAMC,EAAUL,EAAAM,SAASH,GAAKI,MAAM,KAChCC,EAASN,EAAGO,UAAUC,OACVrF,EAAA,EAAAsF,EAAAN,EAAAhF,EAAAsF,EAAApF,OAAAF,IAAS,CAApB,IAAM9B,EAACoH,EAAAtF,IACgB,IAAvBmF,EAAOI,QAAQrH,KAClBiH,EAASA,EAAS,IAAMjH,GAG1B2G,EAAGO,UAAYT,EAAAM,SAASE,IASzB,SAAgBK,EAAgBX,EAAiBY,QAAA,IAAAA,MAAsB5C,SAAS6C,MAC/E,IAAMC,EAAeF,EAAOG,wBACtBC,EAAWhB,EAAGe,wBACpB,MAAO,CACNE,OAAQD,EAASC,OAASH,EAAaI,IACvCC,OAAQH,EAASG,OACjBC,KAAMJ,EAASI,KAAON,EAAaM,KACnCC,MAAOL,EAASK,MAAQP,EAAaM,KACrCF,IAAKF,EAASE,IAAMJ,EAAaI,IACjCI,MAAON,EAASM,OAqBlB,SAAgBC,EAAuBvB,EAAiBC,GACvD,GAAMD,aAAcE,YAApB,CAKA,IAJA,IAAMC,EAAYF,aAAeuB,MAE9BvB,EADAH,EAAAM,SAASH,GAAKI,MAAM,KAEnBC,EAASN,EAAGO,UAAUC,OACVrF,EAAA,EAAAsG,EAAAtB,EAAAhF,EAAAsG,EAAApG,OAAAF,IAAS,CAApB,IAAM9B,EAACoI,EAAAtG,IACgB,IAAvBmF,EAAOI,QAAQrH,KAClBiH,EAASA,EAAOoB,QAAQrI,EAAG,KAG7B2G,EAAGO,UAAYT,EAAAM,SAASE,GACI,IAAxBN,EAAGO,UAAUlF,QAChB2E,EAAG2B,gBAAgB,UA7DrB7I,EAAAiH,oBAkBAjH,EAAA6H,kBAkBA7H,EAAAgG,gBAAA,SAAgC7D,EAAqB0D,GACpD,IAAMiD,EAASjB,EAAgB1F,GAC/B,OAAOA,GACN0D,EAAOW,GAAKsC,EAAOR,MAAQzC,EAAOW,GAAKsC,EAAOP,OAC9C1C,EAAOa,GAAKoC,EAAOV,KAAOvC,EAAOa,GAAKoC,EAAOX,QAQ/CnI,EAAAyI,yBAwBAzI,EAAA+I,gBAAA,SAAgC7B,EAAiBzG,EAAcU,GAC9D,IAAI6H,EAAQhC,EAAAM,SAASJ,EAAG+B,aAAa,UAAY,IAajD,OAZa,MAAT9H,IAAgD,IAA/B6H,EAAMpB,QAAQnH,EAAO,OACzCuI,EAAQA,EAAMJ,QAAQ,IAAIM,OAAOzI,EAAO,UAAW,KAAM,KAE7C,MAATU,IACH6H,GAASvI,EAAO,IAAMU,EAAQ,KAE3B6H,EAAMzG,OAAS,EAClB2E,EAAGiC,aAAa,QAASnC,EAAAM,SAAS0B,IAGlC9B,EAAG2B,gBAAgB,SAEbG,GAWRhJ,EAAAoJ,qBAAA,SAAqClC,EAAiBC,EAAakC,GAOlE,OANIA,EACHpC,EAAkBC,EAAIC,GAGtBsB,EAAuBvB,EAAIC,GAErBkC,kFChHR,IAAAC,EAAAxJ,EAAA,GACAyJ,EAAAzJ,EAAA,GACA0J,EAAA1J,EAAA,GAECwJ,EAAA1E,QAAmB7B,eAAiBwG,EAAA3E,QACpC0E,EAAA1E,QAAmBI,iBAAmBwE,EAAA5E,QAEvC5E,EAAA4E,QAAe0E,EAAA1E,uaCPf,IAAA2E,EAAAzJ,EAAA,GACA0J,EAAA1J,EAAA,GACA2J,EAAA3J,EAAA,GACAgF,EAAAhF,EAAA,GACA4J,EAAA5J,EAAA,IACAgD,EAAAhD,EAAA,GAWA6J,EAAA,SAAA3G,GAgDC,SAAA2G,EACCC,EACA3G,EACA4G,GAHD,IAAA3G,EAKCF,EAAA3C,KAAA8C,OAAOA,YA5CAD,EAAA4G,SAA0B,KAG1B5G,EAAA2G,QAA8B,GAGrB3G,EAAAE,SAA+B,CAE/C2G,cAAe,EAEfC,aAAc,CACbjE,QAAS,UACTkE,SAAU,WACVC,MAAO,QACPC,QAAS,UACTC,OAAQ,SACRC,MAAO,QACPC,OAAQ,UAETC,YAAa,MAEbC,cAAe,EACfC,cAAc,EACdR,UAAU,EACVS,MAAM,GAICxH,EAAA8G,aAAyC,GAGzC9G,EAAAyH,aAAuB,EAgB9BzH,EAAKD,QAAUH,EAAAZ,MAAM,GAAIgB,EAAKE,SAAUH,GAGpC4G,IACCA,aAAmBnB,MACtBxF,EAAK2G,QAAUnB,MAAM5G,UAAU8I,MAAMvK,KAAKwJ,EAAS,GAExB,mBAAZA,IACf3G,EAAK2G,QAAUA,EAAQ,CACtB9G,eAAcwG,EAAA3E,QACdI,iBAAgBwE,EAAA5E,YAMnB1B,EAAK2H,WAAWjB,KA6OlB,OArTwC3F,EAAA0F,EAAA3G,GA+EhC2G,EAAA7H,UAAA+I,WAAP,SAAkBjB,GAkBjB,GAhBAzG,KAAK2H,UAOuB,iBAJ5BlB,EAA+B,MAAhBA,EAAuBA,EAAe,MAKpDzG,KAAK4C,QAAUb,SAAS6F,cAAcnB,IAAiB,KAE/CA,aAAwBxC,cAChCjE,KAAK4C,QAAU6D,IAKXzG,KAAK4C,QACT,MAAM,IAAIiF,MAAM,gEAIjB7H,KAAK2G,SAAW,GAAGc,MAAMvK,KAAK8C,KAAK4C,QAAQ+D,UAC3C3G,KAAKwH,aAAexH,KAAK8H,UAAU9H,KAAKwH,cAGxCxH,KAAK+H,kBAAkB/H,KAAKF,QAAQsH,YAAapH,KAAKF,QAAQ+G,cAC9D,IAAoB,IAAA3H,EAAA,EAAA8I,EAAAhI,KAAK2G,SAALzH,EAAA8I,EAAA5I,OAAAF,IAAe,CAA9B,IAAM6H,EAAKiB,EAAA9I,GACfyC,EAAAmC,kBAAkBiD,EAAO/G,KAAK6G,aAAaE,OAI5CpF,EAAAmC,kBAAkB9D,KAAK4C,QAAS5C,KAAK6G,aAAajE,SAClDjB,EAAAsE,qBAAqBjG,KAAK4C,QAAS5C,KAAK6G,aAAaC,SAAU9G,KAAKF,QAAQgH,UAG5E9G,KAAKiI,oBAGLjI,KAAKkI,MAAMlI,KAAKwH,cAGhBxH,KAAKoB,KAAK,OAAQpB,KAAK4C,QAAS5C,KAAK2G,WAM/BH,EAAA7H,UAAAgJ,QAAP,WAaC,GAXA3H,KAAKmI,iBAGDnI,KAAK4C,SACRjB,EAAA2D,uBAAuBtF,KAAK4C,QAAS,CACpC5C,KAAK6G,aAAajE,QAClB5C,KAAK6G,aAAaC,WAKhB9G,KAAK2G,UAAY3G,KAAK2G,SAASvH,OAAS,EAC3C,IAAoB,IAAAF,EAAA,EAAA8I,EAAAhI,KAAK2G,SAALzH,EAAA8I,EAAA5I,OAAAF,IAAe,CAA9B,IAAM6H,EAAKiB,EAAA9I,GACfyC,EAAA2D,uBAAuByB,EAAO,CAC7B/G,KAAK6G,aAAaE,MAClB/G,KAAK6G,aAAaG,QAClBhH,KAAK6G,aAAaM,OAClBnH,KAAK6G,aAAaI,OAClBjH,KAAK6G,aAAaK,QAEnBvF,EAAAiE,gBAAgBmB,EAAO,UAAW,MAKpC/G,KAAKoB,KAAK,UAAWpB,KAAK4C,QAAS5C,KAAK2G,UAGxC3G,KAAK4C,QAAU,KACf5C,KAAK2G,SAAW,MAOVH,EAAA7H,UAAAuJ,MAAP,SAAa3I,GACZ,IAAKS,KAAK2G,UAAqC,IAAzB3G,KAAK2G,SAASvH,OAAgB,OAAO,KAG3DG,EAAQS,KAAK8H,UAAUvI,GAGvB,IAAM6I,EAAgBpI,KAAK2G,SAASvH,OAC9BiI,EAAgBlE,KAAKkF,IAAI,EAAGrI,KAAKF,QAAQuH,eACzCiB,EAAgBnF,KAAKoF,OAAOH,EAAgB,GAAK,GACjDI,EAAaF,GAAiBF,EAAgB,GAAM,EAAI,EAAI,GAGlEpI,KAAKoB,KAAK,eAAgBpB,KAAKwH,aAAcjI,EAAO6I,GAGpD,IAAK,IAAIrL,EAAI,EAAGA,EAAIqL,EAAerL,IAAK,CACvC,IAAMgK,EAAQ/G,KAAK2G,SAAS5J,GACxB0L,EAAW1L,EAAIwC,EAanB,GAXIS,KAAKF,QAAQgH,WAGZ2B,EAAWH,EACdG,GAAYL,EAEJK,GAAYH,IACpBG,GAAYL,IAIVrL,IAAMwC,EAGToC,EAAA2D,uBAAuByB,EAAO,CAC7B/G,KAAK6G,aAAaK,MAClBlH,KAAK6G,aAAaI,OAClBjH,KAAK6G,aAAaM,SAEnBxF,EAAAmC,kBAAkBiD,EAAO/G,KAAK6G,aAAaG,aAEvC,CAGJ,IAAM0B,EAAUD,EAAW,EACrBE,EAAWF,EAAW,EAGtBG,EAAWzF,KAAKC,IAAIqF,GAAYpB,EAGtC1F,EAAA2D,uBAAuByB,EAAO/G,KAAK6G,aAAaG,SAChDrF,EAAAsE,qBAAqBc,EAAO/G,KAAK6G,aAAaM,OAAQyB,GACtDjH,EAAAsE,qBAAqBc,EAAO/G,KAAK6G,aAAaI,OAAQ0B,GACtDhH,EAAAsE,qBAAqBc,EAAO/G,KAAK6G,aAAaK,MAAOwB,GAIlD1I,KAAKF,QAAQwH,cAChB3F,EAAAiE,gBAAgBmB,EAAO,UAAWyB,EAAarF,KAAKC,IAAIqF,IAW1D,OANAzI,KAAKoB,KAAK,cAAepB,KAAKwH,aAAcjI,EAAO6I,GAGnDpI,KAAKwH,aAAejI,EAGbS,KAAK2G,SAASpH,IAOfiH,EAAA7H,UAAAgC,IAAP,SAAWkI,GACV,OAAO7I,KAAKkI,MAAMlI,KAAKwH,aAAeqB,IAQhCrC,EAAA7H,UAAA4C,YAAP,SAAmBjE,EAAc4I,GAC5BlG,KAAK4C,SACRjB,EAAAsE,qBAAqBjG,KAAK4C,QAAS5C,KAAKF,QAAQsH,YAAc9J,EAAM4I,IAS9DM,EAAA7H,UAAAoJ,kBAAR,SAA0Be,EAA2CC,GACpE,IAAK,IAAMC,UADc,IAAAF,MAAiB9I,KAAKF,QAAQsH,kBAAa,IAAA2B,MAAmC/I,KAAKF,QAAQ+G,cACpGkC,EACXtL,OAAOkB,UAAUC,eAAe1B,KAAK6L,EAASC,KACjDhJ,KAAK6G,aAAamC,GAAKF,EAASC,EAAQC,KASnCxC,EAAA7H,UAAAmJ,UAAR,SAAkBvI,GACjB,OAAOS,KAAKF,QAAQyH,KACjBhB,EAAAgB,KAAKhI,EAAO,EAAGS,KAAK2G,SAASvH,QAC7BmH,EAAA0C,MAAM1J,EAAO,EAAGS,KAAK2G,SAASvH,SAM1BoH,EAAA7H,UAAAsJ,kBAAR,WACC,IAAgB,IAAA/I,EAAA,EAAA8I,EAAAhI,KAAK0G,QAALxH,EAAA8I,EAAA5I,OAAAF,IAAc,CAAzB,IAAML,EAACmJ,EAAA9I,GACPL,IACHA,EAAE6B,SAAWV,KACW,mBAAbnB,EAAEkC,QACZlC,EAAEkC,YASEyF,EAAA7H,UAAAwJ,eAAR,WACC,IAAgB,IAAAjJ,EAAA,EAAA8I,EAAAhI,KAAK0G,QAALxH,EAAA8I,EAAA5I,OAAAF,IAAc,CAAzB,IAAML,EAACmJ,EAAA9I,GACPL,GAAKA,EAAE6B,WACiB,mBAAhB7B,EAAEqC,WACZrC,EAAEqC,YAEHrC,EAAE6B,SAAW,QAKjB8F,EArTA,CAAwCF,EAAA7E,oGCZxC5E,EAAAsH,SAAA,SAAyBH,GACxB,OAAQ,GAAKA,GAAKO,OAAOkB,QAAQ,SAAU,qFCL5C,IAAAyD,EAAA,WAmCC,SAAAA,EAAY7F,EAAeE,QAAf,IAAAF,MAAA,QAAe,IAAAE,MAAA,GAC1BvD,KAAKqD,EAAIA,EACTrD,KAAKuD,EAAIA,EAkDX,OAhFe2F,EAAAvG,aAAd,SAA2BF,EAAgC0G,QAAA,IAAAA,MAAA,GAC1D,IAAMC,EAAQ,IAAIF,EASlB,OARIzG,aAAiB4G,YAAc5G,EAAM6G,SACxCF,EAAM/F,EAAIZ,EAAM6G,QAAQH,GAAYI,MACpCH,EAAM7F,EAAId,EAAM6G,QAAQH,GAAYK,OAE5B/G,aAAiBgH,aACzBL,EAAM/F,EAAIZ,EAAM8G,MAChBH,EAAM7F,EAAId,EAAM+G,OAEVJ,GA0BDF,EAAAvK,UAAAqE,MAAP,WACC,OAAO,IAAIkG,EAAMlJ,KAAKqD,EAAGrD,KAAKuD,IAOxB2F,EAAAvK,UAAA+K,IAAP,SAAWN,GAGV,OAFApJ,KAAKqD,GAAK+F,EAAM/F,EAChBrD,KAAKuD,GAAK6F,EAAM7F,EACTvD,MAODkJ,EAAAvK,UAAAsE,IAAP,SAAWmG,GAGV,OAFApJ,KAAKqD,GAAK+F,EAAM/F,EAChBrD,KAAKuD,GAAK6F,EAAM7F,EACTvD,MAODkJ,EAAAvK,UAAAgL,SAAP,SAAgBP,GAGf,OAFApJ,KAAKqD,GAAK+F,EAAM/F,EAChBrD,KAAKuD,GAAK6F,EAAM7F,EACTvD,MAODkJ,EAAAvK,UAAAiL,OAAP,SAAcR,GAGb,OAFApJ,KAAKqD,GAAK+F,EAAM/F,EAChBrD,KAAKuD,GAAK6F,EAAM7F,EACTvD,MAGTkJ,EAvFA,8FCKA,IAAAW,EAAA,oBAAAA,IAKS7J,KAAA8J,UAAiD,GAsG1D,OA/FQD,EAAAlL,UAAAqC,GAAP,SAAUyB,EAAesH,GACxB,GAAwB,mBAAbA,EAA2B,OAAO/J,KAC7C,IAAM1B,EAAM,IAAMmE,EAElB,OADCzC,KAAK8J,UAAUxL,GAAO0B,KAAK8J,UAAUxL,IAAQ,IAAI0L,KAAKD,GAChD/J,MAQD6J,EAAAlL,UAAAsL,KAAP,SAAYxH,EAAesH,GAC1B,GAAwB,mBAAbA,EAA2B,OAAO/J,KAC7C,SAASgB,IACRhB,KAAKmB,IAAIsB,EAAOzB,GAChB+I,EAASG,MAAMlK,KAAMb,WAItB,OAFC6B,EAAW+I,SAAWA,EACvB/J,KAAKgB,GAAGyB,EAAOzB,GACRhB,MAQD6J,EAAAlL,UAAAwC,IAAP,SAAWsB,EAAgBsH,GAE1B,GAAyB,IAArB5K,UAAUC,OAEb,OADAY,KAAK8J,UAAY,GACV9J,KAIR,IAAM1B,EAAM,IAAMmE,EACZqH,EAAY9J,KAAK8J,UAAUxL,GACjC,IAAKwL,EACJ,OAAO9J,KAIR,GAAyB,IAArBb,UAAUC,OAEb,cADOY,KAAK8J,UAAUxL,GACf0B,KAIR,IAAMT,EAAQuK,EAAUrF,QAAQsF,GAWhC,OAVe,IAAXxK,GAAgBuK,EAAUvK,KAAWwK,GACxCD,EAAUK,OAAO5K,EAAO,GAKA,IAArBuK,EAAU1K,eACNY,KAAK8J,UAAUxL,GAGhB0B,MAQD6J,EAAAlL,UAAAyC,KAAP,SAAYqB,OAAe,IAAA2H,EAAA,GAAAlL,EAAA,EAAAA,EAAAC,UAAAC,OAAAF,IAAAkL,EAAAlL,EAAA,GAAAC,UAAAD,GAC1B,IAAI4K,EAAY9J,KAAK8J,UAAU,IAAMrH,GACrC,GAAIqH,GAAaA,EAAU1K,OAAS,EAEnC,IAAgB,IAAA4I,EAAA,EAAAqC,EADhBP,EAAYA,EAAUrC,MAAM,GACZO,EAAAqC,EAAAjL,OAAA4I,IAAW,CAAfqC,EAAArC,GACTkC,MAAMlK,KAAMoK,GAGhB,OAAOpK,MAOD6J,EAAAlL,UAAA2L,UAAP,SAAiB7H,GAChB,OAAOzC,KAAK8J,UAAU,IAAMrH,IAAU,IAOhCoH,EAAAlL,UAAA4L,aAAP,SAAoB9H,GACnB,QAASzC,KAAKsK,UAAU7H,GAAOrD,QAGjCyK,EA3GA,8FCCAhN,EAAAoM,MAAA,SAAsBjL,EAAewM,EAAiBnC,GACrD,YADoC,IAAAmC,MAAA,QAAiB,IAAAnC,MAAA,GAC9ClF,KAAKkF,IAAImC,EAAKrH,KAAKqH,IAAInC,EAAKrK,KASpCnB,EAAA0K,KAAA,SAAqBvJ,EAAmBwM,EAAiBnC,QAApC,IAAArK,MAAA,QAAmB,IAAAwM,MAAA,QAAiB,IAAAnC,MAAA,GAKxD,IACMlL,GAJNkL,EAAMlF,KAAKkF,IAAImC,EAAKnC,IAIJmC,EAChB,OAAOA,IAFGxM,EAAQwM,GAEArN,EAAIA,GAAKA","file":"./viewmatrix.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","/**\r\n * Merges one or more objects into `target`.\r\n * @param target The object to merge to.\r\n * @param sources One or more sources to merge onto `target`.\r\n */\r\nexport function merge<T extends object>(target: T, ...sources: T[]): T {\r\n\tif (target == null) {\r\n\t\tthrow new TypeError('Cannot convert undefined or null to object');\r\n\t}\r\n\tconst to = Object(target);\r\n\tfor (let index = 1; index < arguments.length; index++) {\r\n\t\tconst nextSource = arguments[index];\r\n\t\tif (nextSource != null) {\r\n\t\t\tfor (const nextKey in nextSource) {\r\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\r\n\t\t\t\t\tto[nextKey] = nextSource[nextKey];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn to;\r\n}\r\n","import ViewMatrixPlugin from '../core/viewmatrixplugin';\r\nimport { merge } from '../utils/objects';\r\n\r\n/**\r\n * Options that the ViewMatrix Autoplay plugin supports.\r\n */\r\nexport interface IAutoplayPluginOptions {\r\n\t/**\r\n\t * Tells the module it should cancel the autoplay when a slide is manually changed. Default is `true`.\r\n\t */\r\n\tcancelOnSlide?: boolean;\r\n\t/**\r\n\t * Together with the instance's `classPrefix` option, defines the class to toggle when autoplaying is enabled. Default is `autoplaying`.\r\n\t */\r\n\tclassAlias?: string;\r\n\t/**\r\n\t * Direction increment of the navigation. Default is `+1` = `next`.\r\n\t */\r\n\tdirection?: number;\r\n\t/**\r\n\t * Tells the module it should start autoplaying immediately. Default is `true`.\r\n\t */\r\n\tinstant?: boolean;\r\n\t/**\r\n\t * Milliseconds it takes to navigate. Default is `3000`.\r\n\t */\r\n\tinterval?: number;\r\n}\r\n\r\nexport default class AutoplayPlugin extends ViewMatrixPlugin {\r\n\r\n\t/**\r\n\t * The instance's options.\r\n\t */\r\n\tpublic readonly options: IAutoplayPluginOptions = {};\r\n\r\n\t/**\r\n\t * The instance's default values.\r\n\t */\r\n\tprotected readonly defaults: IAutoplayPluginOptions = {\r\n\t\tcancelOnSlide: true,\r\n\t\tclassAlias: 'autoplaying',\r\n\t\tdirection: +1,\r\n\t\tinstant: true,\r\n\t\tinterval: 3000\r\n\t};\r\n\r\n\t/**\r\n\t * Determines if autoplay should be cancelled when handling a slide change.\r\n\t */\r\n\tprivate cancelAutoplay: boolean = false;\r\n\r\n\t/**\r\n\t * ID of the setInterval instance.\r\n\t */\r\n\tprivate intervalId: number = 0;\r\n\r\n\t/**\r\n\t * Initializes a new TouchSwipePlugin instance.\r\n\t * @param options Options for the plugin.\r\n\t */\r\n\tpublic constructor(options?: IAutoplayPluginOptions) {\r\n\t\tsuper();\r\n\t\tmerge(this.options, this.defaults, options);\r\n\t}\r\n\r\n\t/**\r\n\t * Method called when the instance is initialized.\r\n\t */\r\n\tpublic onInit(): void {\r\n\t\tthis.instance.on('slide:after', this.handleSlideChange);\r\n\t\tif (this.options.instant === true) {\r\n\t\t\tthis.play();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Method called when the instance is destroyed.\r\n\t */\r\n\tpublic onDestroy(): void {\r\n\t\tthis.instance.off('slide:after', this.handleSlideChange);\r\n\t\tthis.pause(false);\r\n\t}\r\n\r\n\t/**\r\n\t * Starts the autoplay.\r\n\t * @param emit Tells the method it should fire an event or not. Default is `true`.\r\n\t */\r\n\tpublic play(emit?: boolean): void {\r\n\t\tthis.pause(false);\r\n\t\tthis.intervalId = window.setInterval(this.handleAutoplay, this.options.interval);\r\n\t\tif (this.options.classAlias) {\r\n\t\t\tthis.instance.toggleClass(this.options.classAlias, true);\r\n\t\t}\r\n\t\tif (emit !== false) {\r\n\t\t\tthis.instance.emit('autoplay:start');\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Stops the autoplay.\r\n\t * @param emit Tells the method it should fire an event or not. Default is `true`.\r\n\t */\r\n\tpublic pause(emit?: boolean) {\r\n\t\tif (this.intervalId === 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tclearInterval(this.intervalId);\r\n\t\tthis.intervalId = 0;\r\n\t\tif (this.options.classAlias) {\r\n\t\t\tthis.instance.toggleClass(this.options.classAlias, false);\r\n\t\t}\r\n\t\tif (emit !== false) {\r\n\t\t\tthis.instance.emit('autoplay:pause');\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Event handler for when autoplay interval is fired.\r\n\t * Activates the control variable and changes the slide.\r\n\t */\r\n\tprivate handleAutoplay = () => {\r\n\t\tthis.cancelAutoplay = false;\r\n\t\tthis.instance.inc(this.options.direction);\r\n\t}\r\n\r\n\t/**\r\n\t * Event handler for when a slide is changed.\r\n\t * If the control variable wasn't set to false, pauses the autoplay.\r\n\t */\r\n\tprivate handleSlideChange = () => {\r\n\t\tif (this.cancelAutoplay && this.options.cancelOnSlide !== false) {\r\n\t\t\tthis.pause();\r\n\t\t}\r\n\t\tthis.cancelAutoplay = true;\r\n\t}\r\n\r\n}\r\n","import ViewMatrix from './viewmatrix';\r\n\r\nexport default abstract class ViewMatrixPlugin {\r\n\r\n\t/**\r\n\t * The ViewMatrix instance the plugin belongs to.\r\n\t */\r\n\tpublic instance: ViewMatrix;\r\n\r\n\t/**\r\n\t * Method called when the instance is initialized.\r\n\t */\r\n\tpublic abstract onInit(): void;\r\n\r\n\t/**\r\n\t * Method called when the instance is destroyed.\r\n\t */\r\n\tpublic abstract onDestroy(): void;\r\n\r\n}\r\n","import ViewMatrixPlugin from '../core/viewmatrixplugin';\r\nimport { inElementBounds } from '../utils/html';\r\nimport { merge } from '../utils/objects';\r\nimport Point from '../utils/point';\r\n\r\n/**\r\n * Options that the ViewMatrix Touch plugin supports.\r\n */\r\nexport interface ITouchSwipePluginOptions {\r\n\t/**\r\n\t * Together with the instance's `classPrefix` option, defines the class to toggle when the element is being touched. Default is `touching`.\r\n\t */\r\n\tclassAlias?: string;\r\n\t/**\r\n\t * Tells the plugin what elements it should add touch event listeners to.\r\n\t */\r\n\teventTarget?: Document | Element;\r\n\t/**\r\n\t * Tells the plugin it should call preventDefault() when a touch is started. Default is `false`.\r\n\t */\r\n\tpreventDefault?: boolean;\r\n\t/**\r\n\t * Amount of pixels the delta must be until a swipe is registered. Default is `30`.\r\n\t */\r\n\ttolerance?: number;\r\n\t/**\r\n\t * If true, the plugin will handle vertical deltas instead of horizontal. Default is `false`.\r\n\t */\r\n\tvertical?: boolean;\r\n}\r\n\r\nexport default class TouchSwipePlugin extends ViewMatrixPlugin {\r\n\r\n\t/**\r\n\t * The instance's options.\r\n\t */\r\n\tpublic readonly options: ITouchSwipePluginOptions = {};\r\n\r\n\t/**\r\n\t * The instance's default values.\r\n\t */\r\n\tprivate readonly defaults: ITouchSwipePluginOptions = {\r\n\t\tclassAlias: 'touching',\r\n\t\teventTarget: document,\r\n\t\tpreventDefault: true,\r\n\t\ttolerance: 30,\r\n\t\tvertical: false\r\n\t};\r\n\r\n\t/**\r\n\t * Determines which was the last event target.\r\n\t */\r\n\tprivate eventTarget?: Document | Element = undefined;\r\n\r\n\t/**\r\n\t * Point with starting touch coordinates.\r\n\t */\r\n\tprivate touchStart?: Point = undefined;\r\n\r\n\t/**\r\n\t * Point with last touch coordinates.\r\n\t */\r\n\tprivate touchLast?: Point = undefined;\r\n\r\n\t/**\r\n\t * Point with difference between start and last touch coordinates.\r\n\t */\r\n\tprivate touchDelta?: Point = undefined;\r\n\r\n\t/**\r\n\t * Initializes a new TouchSwipePlugin instance.\r\n\t * @param options Options for the plugin.\r\n\t */\r\n\tpublic constructor(options?: ITouchSwipePluginOptions) {\r\n\t\tsuper();\r\n\t\tmerge(this.options, this.defaults, options);\r\n\t}\r\n\r\n\t/**\r\n\t * Method called when the instance is initialized.\r\n\t */\r\n\tpublic onInit(): void {\r\n\t\tthis.cancelTouch(false);\r\n\r\n\t\t// setup event target for future events\r\n\t\tthis.eventTarget = this.options.eventTarget;\r\n\r\n\t\tif (this.eventTarget) {\r\n\t\t\t// add touch events\r\n\t\t\tthis.eventTarget.addEventListener('touchstart', this.handleTouchStart, { passive: false });\r\n\t\t\tthis.eventTarget.addEventListener('touchmove', this.handleTouchMove, { passive: false });\r\n\t\t\tthis.eventTarget.addEventListener('touchend', this.handleTouchEnd, { passive: false });\r\n\r\n\t\t\t// add mouse events\r\n\t\t\tthis.eventTarget.addEventListener('mousedown', this.handleTouchStart, { passive: false });\r\n\t\t\tthis.eventTarget.addEventListener('mousemove', this.handleTouchMove, { passive: false });\r\n\t\t\tthis.eventTarget.addEventListener('mouseup', this.handleTouchEnd, { passive: false });\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Method called when the instance is destroyed.\r\n\t */\r\n\tpublic onDestroy(): void {\r\n\t\tthis.cancelTouch(false);\r\n\r\n\t\tif (this.eventTarget) {\r\n\t\t\t// cancel touch events\r\n\t\t\tthis.eventTarget.removeEventListener('touchstart', this.handleTouchStart);\r\n\t\t\tthis.eventTarget.removeEventListener('touchmove', this.handleTouchMove);\r\n\t\t\tthis.eventTarget.removeEventListener('touchend', this.handleTouchEnd);\r\n\r\n\t\t\t// cancel mouse events\r\n\t\t\tthis.eventTarget.removeEventListener('mousedown', this.handleTouchStart);\r\n\t\t\tthis.eventTarget.removeEventListener('mousemove', this.handleTouchMove);\r\n\t\t\tthis.eventTarget.removeEventListener('mouseup', this.handleTouchEnd);\r\n\r\n\t\t\t// nullify the event target because we don't need it anymore\r\n\t\t\tthis.eventTarget = undefined;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Callback that is passed to touchmove events, so that touch can be cancelled on the other side.\r\n\t * @param emit Tells the method it should fire an event or not. Default is `true`.\r\n\t */\r\n\tprivate cancelTouch = (emit?: boolean) => {\r\n\t\tif (this.options.classAlias) {\r\n\t\t\tthis.instance.toggleClass(this.options.classAlias, false);\r\n\t\t}\r\n\t\tif (emit !== false) {\r\n\t\t\tthis.instance.emit('touchswipe:cancel', this.touchLast);\r\n\t\t}\r\n\t\tthis.touchStart = undefined;\r\n\t\tthis.touchLast = undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Handles touchStart or mouseDown events.\r\n\t * @param event The event to extract the coordinates from.\r\n\t */\r\n\tprivate handleTouchStart = (event: MouseEvent | TouchEvent) => {\r\n\t\tconst coords = Point.getFromEvent(event);\r\n\t\tconst target = this.eventTarget !== document\r\n\t\t\t? this.eventTarget as HTMLElement\r\n\t\t\t: this.instance.element;\r\n\t\tif (!this.touchStart && inElementBounds(target, coords)) {\r\n\t\t\tthis.touchStart = coords;\r\n\t\t\tthis.touchLast = coords;\r\n\t\t\tif (this.options.preventDefault && event.cancelable) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t}\r\n\t\t\tif (this.options.classAlias) {\r\n\t\t\t\tthis.instance.toggleClass(this.options.classAlias, true);\r\n\t\t\t}\r\n\t\t\tthis.instance.emit('touchswipe:start', coords);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Handles touchMove or mouseMove events.\r\n\t * @param event The event to extract the coordinates from.\r\n\t */\r\n\tprivate handleTouchMove = (event: MouseEvent | TouchEvent) => {\r\n\t\tif (!this.touchStart) { return; }\r\n\t\tthis.touchLast = Point.getFromEvent(event);\r\n\t\tthis.touchDelta = this.touchStart.clone().sub(this.touchLast);\r\n\t\tthis.instance.emit('touchswipe:move', this.touchDelta, this.cancelTouch);\r\n\r\n\t\tconst xAbs = Math.abs(this.touchDelta.x);\r\n\t\tconst yAbs = Math.abs(this.touchDelta.y);\r\n\t\tlet delta = 0;\r\n\r\n\t\tif (xAbs > yAbs && !this.options.vertical) {\r\n\t\t\t// swiped horizontally\r\n\t\t\tdelta = this.touchDelta.x;\r\n\t\t}\r\n\t\telse if (xAbs < yAbs && this.options.vertical) {\r\n\t\t\t// swiped vertically\r\n\t\t\tdelta = this.touchDelta.y;\r\n\t\t}\r\n\r\n\t\tif (delta > this.options.tolerance) {\r\n\t\t\tthis.instance.emit('touchswipe:next', this.touchDelta);\r\n\t\t\tthis.instance.inc(+1);\r\n\t\t\tthis.cancelTouch(false);\r\n\t\t}\r\n\t\telse if (delta < -this.options.tolerance) {\r\n\t\t\tthis.instance.emit('touchswipe:prev', this.touchDelta);\r\n\t\t\tthis.instance.inc(-1);\r\n\t\t\tthis.cancelTouch(false);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Handles touchEnd or mouseUp events.\r\n\t * @param event The event to extract the coordinates from.\r\n\t */\r\n\tprivate handleTouchEnd = (event: MouseEvent | TouchEvent) => {\r\n\t\tif (!this.touchStart) { return; }\r\n\t\tthis.instance.emit('touchswipe:end', this.touchLast);\r\n\t\tthis.cancelTouch(false);\r\n\t}\r\n\r\n}\r\n","import Point from './point';\r\nimport { sanitize } from './string';\r\n\r\n/**\r\n * Adds a class to a given HTML element.\r\n * @param el The element to add the class to.\r\n * @param str The class to add.\r\n */\r\nexport function addClassToElement(el: HTMLElement, str: string): void {\r\n\tif (!(el instanceof HTMLElement)) { return; }\r\n\tconst classes = sanitize(str).split(' ');\r\n\tlet result = el.className.trim();\r\n\tfor (const c of classes) {\r\n\t\tif (result.indexOf(c) === -1) {\r\n\t\t\tresult = result + ' ' + c;\r\n\t\t}\r\n\t}\r\n\tel.className = sanitize(result);\r\n}\r\n\r\n/**\r\n * Returns the bounding rectangle for the target element,\r\n * but adjusted with the scroll values of the parent.\r\n * @param el The element to find bounds for.\r\n * @param parent The parent of the element to check bounds for. Default is \"document.body\".\r\n */\r\nexport function getAbsoluteRect(el: HTMLElement, parent: HTMLElement = document.body) {\r\n\tconst parentBounds = parent.getBoundingClientRect();\r\n\tconst elBounds = el.getBoundingClientRect();\r\n\treturn {\r\n\t\tbottom: elBounds.bottom - parentBounds.top,\r\n\t\theight: elBounds.height,\r\n\t\tleft: elBounds.left - parentBounds.left,\r\n\t\tright: elBounds.right - parentBounds.left,\r\n\t\ttop: elBounds.top - parentBounds.top,\r\n\t\twidth: elBounds.width\r\n\t};\r\n}\r\n\r\n/**\r\n * Checks if the given `coords` are contained within a `target`.\r\n * @param target The target to check.\r\n * @param coords The coordinates to check if they're inside the Target.\r\n */\r\nexport function inElementBounds(target: HTMLElement, coords: Point) {\r\n\tconst bounds = getAbsoluteRect(target);\r\n\treturn target &&\r\n\t\tcoords.x >= bounds.left && coords.x <= bounds.right &&\r\n\t\tcoords.y >= bounds.top && coords.y <= bounds.bottom;\r\n}\r\n\r\n/**\r\n * Removes a class from a given HTML element.\r\n * @param el The element to remove the class from.\r\n * @param str The class to remove.\r\n */\r\nexport function removeClassFromElement(el: HTMLElement, str: string | string[]): void {\r\n\tif (!(el instanceof HTMLElement)) { return; }\r\n\tconst classes = !(str instanceof Array)\r\n\t\t? sanitize(str).split(' ')\r\n\t\t: str;\r\n\tlet result = el.className.trim();\r\n\tfor (const c of classes) {\r\n\t\tif (result.indexOf(c) !== -1) {\r\n\t\t\tresult = result.replace(c, '');\r\n\t\t}\r\n\t}\r\n\tel.className = sanitize(result);\r\n\tif (el.className.length === 0) {\r\n\t\tel.removeAttribute('class');\r\n\t}\r\n}\r\n\r\n/**\r\n * Sets the inline style of an element.\r\n * If \"null\" is provided as the value, the style will be erased.\r\n * @param el The element to style.\r\n * @param name The name of the style to add.\r\n * @param value The value for the style. A value of \"null\" will erase the style.\r\n */\r\nexport function setElementStyle(el: HTMLElement, name: string, value: any): string {\r\n\tlet style = sanitize(el.getAttribute('style') || '');\r\n\tif (value == null || style.indexOf(name + ':') !== -1) {\r\n\t\tstyle = style.replace(new RegExp(name + ':[^;]+;', 'g'), '');\r\n\t}\r\n\tif (value != null) {\r\n\t\tstyle += name + ':' + value + ';';\r\n\t}\r\n\tif (style.length > 0) {\r\n\t\tel.setAttribute('style', sanitize(style));\r\n\t}\r\n\telse {\r\n\t\tel.removeAttribute('style');\r\n\t}\r\n\treturn style;\r\n}\r\n\r\n/**\r\n * Toggles a class in a given HTML element.\r\n * The class will be added if the condition is true.\r\n * It will be removed otherwise.\r\n * @param el The element to toggle the class in.\r\n * @param str The class to toggle.\r\n * @param condition Condition to determine if class is added or removed.\r\n */\r\nexport function toggleClassInElement(el: HTMLElement, str: string, condition: boolean): boolean {\r\n\tif (condition) {\r\n\t\taddClassToElement(el, str);\r\n\t}\r\n\telse {\r\n\t\tremoveClassFromElement(el, str);\r\n\t}\r\n\treturn condition;\r\n}\r\n","import ViewMatrix from './src/core/viewmatrix';\r\nimport AutoplayPlugin from './src/plugins/autoplay';\r\nimport TouchSwipePlugin from './src/plugins/touchswipe';\r\n\r\n(ViewMatrix as any).AutoplayPlugin = AutoplayPlugin;\r\n(ViewMatrix as any).TouchSwipePlugin = TouchSwipePlugin;\r\n\r\nexport default ViewMatrix;\r\n","import AutoplayPlugin from '../plugins/autoplay';\r\nimport TouchSwipePlugin from '../plugins/touchswipe';\r\nimport Emitter from '../utils/emitter';\r\nimport { addClassToElement, removeClassFromElement, setElementStyle, toggleClassInElement } from '../utils/html';\r\nimport { clamp, wrap } from '../utils/math';\r\nimport { merge } from '../utils/objects';\r\nimport IViewMatrixClassAliases from './iviewmatrixclassaliases';\r\nimport IViewMatrixOptions from './iviewmatrixoptions';\r\nimport ViewMatrixPlugin from './viewmatrixplugin';\r\n\r\nexport interface IPluginDictionary {\r\n\t[id: string]: typeof ViewMatrixPlugin;\r\n}\r\n\r\nexport type PluginConstructor = (p: IPluginDictionary) => ViewMatrixPlugin[];\r\n\r\nexport default class ViewMatrix extends Emitter {\r\n\r\n\t/** The instance's target element. */\r\n\tpublic element: HTMLElement;\r\n\r\n\t/** The instance's options. */\r\n\tpublic readonly options: IViewMatrixOptions;\r\n\r\n\t/** The instance's children. */\r\n\tprivate children: HTMLElement[] = null;\r\n\r\n\t/** List of ViewMatrixPlugin instances associated with the instance. */\r\n\tprivate plugins: ViewMatrixPlugin[] = [];\r\n\r\n\t/** The class' instance defaults. */\r\n\tprivate readonly defaults: IViewMatrixOptions = {\r\n\t\t// state init\r\n\t\tstartingIndex: 0,\r\n\t\t// classes\r\n\t\tclassAliases: {\r\n\t\t\telement: 'element',\r\n\t\t\tinfinite: 'infinite',\r\n\t\t\tchild: 'child',\r\n\t\t\tcurrent: 'current',\r\n\t\t\tbehind: 'behind',\r\n\t\t\tahead: 'ahead',\r\n\t\t\tbeyond: 'beyond'\r\n\t\t},\r\n\t\tclassPrefix: 'vm-',\r\n\t\t// function\r\n\t\tadjacentCount: 1,\r\n\t\thandleZIndex: true,\r\n\t\tinfinite: false,\r\n\t\twrap: true\r\n\t};\r\n\r\n\t/** List of class names frequently used for children elements. */\r\n\tprivate classAliases: { [id: string]: string } = {};\r\n\r\n\t/** Current slide's index. */\r\n\tprivate currentIndex: number = 0;\r\n\r\n\t/**\r\n\t * Creates a new ViewMatrix instance.\r\n\t * @param rootSelector The target selector or element for the instance.\r\n\t * @param options Options for the instance.\r\n\t * @param plugins Plugins for the instance.\r\n\t */\r\n\tconstructor(\r\n\t\trootSelector: string | HTMLElement,\r\n\t\toptions?: IViewMatrixOptions,\r\n\t\tplugins?: ViewMatrixPlugin[] | PluginConstructor\r\n\t) {\r\n\t\tsuper();\r\n\r\n\t\t// get options\r\n\t\tthis.options = merge({}, this.defaults, options);\r\n\r\n\t\t// load plugins\r\n\t\tif (plugins) {\r\n\t\t\tif (plugins instanceof Array) {\r\n\t\t\t\tthis.plugins = Array.prototype.slice.call(plugins, 1);\r\n\t\t\t}\r\n\t\t\telse if (typeof plugins === 'function') {\r\n\t\t\t\tthis.plugins = plugins({\r\n\t\t\t\t\tAutoplayPlugin,\r\n\t\t\t\t\tTouchSwipePlugin\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// initialize\r\n\t\tthis.initialize(rootSelector);\r\n\t}\r\n\r\n\t/**\r\n\t * Refreshes the instance.\r\n\t * @param rootSelector The query selector to find the element.\r\n\t */\r\n\tpublic initialize(rootSelector: string | HTMLElement): void {\r\n\t\t// destroy first\r\n\t\tthis.destroy();\r\n\r\n\t\t// get a valid root selector\r\n\t\trootSelector = rootSelector != null ? rootSelector : null;\r\n\r\n\t\t// check if we have an object,\r\n\t\t// if we do, POPULATE ALL THE VARS\r\n\t\tif (typeof rootSelector === 'string') {\r\n\t\t\tthis.element = document.querySelector(rootSelector) || null;\r\n\t\t}\r\n\t\telse if (rootSelector instanceof HTMLElement) {\r\n\t\t\tthis.element = rootSelector;\r\n\t\t}\r\n\r\n\t\t// do we still have a target?\r\n\t\t// if not, throw a hissy fit\r\n\t\tif (!this.element) {\r\n\t\t\tthrow new Error('No valid element or selector provided to ViewMatrix instance');\r\n\t\t}\r\n\r\n\t\t// set children and index\r\n\t\tthis.children = [].slice.call(this.element.children) as HTMLElement[];\r\n\t\tthis.currentIndex = this.wrapIndex(this.currentIndex);\r\n\r\n\t\t// add classes to new children\r\n\t\tthis.prepareClassNames(this.options.classPrefix, this.options.classAliases);\r\n\t\tfor (const child of this.children) {\r\n\t\t\taddClassToElement(child, this.classAliases.child);\r\n\t\t}\r\n\r\n\t\t// add classes to the element\r\n\t\taddClassToElement(this.element, this.classAliases.element);\r\n\t\ttoggleClassInElement(this.element, this.classAliases.infinite, this.options.infinite);\r\n\r\n\t\t// initialize plugins\r\n\t\tthis.initializePlugins();\r\n\r\n\t\t// refresh slides\r\n\t\tthis.slide(this.currentIndex);\r\n\r\n\t\t// trigger event\r\n\t\tthis.emit('init', this.element, this.children);\r\n\t}\r\n\r\n\t/**\r\n\t * Destroys the ViewMatrix instance.\r\n\t */\r\n\tpublic destroy(): void {\r\n\t\t// reset all plugins\r\n\t\tthis.destroyPlugins();\r\n\r\n\t\t// reset current element\r\n\t\tif (this.element) {\r\n\t\t\tremoveClassFromElement(this.element, [\r\n\t\t\t\tthis.classAliases.element,\r\n\t\t\t\tthis.classAliases.infinite\r\n\t\t\t]);\r\n\t\t}\r\n\r\n\t\t// reset current children\r\n\t\tif (this.children && this.children.length > 0) {\r\n\t\t\tfor (const child of this.children) {\r\n\t\t\t\tremoveClassFromElement(child, [\r\n\t\t\t\t\tthis.classAliases.child,\r\n\t\t\t\t\tthis.classAliases.current,\r\n\t\t\t\t\tthis.classAliases.beyond,\r\n\t\t\t\t\tthis.classAliases.behind,\r\n\t\t\t\t\tthis.classAliases.ahead\r\n\t\t\t\t] );\r\n\t\t\t\tsetElementStyle(child, 'z-index', null);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// trigger event\r\n\t\tthis.emit('destroy', this.element, this.children);\r\n\r\n\t\t// reset vars\r\n\t\tthis.element = null;\r\n\t\tthis.children = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Changes the ViewMatrix's current slide.\r\n\t * @param index Slide to change to.\r\n\t */\r\n\tpublic slide(index: number): HTMLElement {\r\n\t\tif (!this.children || this.children.length === 0) { return null; }\r\n\r\n\t\t// wrap index for safety\r\n\t\tindex = this.wrapIndex(index);\r\n\r\n\t\t// calc adjacent and distance values\r\n\t\tconst childrenCount = this.children.length;\r\n\t\tconst adjacentCount = Math.max(1, this.options.adjacentCount);\r\n\t\tconst distanceCount = Math.floor((childrenCount - 1) / 2);\r\n\t\tconst indexCount = distanceCount + (childrenCount % 2 === 0 ? 1 : 0);\r\n\r\n\t\t// trigger before event\r\n\t\tthis.emit('slide:before', this.currentIndex, index, childrenCount);\r\n\r\n\t\t// add or remove classes from children\r\n\t\tfor (let i = 0; i < childrenCount; i++) {\r\n\t\t\tconst child = this.children[i];\r\n\t\t\tlet distance = i - index;\r\n\r\n\t\t\tif (this.options.infinite) {\r\n\t\t\t\t// if we're looping around in an infinite gallery,\r\n\t\t\t\t// we loop the distance as well\r\n\t\t\t\tif (distance > distanceCount) {\r\n\t\t\t\t\tdistance -= childrenCount;\r\n\t\t\t\t}\r\n\t\t\t\telse if (distance < -distanceCount) {\r\n\t\t\t\t\tdistance += childrenCount;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (i === index) {\r\n\t\t\t\t// this is the new current element\r\n\t\t\t\t// remove all old classes and add the \"vm-current\" one\r\n\t\t\t\tremoveClassFromElement(child, [\r\n\t\t\t\t\tthis.classAliases.ahead,\r\n\t\t\t\t\tthis.classAliases.behind,\r\n\t\t\t\t\tthis.classAliases.beyond\r\n\t\t\t\t]);\r\n\t\t\t\taddClassToElement(child, this.classAliases.current);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// this is not a current element,\r\n\t\t\t\t// figure out if it's before or after\r\n\t\t\t\tconst isAhead = distance > 0;\r\n\t\t\t\tconst isBehind = distance < 0;\r\n\r\n\t\t\t\t// check if it's beyond the adjacent scope\r\n\t\t\t\tconst isBeyond = Math.abs(distance) > adjacentCount;\r\n\r\n\t\t\t\t// remove \"current\" and toggle other classes\r\n\t\t\t\tremoveClassFromElement(child, this.classAliases.current);\r\n\t\t\t\ttoggleClassInElement(child, this.classAliases.beyond, isBeyond);\r\n\t\t\t\ttoggleClassInElement(child, this.classAliases.behind, isBehind);\r\n\t\t\t\ttoggleClassInElement(child, this.classAliases.ahead, isAhead);\r\n\t\t\t}\r\n\r\n\t\t\t// if we're handling z-index, fix it\r\n\t\t\tif (this.options.handleZIndex) {\r\n\t\t\t\tsetElementStyle(child, 'z-index', indexCount - Math.abs(distance));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// trigger event\r\n\t\tthis.emit('slide:after', this.currentIndex, index, childrenCount);\r\n\r\n\t\t// set new index\r\n\t\tthis.currentIndex = index;\r\n\r\n\t\t// return child element\r\n\t\treturn this.children[index];\r\n\t}\r\n\r\n\t/**\r\n\t * Increments the ViewMatrix's current slide.\r\n\t * @param inc Value to add to the current index.\r\n\t */\r\n\tpublic inc(increment: number): HTMLElement {\r\n\t\treturn this.slide(this.currentIndex + increment);\r\n\t}\r\n\r\n\t/**\r\n\t * Toggles a class in the instance's element.\r\n\t * @param name The class to toggle.\r\n\t * @param condition Condition to determine if class is added or removed.\r\n\t */\r\n\tpublic toggleClass(name: string, condition: boolean): void {\r\n\t\tif (this.element) {\r\n\t\t\ttoggleClassInElement(this.element, this.options.classPrefix + name, condition);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Caches all class names for future use.\r\n\t * @param prefix Prefix for all class aliases.\r\n\t * @param aliases String dictionary of class aliases.\r\n\t */\r\n\tprivate prepareClassNames(prefix: string = this.options.classPrefix, aliases: IViewMatrixClassAliases = this.options.classAliases): void {\r\n\t\tfor (const k in aliases) {\r\n\t\t\tif (Object.prototype.hasOwnProperty.call(aliases, k)) {\r\n\t\t\t\tthis.classAliases[k] = prefix + aliases[k];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Wraps a given \"index\" to be safe for the instance to use.\r\n\t * @param index Index to wrap.\r\n\t */\r\n\tprivate wrapIndex(index: number): number {\r\n\t\treturn this.options.wrap\r\n\t\t\t? wrap(index, 0, this.children.length)\r\n\t\t\t: clamp(index, 0, this.children.length);\r\n\t}\r\n\r\n\t/**\r\n\t * Invokes the `onInit` method on all registered plugins.\r\n\t */\r\n\tprivate initializePlugins(): void {\r\n\t\tfor (const p of this.plugins) {\r\n\t\t\tif (p) {\r\n\t\t\t\tp.instance = this;\r\n\t\t\t\tif (typeof p.onInit === 'function') {\r\n\t\t\t\t\tp.onInit();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Invokes the `onDestroy` method on all registered plugins.\r\n\t */\r\n\tprivate destroyPlugins(): void {\r\n\t\tfor (const p of this.plugins) {\r\n\t\t\tif (p && p.instance) {\r\n\t\t\t\tif (typeof p.onDestroy === 'function') {\r\n\t\t\t\t\tp.onDestroy();\r\n\t\t\t\t}\r\n\t\t\t\tp.instance = null;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","/**\r\n * Clears all extra spaces in a string.\r\n * @param str String to sanitize.\r\n */\r\nexport function sanitize(str: string): string {\r\n\treturn ('' + str).trim().replace(/\\s\\s+/g, ' ');\r\n}\r\n","export default class Point {\r\n\r\n\t/**\r\n\t * Returns a Point object from an event's coordinates.\r\n\t * @param event The event to extract the coordinates from.\r\n\t * @param touchIndex If the event is a TouchEvent, specify which touch should the method read from.\r\n\t */\r\n\tpublic static getFromEvent(event: MouseEvent | TouchEvent, touchIndex: number = 0): Point {\r\n\t\tconst point = new Point();\r\n\t\tif (event instanceof TouchEvent && event.touches) {\r\n\t\t\tpoint.x = event.touches[touchIndex].pageX;\r\n\t\t\tpoint.y = event.touches[touchIndex].pageY;\r\n\t\t}\r\n\t\telse if (event instanceof MouseEvent) {\r\n\t\t\tpoint.x = event.pageX;\r\n\t\t\tpoint.y = event.pageY;\r\n\t\t}\r\n\t\treturn point;\r\n\t}\r\n\r\n\t/**\r\n\t * Horizontal coordinate.\r\n\t */\r\n\tpublic x: number;\r\n\r\n\t/**\r\n\t * Vertical coordinate.\r\n\t */\r\n\tpublic y: number;\r\n\r\n\t/**\r\n\t * Creates a new 2D point.\r\n\t * @param x Horizontal coordinate.\r\n\t * @param y Vertical coordinate.\r\n\t */\r\n\tconstructor(x: number = 0, y: number = 0) {\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new instance of the point with the same coordinates.\r\n\t */\r\n\tpublic clone(): Point {\r\n\t\treturn new Point(this.x, this.y);\r\n\t}\r\n\r\n\t/**\r\n\t * Modifies the Point instance by adding coordinates from another `point`.\r\n\t * @param point The point to add.\r\n\t */\r\n\tpublic add(point: Point): Point {\r\n\t\tthis.x += point.x;\r\n\t\tthis.y += point.y;\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Modifies the Point instance by subtracting coordinates from another `point`.\r\n\t * @param point The point to subtract.\r\n\t */\r\n\tpublic sub(point: Point): Point {\r\n\t\tthis.x -= point.x;\r\n\t\tthis.y -= point.y;\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Modifies the Point instance by multiplying coordinates from another `point`.\r\n\t * @param point The point to multiply.\r\n\t */\r\n\tpublic multiply(point: Point): Point {\r\n\t\tthis.x *= point.x;\r\n\t\tthis.y *= point.y;\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Modifies the Point instance by dividing coordinates from another `point`.\r\n\t * @param point The point to divide.\r\n\t */\r\n\tpublic divide(point: Point): Point {\r\n\t\tthis.x /= point.x;\r\n\t\tthis.y /= point.y;\r\n\t\treturn this;\r\n\t}\r\n\r\n}\r\n","// based off of component-emitter package\r\n// https://github.com/component/emitter\r\n\r\nexport type EmitterCallback = (...args: any[]) => void;\r\n\r\nexport default abstract class Emitter {\r\n\r\n\t/**\r\n\t * List of callbacks maintained by the class.\r\n\t */\r\n\tprivate callbacks: { [id: string]: EmitterCallback[] } = {};\r\n\r\n\t/**\r\n\t * Listens on the given `event` with `callback`.\r\n\t * @param event The event to add the listener to.\r\n\t * @param callback Listener to invoke.\r\n\t */\r\n\tpublic on(event: string, callback: EmitterCallback): Emitter {\r\n\t\tif (typeof callback !== 'function') { return this; }\r\n\t\tconst key = '$' + event;\r\n\t\t(this.callbacks[key] = this.callbacks[key] || []).push(callback);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds an `event` listener that will be invoked a single time then automatically removed.\r\n\t * @param event The event to add the listener to.\r\n\t * @param callback Listener to invoke.\r\n\t */\r\n\tpublic once(event: string, callback: EmitterCallback): Emitter {\r\n\t\tif (typeof callback !== 'function') { return this; }\r\n\t\tfunction on() {\r\n\t\t\tthis.off(event, on);\r\n\t\t\tcallback.apply(this, arguments);\r\n\t\t}\r\n\t\t(on as any).callback = callback;\r\n\t\tthis.on(event, on);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the given callback for `event` or all registered callbacks.\r\n\t * @param event The event to remove the listener(s) from.\r\n\t * @param callback Specific listener to remove.\r\n\t */\r\n\tpublic off(event?: string, callback?: EmitterCallback): Emitter {\r\n\t\t// remove all events\r\n\t\tif (arguments.length === 0) {\r\n\t\t\tthis.callbacks = {};\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\t// remove specific event\r\n\t\tconst key = '$' + event;\r\n\t\tconst callbacks = this.callbacks[key];\r\n\t\tif (!callbacks) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\t// remove all handlers\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tdelete this.callbacks[key];\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\t// remove specific handler\r\n\t\tconst index = callbacks.indexOf(callback);\r\n\t\tif (index !== -1 && callbacks[index] === callback) {\r\n\t\t\tcallbacks.splice(index, 1);\r\n\t\t}\r\n\r\n\t\t// remove event-specific arrays without callbacks\r\n\t\t// to avoid memory leaks\r\n\t\tif (callbacks.length === 0) {\r\n\t\t\tdelete this.callbacks[key];\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Emits `event` with the given `args`.\r\n\t * @param event The event to trigger.\r\n\t * @param args Arguments to pass to each callback.\r\n\t */\r\n\tpublic emit(event: string, ...args: any[]): Emitter {\r\n\t\tlet callbacks = this.callbacks['$' + event];\r\n\t\tif (callbacks && callbacks.length > 0) {\r\n\t\t\tcallbacks = callbacks.slice(0);\r\n\t\t\tfor (const c of callbacks) {\r\n\t\t\t\tc.apply(this, args);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an array of callbacks for `event`.\r\n\t * @param event The event to get the listeners from.\r\n\t */\r\n\tpublic listeners(event: string): EmitterCallback[] {\r\n\t\treturn this.callbacks['$' + event] || [];\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if this emitter has `event` handlers.\r\n\t * @param event The event to verify.\r\n\t */\r\n\tpublic hasListeners(event: string): boolean {\r\n\t\treturn !!this.listeners(event).length;\r\n\t}\r\n\r\n}\r\n","/**\r\n * Clamps a given \"value\" between \"min\" and \"max\", so it never overflows.\r\n * @param value The value to clamp.\r\n * @param min Minimum value, inclusive.\r\n * @param max Maximum value, inclusive.\r\n */\r\nexport function clamp(value: number, min: number = 0, max: number = 1): number {\r\n\treturn Math.max(min, Math.min(max, value));\r\n}\r\n\r\n/**\r\n * Wraps a given \"value\" between \"min\" and \"max\", so it never overflows.\r\n * @param value The value to wrap.\r\n * @param min Minimum value, inclusive.\r\n * @param max Maximum value, exclusive.\r\n */\r\nexport function wrap(value: number = 0, min: number = 0, max: number = 1): number {\r\n\t// make sure we're using the right max\r\n\tmax = Math.max(min, max);\r\n\r\n\t// make math\r\n\tconst x = value - min;\r\n\tconst m = max - min;\r\n\treturn min + (x % m + m) % m;\r\n}\r\n"],"sourceRoot":""}